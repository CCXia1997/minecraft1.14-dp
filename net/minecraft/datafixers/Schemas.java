package net.minecraft.datafixers;

import net.minecraft.datafixers.fixes.ItemOminousBannerRenameFix;
import net.minecraft.datafixers.fixes.PointOfInterestReorganizationFix;
import net.minecraft.datafixers.fixes.OptionsAddTextBackgroundFix;
import net.minecraft.datafixers.schemas.Schema1931;
import net.minecraft.datafixers.schemas.Schema1929;
import net.minecraft.datafixers.fixes.EntityRavagerRenameFix;
import net.minecraft.datafixers.schemas.Schema1928;
import net.minecraft.datafixers.fixes.MapIdFix;
import net.minecraft.datafixers.fixes.NewVillageFix;
import net.minecraft.datafixers.schemas.Schema1920;
import net.minecraft.datafixers.fixes.VillagerProfessionFix;
import net.minecraft.datafixers.fixes.CatTypeFix;
import net.minecraft.datafixers.fixes.ChunkStatusFix2;
import net.minecraft.datafixers.schemas.Schema1909;
import net.minecraft.datafixers.fixes.ChunkLightRemoveFix;
import net.minecraft.datafixers.schemas.Schema1906;
import net.minecraft.datafixers.fixes.ChunkStatusFix;
import net.minecraft.datafixers.fixes.EntityCatSplitFix;
import net.minecraft.datafixers.schemas.Schema1904;
import net.minecraft.datafixers.fixes.ItemLoreToComponentFix;
import net.minecraft.datafixers.schemas.Schema1801;
import net.minecraft.datafixers.mapping.LegacyDyeItemMapping;
import net.minecraft.datafixers.schemas.Schema1800;
import net.minecraft.datafixers.fixes.AddTrappedChestFix;
import net.minecraft.datafixers.mapping.LegacyCoralFanBlockMapping;
import net.minecraft.datafixers.fixes.ObjectiveRenderTypeFix;
import net.minecraft.datafixers.fixes.TeamDisplayNameFix;
import net.minecraft.datafixers.fixes.ObjectiveDisplayNameFix;
import net.minecraft.datafixers.fixes.SwimStatsRenameFix;
import net.minecraft.datafixers.fixes.RecipeRenamingFix;
import net.minecraft.datafixers.fixes.EntityTheRenameningBlock;
import net.minecraft.datafixers.schemas.Schema1510;
import net.minecraft.datafixers.fixes.BiomesFix;
import net.minecraft.datafixers.fixes.LevelDataGeneratorOptionsFix;
import net.minecraft.datafixers.fixes.RecipeFix;
import net.minecraft.datafixers.fixes.AdvancementsFix;
import net.minecraft.datafixers.fixes.BlockEntityKeepPacked;
import net.minecraft.datafixers.fixes.LeavesFix;
import net.minecraft.datafixers.fixes.ItemStackEnchantmentFix;
import net.minecraft.datafixers.fixes.ChunkStructuresTemplateRenameFix;
import net.minecraft.datafixers.fixes.IglooMetadataRemovalFix;
import java.util.function.Function;
import com.mojang.datafixers.Typed;
import com.mojang.datafixers.DSL;
import net.minecraft.datafixers.fixes.ChoiceFix;
import net.minecraft.datafixers.fixes.EntityCodSalmonFix;
import net.minecraft.datafixers.schemas.Schema1486;
import net.minecraft.datafixers.fixes.HeightmapRenamingFix;
import net.minecraft.datafixers.fixes.EntityPufferfishRenameFix;
import net.minecraft.datafixers.schemas.Schema1483;
import net.minecraft.datafixers.schemas.Schema1481;
import net.minecraft.datafixers.mapping.LegacyCoralBlockMapping;
import com.google.common.collect.ImmutableMap;
import net.minecraft.datafixers.fixes.BlockNameFix;
import net.minecraft.datafixers.fixes.ColorlessShulkerEntityFix;
import net.minecraft.datafixers.schemas.Schema1470;
import net.minecraft.datafixers.fixes.ChunkToProtoChunkFix;
import net.minecraft.datafixers.schemas.Schema1466;
import net.minecraft.datafixers.fixes.EntityPaintingMotiveFix;
import net.minecraft.datafixers.schemas.Schema1460;
import net.minecraft.datafixers.fixes.BlockEntityCustomNameToComponentFix;
import net.minecraft.datafixers.fixes.ItemCustomNameToComponentFix;
import net.minecraft.datafixers.fixes.EntityCustomNameToComponentFix;
import net.minecraft.datafixers.fixes.EntityItemFrameDirectionFix;
import net.minecraft.datafixers.fixes.VillagerTradeFix;
import net.minecraft.datafixers.fixes.SavedDataVillageCropFix;
import net.minecraft.datafixers.schemas.Schema1451v7;
import net.minecraft.datafixers.fixes.BlockEntityJukeboxFix;
import net.minecraft.datafixers.fixes.StatsCounterFix;
import net.minecraft.datafixers.schemas.Schema1451v6;
import net.minecraft.datafixers.fixes.LevelFlatGeneratorInfoFix;
import net.minecraft.datafixers.fixes.BlockEntityBannerColorFix;
import net.minecraft.datafixers.fixes.EntityWolfColorFix;
import net.minecraft.datafixers.fixes.ItemInstanceSpawnEggFix;
import net.minecraft.datafixers.schemas.Schema1451v5;
import net.minecraft.datafixers.fixes.ItemInstanceTheFlatteningFix;
import net.minecraft.datafixers.fixes.BlockNameFlatteningFix;
import net.minecraft.datafixers.schemas.Schema1451v4;
import net.minecraft.datafixers.fixes.ItemInstanceMapIdFix;
import net.minecraft.datafixers.fixes.EntityBlockStateFix;
import net.minecraft.datafixers.schemas.Schema1451v3;
import net.minecraft.datafixers.fixes.BlockEntityBlockStateFix;
import net.minecraft.datafixers.schemas.Schema1451v2;
import net.minecraft.datafixers.fixes.ChunkPalettedStorageFix;
import net.minecraft.datafixers.schemas.Schema1451v1;
import net.minecraft.datafixers.schemas.Schema1451;
import net.minecraft.datafixers.fixes.BlockStateStructureTemplateFix;
import net.minecraft.datafixers.fixes.OptionsKeyTranslationFix;
import net.minecraft.datafixers.fixes.OptionsKeyLwjgl3Fix;
import net.minecraft.datafixers.fixes.BedItemColorFix;
import net.minecraft.datafixers.fixes.BedBlockEntityFix;
import net.minecraft.datafixers.schemas.Schema1125;
import net.minecraft.datafixers.fixes.WriteAndReadFix;
import net.minecraft.datafixers.schemas.Schema1022;
import net.minecraft.datafixers.fixes.OptionsLowerCaseLanguageFix;
import net.minecraft.datafixers.fixes.BlockEntityShulkerBoxColorFix;
import net.minecraft.datafixers.fixes.ItemShulkerBoxColorFix;
import net.minecraft.datafixers.fixes.EntityShulkerColorFix;
import net.minecraft.datafixers.schemas.Schema808;
import net.minecraft.datafixers.fixes.ItemWaterPotionFix;
import net.minecraft.datafixers.fixes.ItemBannerColorFix;
import net.minecraft.datafixers.fixes.EntityIdFix;
import net.minecraft.datafixers.schemas.Schema705;
import net.minecraft.datafixers.fixes.BlockEntityIdFix;
import net.minecraft.datafixers.schemas.Schema704;
import net.minecraft.datafixers.fixes.EntityHorseSplitFix;
import net.minecraft.datafixers.schemas.Schema703;
import net.minecraft.datafixers.fixes.EntityZombieSplitFix;
import net.minecraft.datafixers.schemas.Schema702;
import net.minecraft.datafixers.fixes.EntitySkeletonSplitFix;
import net.minecraft.datafixers.schemas.Schema701;
import net.minecraft.datafixers.fixes.EntityElderGuardianSplitFix;
import net.minecraft.datafixers.schemas.Schema700;
import net.minecraft.datafixers.fixes.OptionsForceVBOFix;
import net.minecraft.datafixers.fixes.EntityZombieVillagerTypeFix;
import net.minecraft.datafixers.fixes.FixItemName;
import java.util.Objects;
import net.minecraft.datafixers.schemas.SchemaIdentifierNormalize;
import net.minecraft.datafixers.fixes.FixChoiceTypes;
import net.minecraft.datafixers.schemas.Schema501;
import net.minecraft.datafixers.fixes.ItemWrittenBookPagesStrictJsonFix;
import net.minecraft.datafixers.fixes.EntityArmorStandSilentFix;
import net.minecraft.datafixers.fixes.EntityTippedArrowFix;
import net.minecraft.datafixers.schemas.Schema143;
import net.minecraft.datafixers.fixes.EntityRidingToPassengerFix;
import net.minecraft.datafixers.schemas.Schema135;
import net.minecraft.datafixers.fixes.EntityRedundantChanceTagsFix;
import net.minecraft.datafixers.fixes.EntityPaintingFix;
import net.minecraft.datafixers.fixes.EntityHorseSaddleFix;
import net.minecraft.datafixers.fixes.EntityHealthFix;
import net.minecraft.datafixers.fixes.EntityStringUuidFix;
import net.minecraft.datafixers.fixes.EntityMinecartIdentifiersFix;
import net.minecraft.datafixers.schemas.Schema107;
import net.minecraft.datafixers.fixes.MobSpawnerEntityIdentifiersFix;
import net.minecraft.datafixers.schemas.Schema106;
import net.minecraft.datafixers.fixes.ItemSpawnEggFix;
import net.minecraft.datafixers.fixes.ItemPotionFix;
import net.minecraft.datafixers.fixes.ItemIdFix;
import net.minecraft.datafixers.schemas.Schema102;
import net.minecraft.datafixers.fixes.BlockEntitySignTextStrictJsonFix;
import com.mojang.datafixers.DataFix;
import net.minecraft.datafixers.fixes.EntityEquipmentToArmorAndHandFix;
import net.minecraft.datafixers.schemas.Schema100;
import net.minecraft.datafixers.schemas.Schema99;
import net.minecraft.util.SystemUtil;
import com.mojang.datafixers.DataFixerBuilder;
import net.minecraft.SharedConstants;
import com.mojang.datafixers.DataFixer;
import com.mojang.datafixers.schemas.Schema;
import java.util.function.BiFunction;

public class Schemas
{
    private static final BiFunction<Integer, Schema, Schema> empty;
    private static final BiFunction<Integer, Schema, Schema> identNormalize;
    private static final DataFixer fixer;
    
    private static DataFixer create() {
        final DataFixerBuilder dataFixerBuilder1 = new DataFixerBuilder(SharedConstants.getGameVersion().getWorldVersion());
        build(dataFixerBuilder1);
        return dataFixerBuilder1.build(SystemUtil.getServerWorkerExecutor());
    }
    
    public static DataFixer getFixer() {
        return Schemas.fixer;
    }
    
    private static void build(final DataFixerBuilder builder) {
        final Schema schema2 = builder.addSchema(99, (BiFunction)Schema99::new);
        final Schema schema3 = builder.addSchema(100, (BiFunction)Schema100::new);
        builder.addFixer((DataFix)new EntityEquipmentToArmorAndHandFix(schema3, true));
        final Schema schema4 = builder.addSchema(101, (BiFunction)Schemas.empty);
        builder.addFixer((DataFix)new BlockEntitySignTextStrictJsonFix(schema4, false));
        final Schema schema5 = builder.addSchema(102, (BiFunction)Schema102::new);
        builder.addFixer((DataFix)new ItemIdFix(schema5, true));
        builder.addFixer((DataFix)new ItemPotionFix(schema5, false));
        final Schema schema6 = builder.addSchema(105, (BiFunction)Schemas.empty);
        builder.addFixer((DataFix)new ItemSpawnEggFix(schema6, true));
        final Schema schema7 = builder.addSchema(106, (BiFunction)Schema106::new);
        builder.addFixer((DataFix)new MobSpawnerEntityIdentifiersFix(schema7, true));
        final Schema schema8 = builder.addSchema(107, (BiFunction)Schema107::new);
        builder.addFixer((DataFix)new EntityMinecartIdentifiersFix(schema8, true));
        final Schema schema9 = builder.addSchema(108, (BiFunction)Schemas.empty);
        builder.addFixer((DataFix)new EntityStringUuidFix(schema9, true));
        final Schema schema10 = builder.addSchema(109, (BiFunction)Schemas.empty);
        builder.addFixer((DataFix)new EntityHealthFix(schema10, true));
        final Schema schema11 = builder.addSchema(110, (BiFunction)Schemas.empty);
        builder.addFixer((DataFix)new EntityHorseSaddleFix(schema11, true));
        final Schema schema12 = builder.addSchema(111, (BiFunction)Schemas.empty);
        builder.addFixer((DataFix)new EntityPaintingFix(schema12, true));
        final Schema schema13 = builder.addSchema(113, (BiFunction)Schemas.empty);
        builder.addFixer((DataFix)new EntityRedundantChanceTagsFix(schema13, true));
        final Schema schema14 = builder.addSchema(135, (BiFunction)Schema135::new);
        builder.addFixer((DataFix)new EntityRidingToPassengerFix(schema14, true));
        final Schema schema15 = builder.addSchema(143, (BiFunction)Schema143::new);
        builder.addFixer((DataFix)new EntityTippedArrowFix(schema15, true));
        final Schema schema16 = builder.addSchema(147, (BiFunction)Schemas.empty);
        builder.addFixer((DataFix)new EntityArmorStandSilentFix(schema16, true));
        final Schema schema17 = builder.addSchema(165, (BiFunction)Schemas.empty);
        builder.addFixer((DataFix)new ItemWrittenBookPagesStrictJsonFix(schema17, true));
        final Schema schema18 = builder.addSchema(501, (BiFunction)Schema501::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema18, "Add 1.10 entities fix", TypeReferences.ENTITY));
        final Schema schema19 = builder.addSchema(502, (BiFunction)Schemas.empty);
        builder.addFixer(FixItemName.create(schema19, "cooked_fished item renamer", string -> Objects.equals(SchemaIdentifierNormalize.normalize(string), "minecraft:cooked_fished") ? "minecraft:cooked_fish" : string));
        builder.addFixer((DataFix)new EntityZombieVillagerTypeFix(schema19, false));
        final Schema schema20 = builder.addSchema(505, (BiFunction)Schemas.empty);
        builder.addFixer((DataFix)new OptionsForceVBOFix(schema20, false));
        final Schema schema21 = builder.addSchema(700, (BiFunction)Schema700::new);
        builder.addFixer((DataFix)new EntityElderGuardianSplitFix(schema21, true));
        final Schema schema22 = builder.addSchema(701, (BiFunction)Schema701::new);
        builder.addFixer((DataFix)new EntitySkeletonSplitFix(schema22, true));
        final Schema schema23 = builder.addSchema(702, (BiFunction)Schema702::new);
        builder.addFixer((DataFix)new EntityZombieSplitFix(schema23, true));
        final Schema schema24 = builder.addSchema(703, (BiFunction)Schema703::new);
        builder.addFixer((DataFix)new EntityHorseSplitFix(schema24, true));
        final Schema schema25 = builder.addSchema(704, (BiFunction)Schema704::new);
        builder.addFixer((DataFix)new BlockEntityIdFix(schema25, true));
        final Schema schema26 = builder.addSchema(705, (BiFunction)Schema705::new);
        builder.addFixer((DataFix)new EntityIdFix(schema26, true));
        final Schema schema27 = builder.addSchema(804, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new ItemBannerColorFix(schema27, true));
        final Schema schema28 = builder.addSchema(806, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new ItemWaterPotionFix(schema28, false));
        final Schema schema29 = builder.addSchema(808, (BiFunction)Schema808::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema29, "added shulker box", TypeReferences.BLOCK_ENTITY));
        final Schema schema30 = builder.addSchema(808, 1, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new EntityShulkerColorFix(schema30, false));
        final Schema schema31 = builder.addSchema(813, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new ItemShulkerBoxColorFix(schema31, false));
        builder.addFixer((DataFix)new BlockEntityShulkerBoxColorFix(schema31, false));
        final Schema schema32 = builder.addSchema(816, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new OptionsLowerCaseLanguageFix(schema32, false));
        final Schema schema33 = builder.addSchema(820, (BiFunction)Schemas.identNormalize);
        builder.addFixer(FixItemName.create(schema33, "totem item renamer", string -> Objects.equals(string, "minecraft:totem") ? "minecraft:totem_of_undying" : string));
        final Schema schema34 = builder.addSchema(1022, (BiFunction)Schema1022::new);
        builder.addFixer((DataFix)new WriteAndReadFix(schema34, "added shoulder entities to players", TypeReferences.PLAYER));
        final Schema schema35 = builder.addSchema(1125, (BiFunction)Schema1125::new);
        builder.addFixer((DataFix)new BedBlockEntityFix(schema35, true));
        builder.addFixer((DataFix)new BedItemColorFix(schema35, false));
        final Schema schema36 = builder.addSchema(1344, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new OptionsKeyLwjgl3Fix(schema36, false));
        final Schema schema37 = builder.addSchema(1446, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new OptionsKeyTranslationFix(schema37, false));
        final Schema schema38 = builder.addSchema(1450, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new BlockStateStructureTemplateFix(schema38, false));
        final Schema schema39 = builder.addSchema(1451, (BiFunction)Schema1451::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema39, "AddTrappedChestFix", TypeReferences.BLOCK_ENTITY));
        final Schema schema40 = builder.addSchema(1451, 1, (BiFunction)Schema1451v1::new);
        builder.addFixer((DataFix)new ChunkPalettedStorageFix(schema40, true));
        final Schema schema41 = builder.addSchema(1451, 2, (BiFunction)Schema1451v2::new);
        builder.addFixer((DataFix)new BlockEntityBlockStateFix(schema41, true));
        final Schema schema42 = builder.addSchema(1451, 3, (BiFunction)Schema1451v3::new);
        builder.addFixer((DataFix)new EntityBlockStateFix(schema42, true));
        builder.addFixer((DataFix)new ItemInstanceMapIdFix(schema42, false));
        final Schema schema43 = builder.addSchema(1451, 4, (BiFunction)Schema1451v4::new);
        builder.addFixer((DataFix)new BlockNameFlatteningFix(schema43, true));
        builder.addFixer((DataFix)new ItemInstanceTheFlatteningFix(schema43, false));
        final Schema schema44 = builder.addSchema(1451, 5, (BiFunction)Schema1451v5::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema44, "RemoveNoteBlockFlowerPotFix", TypeReferences.BLOCK_ENTITY));
        builder.addFixer((DataFix)new ItemInstanceSpawnEggFix(schema44, false));
        builder.addFixer((DataFix)new EntityWolfColorFix(schema44, false));
        builder.addFixer((DataFix)new BlockEntityBannerColorFix(schema44, false));
        builder.addFixer((DataFix)new LevelFlatGeneratorInfoFix(schema44, false));
        final Schema schema45 = builder.addSchema(1451, 6, (BiFunction)Schema1451v6::new);
        builder.addFixer((DataFix)new StatsCounterFix(schema45, true));
        builder.addFixer((DataFix)new BlockEntityJukeboxFix(schema45, false));
        final Schema schema46 = builder.addSchema(1451, 7, (BiFunction)Schema1451v7::new);
        builder.addFixer((DataFix)new SavedDataVillageCropFix(schema46, true));
        final Schema schema47 = builder.addSchema(1451, 7, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new VillagerTradeFix(schema47, false));
        final Schema schema48 = builder.addSchema(1456, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new EntityItemFrameDirectionFix(schema48, false));
        final Schema schema49 = builder.addSchema(1458, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new EntityCustomNameToComponentFix(schema49, false));
        builder.addFixer((DataFix)new ItemCustomNameToComponentFix(schema49, false));
        builder.addFixer((DataFix)new BlockEntityCustomNameToComponentFix(schema49, false));
        final Schema schema50 = builder.addSchema(1460, (BiFunction)Schema1460::new);
        builder.addFixer((DataFix)new EntityPaintingMotiveFix(schema50, false));
        final Schema schema51 = builder.addSchema(1466, (BiFunction)Schema1466::new);
        builder.addFixer((DataFix)new ChunkToProtoChunkFix(schema51, true));
        final Schema schema52 = builder.addSchema(1470, (BiFunction)Schema1470::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema52, "Add 1.13 entities fix", TypeReferences.ENTITY));
        final Schema schema53 = builder.addSchema(1474, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new ColorlessShulkerEntityFix(schema53, false));
        builder.addFixer(BlockNameFix.create(schema53, "Colorless shulker block fixer", string -> Objects.equals(SchemaIdentifierNormalize.normalize(string), "minecraft:purple_shulker_box") ? "minecraft:shulker_box" : string));
        builder.addFixer(FixItemName.create(schema53, "Colorless shulker item fixer", string -> Objects.equals(SchemaIdentifierNormalize.normalize(string), "minecraft:purple_shulker_box") ? "minecraft:shulker_box" : string));
        final Schema schema54 = builder.addSchema(1475, (BiFunction)Schemas.identNormalize);
        builder.addFixer(BlockNameFix.create(schema54, "Flowing fixer", string -> ImmutableMap.<String, String>of("minecraft:flowing_water", "minecraft:water", "minecraft:flowing_lava", "minecraft:lava").getOrDefault(string, string)));
        final Schema schema55 = builder.addSchema(1480, (BiFunction)Schemas.identNormalize);
        builder.addFixer(BlockNameFix.create(schema55, "Rename coral blocks", string -> LegacyCoralBlockMapping.MAP.getOrDefault(string, string)));
        builder.addFixer(FixItemName.create(schema55, "Rename coral items", string -> LegacyCoralBlockMapping.MAP.getOrDefault(string, string)));
        final Schema schema56 = builder.addSchema(1481, (BiFunction)Schema1481::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema56, "Add conduit", TypeReferences.BLOCK_ENTITY));
        final Schema schema57 = builder.addSchema(1483, (BiFunction)Schema1483::new);
        builder.addFixer((DataFix)new EntityPufferfishRenameFix(schema57, true));
        builder.addFixer(FixItemName.create(schema57, "Rename pufferfish egg item", string -> EntityPufferfishRenameFix.RENAMED_FISHES.getOrDefault(string, string)));
        final Schema schema58 = builder.addSchema(1484, (BiFunction)Schemas.identNormalize);
        builder.addFixer(FixItemName.create(schema58, "Rename seagrass items", string -> ImmutableMap.<String, String>of("minecraft:sea_grass", "minecraft:seagrass", "minecraft:tall_sea_grass", "minecraft:tall_seagrass").getOrDefault(string, string)));
        builder.addFixer(BlockNameFix.create(schema58, "Rename seagrass blocks", string -> ImmutableMap.<String, String>of("minecraft:sea_grass", "minecraft:seagrass", "minecraft:tall_sea_grass", "minecraft:tall_seagrass").getOrDefault(string, string)));
        builder.addFixer((DataFix)new HeightmapRenamingFix(schema58, false));
        final Schema schema59 = builder.addSchema(1486, (BiFunction)Schema1486::new);
        builder.addFixer((DataFix)new EntityCodSalmonFix(schema59, true));
        builder.addFixer(FixItemName.create(schema59, "Rename cod/salmon egg items", string -> EntityCodSalmonFix.SPAWN_EGGS.getOrDefault(string, string)));
        final Schema schema60 = builder.addSchema(1487, (BiFunction)Schemas.identNormalize);
        builder.addFixer(FixItemName.create(schema60, "Rename prismarine_brick(s)_* blocks", string -> ImmutableMap.<String, String>of("minecraft:prismarine_bricks_slab", "minecraft:prismarine_brick_slab", "minecraft:prismarine_bricks_stairs", "minecraft:prismarine_brick_stairs").getOrDefault(string, string)));
        builder.addFixer(BlockNameFix.create(schema60, "Rename prismarine_brick(s)_* items", string -> ImmutableMap.<String, String>of("minecraft:prismarine_bricks_slab", "minecraft:prismarine_brick_slab", "minecraft:prismarine_bricks_stairs", "minecraft:prismarine_brick_stairs").getOrDefault(string, string)));
        final Schema schema61 = builder.addSchema(1488, (BiFunction)Schemas.identNormalize);
        builder.addFixer(BlockNameFix.create(schema61, "Rename kelp/kelptop", string -> ImmutableMap.<String, String>of("minecraft:kelp_top", "minecraft:kelp", "minecraft:kelp", "minecraft:kelp_plant").getOrDefault(string, string)));
        builder.addFixer(FixItemName.create(schema61, "Rename kelptop", string -> Objects.equals(string, "minecraft:kelp_top") ? "minecraft:kelp" : string));
        builder.addFixer((DataFix)new ChoiceFix(schema61, false, "Command block block entity custom name fix", TypeReferences.BLOCK_ENTITY, "minecraft:command_block") {
            @Override
            protected Typed<?> transform(final Typed<?> typed) {
                return typed.update(DSL.remainderFinder(), (Function)EntityCustomNameToComponentFix::fixCustomName);
            }
        });
        builder.addFixer((DataFix)new ChoiceFix(schema61, false, "Command block minecart custom name fix", TypeReferences.ENTITY, "minecraft:commandblock_minecart") {
            @Override
            protected Typed<?> transform(final Typed<?> typed) {
                return typed.update(DSL.remainderFinder(), (Function)EntityCustomNameToComponentFix::fixCustomName);
            }
        });
        builder.addFixer((DataFix)new IglooMetadataRemovalFix(schema61, false));
        final Schema schema62 = builder.addSchema(1490, (BiFunction)Schemas.identNormalize);
        builder.addFixer(BlockNameFix.create(schema62, "Rename melon_block", string -> Objects.equals(string, "minecraft:melon_block") ? "minecraft:melon" : string));
        builder.addFixer(FixItemName.create(schema62, "Rename melon_block/melon/speckled_melon", string -> ImmutableMap.<String, String>of("minecraft:melon_block", "minecraft:melon", "minecraft:melon", "minecraft:melon_slice", "minecraft:speckled_melon", "minecraft:glistering_melon_slice").getOrDefault(string, string)));
        final Schema schema63 = builder.addSchema(1492, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new ChunkStructuresTemplateRenameFix(schema63, false));
        final Schema schema64 = builder.addSchema(1494, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new ItemStackEnchantmentFix(schema64, false));
        final Schema schema65 = builder.addSchema(1496, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new LeavesFix(schema65, false));
        final Schema schema66 = builder.addSchema(1500, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new BlockEntityKeepPacked(schema66, false));
        final Schema schema67 = builder.addSchema(1501, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new AdvancementsFix(schema67, false));
        final Schema schema68 = builder.addSchema(1502, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new RecipeFix(schema68, false));
        final Schema schema69 = builder.addSchema(1506, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new LevelDataGeneratorOptionsFix(schema69, false));
        final Schema schema70 = builder.addSchema(1508, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new BiomesFix(schema70, false));
        final Schema schema71 = builder.addSchema(1510, (BiFunction)Schema1510::new);
        builder.addFixer(BlockNameFix.create(schema71, "Block renamening fix", string -> EntityTheRenameningBlock.BLOCKS.getOrDefault(string, string)));
        builder.addFixer(FixItemName.create(schema71, "Item renamening fix", string -> EntityTheRenameningBlock.ITEMS.getOrDefault(string, string)));
        builder.addFixer((DataFix)new RecipeRenamingFix(schema71, false));
        builder.addFixer((DataFix)new EntityTheRenameningBlock(schema71, true));
        builder.addFixer((DataFix)new SwimStatsRenameFix(schema71, false));
        final Schema schema72 = builder.addSchema(1514, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new ObjectiveDisplayNameFix(schema72, false));
        builder.addFixer((DataFix)new TeamDisplayNameFix(schema72, false));
        builder.addFixer((DataFix)new ObjectiveRenderTypeFix(schema72, false));
        final Schema schema73 = builder.addSchema(1515, (BiFunction)Schemas.identNormalize);
        builder.addFixer(BlockNameFix.create(schema73, "Rename coral fan blocks", string -> LegacyCoralFanBlockMapping.MAP.getOrDefault(string, string)));
        final Schema schema74 = builder.addSchema(1624, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new AddTrappedChestFix(schema74, false));
        final Schema schema75 = builder.addSchema(1800, (BiFunction)Schema1800::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema75, "Added 1.14 mobs fix", TypeReferences.ENTITY));
        builder.addFixer(FixItemName.create(schema75, "Rename dye items", string -> LegacyDyeItemMapping.MAP.getOrDefault(string, string)));
        final Schema schema76 = builder.addSchema(1801, (BiFunction)Schema1801::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema76, "Added Illager Beast", TypeReferences.ENTITY));
        final Schema schema77 = builder.addSchema(1802, (BiFunction)Schemas.identNormalize);
        builder.addFixer(BlockNameFix.create(schema77, "Rename sign blocks & stone slabs", string -> ImmutableMap.<String, String>of("minecraft:stone_slab", "minecraft:smooth_stone_slab", "minecraft:sign", "minecraft:oak_sign", "minecraft:wall_sign", "minecraft:oak_wall_sign").getOrDefault(string, string)));
        builder.addFixer(FixItemName.create(schema77, "Rename sign item & stone slabs", string -> ImmutableMap.<String, String>of("minecraft:stone_slab", "minecraft:smooth_stone_slab", "minecraft:sign", "minecraft:oak_sign").getOrDefault(string, string)));
        final Schema schema78 = builder.addSchema(1803, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new ItemLoreToComponentFix(schema78, false));
        final Schema schema79 = builder.addSchema(1904, (BiFunction)Schema1904::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema79, "Added Cats", TypeReferences.ENTITY));
        builder.addFixer((DataFix)new EntityCatSplitFix(schema79, false));
        final Schema schema80 = builder.addSchema(1905, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new ChunkStatusFix(schema80, false));
        final Schema schema81 = builder.addSchema(1906, (BiFunction)Schema1906::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema81, "Add POI Blocks", TypeReferences.BLOCK_ENTITY));
        final Schema schema82 = builder.addSchema(1907, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new ChunkLightRemoveFix(schema82, false));
        final Schema schema83 = builder.addSchema(1909, (BiFunction)Schema1909::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema83, "Add jigsaw", TypeReferences.BLOCK_ENTITY));
        final Schema schema84 = builder.addSchema(1911, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new ChunkStatusFix2(schema84, false));
        final Schema schema85 = builder.addSchema(1917, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new CatTypeFix(schema85, false));
        final Schema schema86 = builder.addSchema(1918, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new VillagerProfessionFix(schema86, "minecraft:villager"));
        builder.addFixer((DataFix)new VillagerProfessionFix(schema86, "minecraft:zombie_villager"));
        final Schema schema87 = builder.addSchema(1920, (BiFunction)Schema1920::new);
        builder.addFixer((DataFix)new NewVillageFix(schema87, false));
        builder.addFixer((DataFix)new FixChoiceTypes(schema87, "Add campfire", TypeReferences.BLOCK_ENTITY));
        final Schema schema88 = builder.addSchema(1925, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new MapIdFix(schema88, false));
        final Schema schema89 = builder.addSchema(1928, (BiFunction)Schema1928::new);
        builder.addFixer((DataFix)new EntityRavagerRenameFix(schema89, true));
        builder.addFixer(FixItemName.create(schema89, "Rename ravager egg item", string -> EntityRavagerRenameFix.ITEMS.getOrDefault(string, string)));
        final Schema schema90 = builder.addSchema(1929, (BiFunction)Schema1929::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema90, "Add Wandering Trader and Trader Llama", TypeReferences.ENTITY));
        final Schema schema91 = builder.addSchema(1931, (BiFunction)Schema1931::new);
        builder.addFixer((DataFix)new FixChoiceTypes(schema91, "Added Fox", TypeReferences.ENTITY));
        final Schema schema92 = builder.addSchema(1936, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new OptionsAddTextBackgroundFix(schema92, false));
        final Schema schema93 = builder.addSchema(1946, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new PointOfInterestReorganizationFix(schema93, false));
        final Schema schema94 = builder.addSchema(1948, (BiFunction)Schemas.identNormalize);
        builder.addFixer((DataFix)new ItemOminousBannerRenameFix(schema94, false));
    }
    
    static {
        empty = Schema::new;
        identNormalize = SchemaIdentifierNormalize::new;
        fixer = create();
    }
}
