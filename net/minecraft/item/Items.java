package net.minecraft.item;

import net.minecraft.block.entity.BannerPattern;
import net.minecraft.sound.SoundEvents;
import net.minecraft.util.DyeColor;
import net.minecraft.entity.vehicle.BoatEntity;
import net.minecraft.entity.vehicle.AbstractMinecartEntity;
import net.minecraft.fluid.Fluid;
import net.minecraft.fluid.Fluids;
import net.minecraft.entity.decoration.AbstractDecorationEntity;
import net.minecraft.entity.EntityType;
import net.minecraft.entity.EquipmentSlot;
import net.minecraft.util.Rarity;
import net.minecraft.block.Blocks;
import net.minecraft.util.Identifier;
import net.minecraft.util.registry.Registry;
import net.minecraft.block.Block;

public class Items
{
    public static final Item AIR;
    public static final Item STONE;
    public static final Item GRANITE;
    public static final Item POLISHED_GRANITE;
    public static final Item DIORITE;
    public static final Item POLISHED_DIORITE;
    public static final Item ANDESITE;
    public static final Item POLISHED_ANDESITE;
    public static final Item GRASS_BLOCK;
    public static final Item DIRT;
    public static final Item COARSE_DIRT;
    public static final Item PODZOL;
    public static final Item COBBLESTONE;
    public static final Item OAK_PLANKS;
    public static final Item SPRUCE_PLANKS;
    public static final Item BIRCH_PLANKS;
    public static final Item JUNGLE_PLANKS;
    public static final Item ACACIA_PLANKS;
    public static final Item DARK_OAK_PLANKS;
    public static final Item OAK_SAPLING;
    public static final Item SPRUCE_SAPLING;
    public static final Item BIRCH_SAPLING;
    public static final Item JUNGLE_SAPLING;
    public static final Item ACACIA_SAPLING;
    public static final Item DARK_OAK_SAPLING;
    public static final Item BEDROCK;
    public static final Item SAND;
    public static final Item RED_SAND;
    public static final Item GRAVEL;
    public static final Item GOLD_ORE;
    public static final Item IRON_ORE;
    public static final Item COAL_ORE;
    public static final Item OAK_LOG;
    public static final Item SPRUCE_LOG;
    public static final Item BIRCH_LOG;
    public static final Item JUNGLE_LOG;
    public static final Item ACACIA_LOG;
    public static final Item DARK_OAK_LOG;
    public static final Item STRIPPED_OAK_LOG;
    public static final Item STRIPPED_SPRUCE_LOG;
    public static final Item STRIPPED_BIRCH_LOG;
    public static final Item STRIPPED_JUNGLE_LOG;
    public static final Item STRIPPED_ACACIA_LOG;
    public static final Item STRIPPED_DARK_OAK_LOG;
    public static final Item STRIPPED_OAK_WOOD;
    public static final Item STRIPPED_SPRUCE_WOOD;
    public static final Item STRIPPED_BIRCH_WOOD;
    public static final Item STRIPPED_JUNGLE_WOOD;
    public static final Item STRIPPED_ACACIA_WOOD;
    public static final Item STRIPPED_DARK_OAK_WOOD;
    public static final Item OAK_WOOD;
    public static final Item SPRUCE_WOOD;
    public static final Item BIRCH_WOOD;
    public static final Item JUNGLE_WOOD;
    public static final Item ACACIA_WOOD;
    public static final Item DARK_OAK_WOOD;
    public static final Item OAK_LEAVES;
    public static final Item SPRUCE_LEAVES;
    public static final Item BIRCH_LEAVES;
    public static final Item JUNGLE_LEAVES;
    public static final Item ACACIA_LEAVES;
    public static final Item DARK_OAK_LEAVES;
    public static final Item SPONGE;
    public static final Item WET_SPONGE;
    public static final Item GLASS;
    public static final Item LAPIS_ORE;
    public static final Item LAPIS_BLOCK;
    public static final Item DISPENSER;
    public static final Item SANDSTONE;
    public static final Item CHISELED_SANDSTONE;
    public static final Item CUT_SANDSTONE;
    public static final Item NOTE_BLOCK;
    public static final Item POWERED_RAIL;
    public static final Item DETECTOR_RAIL;
    public static final Item STICKY_PISTON;
    public static final Item COBWEB;
    public static final Item GRASS;
    public static final Item FERN;
    public static final Item DEAD_BUSH;
    public static final Item SEAGRASS;
    public static final Item SEA_PICKLE;
    public static final Item PISTON;
    public static final Item WHITE_WOOL;
    public static final Item ORANGE_WOOL;
    public static final Item MAGENTA_WOOL;
    public static final Item LIGHT_BLUE_WOOL;
    public static final Item YELLOW_WOOL;
    public static final Item LIME_WOOL;
    public static final Item PINK_WOOL;
    public static final Item GRAY_WOOL;
    public static final Item LIGHT_GRAY_WOOL;
    public static final Item CYAN_WOOL;
    public static final Item PURPLE_WOOL;
    public static final Item BLUE_WOOL;
    public static final Item BROWN_WOOL;
    public static final Item GREEN_WOOL;
    public static final Item RED_WOOL;
    public static final Item BLACK_WOOL;
    public static final Item DANDELION;
    public static final Item POPPY;
    public static final Item BLUE_ORCHID;
    public static final Item ALLIUM;
    public static final Item AZURE_BLUET;
    public static final Item RED_TULIP;
    public static final Item ORANGE_TULIP;
    public static final Item WHITE_TULIP;
    public static final Item PINK_TULIP;
    public static final Item OXEYE_DAISY;
    public static final Item CORNFLOWER;
    public static final Item LILY_OF_THE_VALLEY;
    public static final Item WITHER_ROSE;
    public static final Item BROWN_MUSHROOM;
    public static final Item RED_MUSHROOM;
    public static final Item GOLD_BLOCK;
    public static final Item IRON_BLOCK;
    public static final Item OAK_SLAB;
    public static final Item SPRUCE_SLAB;
    public static final Item BIRCH_SLAB;
    public static final Item JUNGLE_SLAB;
    public static final Item ACACIA_SLAB;
    public static final Item DARK_OAK_SLAB;
    public static final Item STONE_SLAB;
    public static final Item SMOOTH_STONE_SLAB;
    public static final Item SANDSTONE_SLAB;
    public static final Item CUT_SANDSTONE_SLAB;
    public static final Item PETRIFIED_OAK_SLAB;
    public static final Item COBBLESTONE_SLAB;
    public static final Item BRICK_SLAB;
    public static final Item STONE_BRICK_SLAB;
    public static final Item NETHER_BRICK_SLAB;
    public static final Item QUARTZ_SLAB;
    public static final Item RED_SANDSTONE_SLAB;
    public static final Item CUT_RED_SANDSTONE_SLAB;
    public static final Item PURPUR_SLAB;
    public static final Item PRISMARINE_SLAB;
    public static final Item PRISMARINE_BRICK_SLAB;
    public static final Item DARK_PRISMARINE_SLAB;
    public static final Item SMOOTH_QUARTZ;
    public static final Item SMOOTH_RED_SANDSTONE;
    public static final Item SMOOTH_SANDSTONE;
    public static final Item SMOOTH_STONE;
    public static final Item BRICKS;
    public static final Item TNT;
    public static final Item BOOKSHELF;
    public static final Item MOSSY_COBBLESTONE;
    public static final Item OBSIDIAN;
    public static final Item TORCH;
    public static final Item END_ROD;
    public static final Item CHORUS_PLANT;
    public static final Item CHORUS_FLOWER;
    public static final Item PURPUR_BLOCK;
    public static final Item PURPUR_PILLAR;
    public static final Item PURPUR_STAIRS;
    public static final Item SPAWNER;
    public static final Item OAK_STAIRS;
    public static final Item CHEST;
    public static final Item DIAMOND_ORE;
    public static final Item DIAMOND_BLOCK;
    public static final Item CRAFTING_TABLE;
    public static final Item FARMLAND;
    public static final Item FURNACE;
    public static final Item LADDER;
    public static final Item RAIL;
    public static final Item COBBLESTONE_STAIRS;
    public static final Item LEVER;
    public static final Item STONE_PRESSURE_PLATE;
    public static final Item OAK_PRESSURE_PLATE;
    public static final Item SPRUCE_PRESSURE_PLATE;
    public static final Item BIRCH_PRESSURE_PLATE;
    public static final Item JUNGLE_PRESSURE_PLATE;
    public static final Item ACACIA_PRESSURE_PLATE;
    public static final Item DARK_OAK_PRESSURE_PLATE;
    public static final Item REDSTONE_ORE;
    public static final Item REDSTONE_TORCH;
    public static final Item STONE_BUTTON;
    public static final Item SNOW;
    public static final Item ICE;
    public static final Item SNOW_BLOCK;
    public static final Item CACTUS;
    public static final Item CLAY;
    public static final Item JUKEBOX;
    public static final Item OAK_FENCE;
    public static final Item SPRUCE_FENCE;
    public static final Item BIRCH_FENCE;
    public static final Item JUNGLE_FENCE;
    public static final Item ACACIA_FENCE;
    public static final Item DARK_OAK_FENCE;
    public static final Item PUMPKIN;
    public static final Item CARVED_PUMPKIN;
    public static final Item NETHERRACK;
    public static final Item SOUL_SAND;
    public static final Item GLOWSTONE;
    public static final Item JACK_O_LANTERN;
    public static final Item OAK_TRAPDOOR;
    public static final Item SPRUCE_TRAPDOOR;
    public static final Item BIRCH_TRAPDOOR;
    public static final Item JUNGLE_TRAPDOOR;
    public static final Item ACACIA_TRAPDOOR;
    public static final Item DARK_OAK_TRAPDOOR;
    public static final Item INFESTED_STONE;
    public static final Item INFESTED_COBBLESTONE;
    public static final Item INFESTED_STONE_BRICKS;
    public static final Item INFESTED_MOSSY_STONE_BRICKS;
    public static final Item INFESTED_CRACKED_STONE_BRICKS;
    public static final Item INFESTED_CHISELED_STONE_BRICKS;
    public static final Item STONE_BRICKS;
    public static final Item MOSSY_STONE_BRICKS;
    public static final Item CRACKED_STONE_BRICKS;
    public static final Item CHISELED_STONE_BRICKS;
    public static final Item BROWN_MUSHROOM_BLOCK;
    public static final Item RED_MUSHROOM_BLOCK;
    public static final Item MUSHROOM_STEM;
    public static final Item IRON_BARS;
    public static final Item GLASS_PANE;
    public static final Item MELON;
    public static final Item VINE;
    public static final Item OAK_FENCE_GATE;
    public static final Item SPRUCE_FENCE_GATE;
    public static final Item BIRCH_FENCE_GATE;
    public static final Item JUNGLE_FENCE_GATE;
    public static final Item ACACIA_FENCE_GATE;
    public static final Item DARK_OAK_FENCE_GATE;
    public static final Item BRICK_STAIRS;
    public static final Item STONE_BRICK_STAIRS;
    public static final Item MYCELIUM;
    public static final Item LILY_PAD;
    public static final Item NETHER_BRICKS;
    public static final Item NETHER_BRICK_FENCE;
    public static final Item NETHER_BRICK_STAIRS;
    public static final Item ENCHANTING_TABLE;
    public static final Item END_PORTAL_FRAME;
    public static final Item END_STONE;
    public static final Item END_STONE_BRICKS;
    public static final Item DRAGON_EGG;
    public static final Item REDSTONE_LAMP;
    public static final Item SANDSTONE_STAIRS;
    public static final Item EMERALD_ORE;
    public static final Item ENDER_CHEST;
    public static final Item TRIPWIRE_HOOK;
    public static final Item EMERALD_BLOCK;
    public static final Item SPRUCE_STAIRS;
    public static final Item BIRCH_STAIRS;
    public static final Item JUNGLE_STAIRS;
    public static final Item COMMAND_BLOCK;
    public static final Item BEACON;
    public static final Item COBBLESTONE_WALL;
    public static final Item MOSSY_COBBLESTONE_WALL;
    public static final Item BRICK_WALL;
    public static final Item PRISMARINE_WALL;
    public static final Item RED_SANDSTONE_WALL;
    public static final Item MOSSY_STONE_BRICK_WALL;
    public static final Item GRANITE_WALL;
    public static final Item STONE_BRICK_WALL;
    public static final Item NETHER_BRICK_WALL;
    public static final Item ANDESITE_WALL;
    public static final Item RED_NETHER_BRICK_WALL;
    public static final Item SANDSTONE_WALL;
    public static final Item END_STONE_BRICK_WALL;
    public static final Item DIORITE_WALL;
    public static final Item OAK_BUTTON;
    public static final Item SPRUCE_BUTTON;
    public static final Item BIRCH_BUTTON;
    public static final Item JUNGLE_BUTTON;
    public static final Item ACACIA_BUTTON;
    public static final Item DARK_OAK_BUTTON;
    public static final Item ANVIL;
    public static final Item CHIPPED_ANVIL;
    public static final Item DAMAGED_ANVIL;
    public static final Item TRAPPED_CHEST;
    public static final Item LIGHT_WEIGHTED_PRESSURE_PLATE;
    public static final Item HEAVY_WEIGHTED_PRESSURE_PLATE;
    public static final Item DAYLIGHT_DETECTOR;
    public static final Item REDSTONE_BLOCK;
    public static final Item NETHER_QUARTZ_ORE;
    public static final Item HOPPER;
    public static final Item CHISELED_QUARTZ_BLOCK;
    public static final Item QUARTZ_BLOCK;
    public static final Item QUARTZ_PILLAR;
    public static final Item QUARTZ_STAIRS;
    public static final Item ACTIVATOR_RAIL;
    public static final Item DROPPER;
    public static final Item WHITE_TERRACOTTA;
    public static final Item ORANGE_TERRACOTTA;
    public static final Item MAGENTA_TERRACOTTA;
    public static final Item LIGHT_BLUE_TERRACOTTA;
    public static final Item YELLOW_TERRACOTTA;
    public static final Item LIME_TERRACOTTA;
    public static final Item PINK_TERRACOTTA;
    public static final Item GRAY_TERRACOTTA;
    public static final Item LIGHT_GRAY_TERRACOTTA;
    public static final Item CYAN_TERRACOTTA;
    public static final Item PURPLE_TERRACOTTA;
    public static final Item BLUE_TERRACOTTA;
    public static final Item BROWN_TERRACOTTA;
    public static final Item GREEN_TERRACOTTA;
    public static final Item RED_TERRACOTTA;
    public static final Item BLACK_TERRACOTTA;
    public static final Item BARRIER;
    public static final Item IRON_TRAPDOOR;
    public static final Item HAY_BLOCK;
    public static final Item WHITE_CARPET;
    public static final Item ORANGE_CARPET;
    public static final Item MAGENTA_CARPET;
    public static final Item LIGHT_BLUE_CARPET;
    public static final Item YELLOW_CARPET;
    public static final Item LIME_CARPET;
    public static final Item PINK_CARPET;
    public static final Item GRAY_CARPET;
    public static final Item LIGHT_GRAY_CARPET;
    public static final Item CYAN_CARPET;
    public static final Item PURPLE_CARPET;
    public static final Item BLUE_CARPET;
    public static final Item BROWN_CARPET;
    public static final Item GREEN_CARPET;
    public static final Item RED_CARPET;
    public static final Item BLACK_CARPET;
    public static final Item TERRACOTTA;
    public static final Item COAL_BLOCK;
    public static final Item PACKED_ICE;
    public static final Item ACACIA_STAIRS;
    public static final Item DARK_OAK_STAIRS;
    public static final Item SLIME_BLOCK;
    public static final Item GRASS_PATH;
    public static final Item SUNFLOWER;
    public static final Item LILAC;
    public static final Item ROSE_BUSH;
    public static final Item PEONY;
    public static final Item TALL_GRASS;
    public static final Item LARGE_FERN;
    public static final Item WHITE_STAINED_GLASS;
    public static final Item ORANGE_STAINED_GLASS;
    public static final Item MAGENTA_STAINED_GLASS;
    public static final Item LIGHT_BLUE_STAINED_GLASS;
    public static final Item YELLOW_STAINED_GLASS;
    public static final Item LIME_STAINED_GLASS;
    public static final Item PINK_STAINED_GLASS;
    public static final Item GRAY_STAINED_GLASS;
    public static final Item LIGHT_GRAY_STAINED_GLASS;
    public static final Item CYAN_STAINED_GLASS;
    public static final Item PURPLE_STAINED_GLASS;
    public static final Item BLUE_STAINED_GLASS;
    public static final Item BROWN_STAINED_GLASS;
    public static final Item GREEN_STAINED_GLASS;
    public static final Item RED_STAINED_GLASS;
    public static final Item BLACK_STAINED_GLASS;
    public static final Item WHITE_STAINED_GLASS_PANE;
    public static final Item ORANGE_STAINED_GLASS_PANE;
    public static final Item MAGENTA_STAINED_GLASS_PANE;
    public static final Item LIGHT_BLUE_STAINED_GLASS_PANE;
    public static final Item YELLOW_STAINED_GLASS_PANE;
    public static final Item LIME_STAINED_GLASS_PANE;
    public static final Item PINK_STAINED_GLASS_PANE;
    public static final Item GRAY_STAINED_GLASS_PANE;
    public static final Item LIGHT_GRAY_STAINED_GLASS_PANE;
    public static final Item CYAN_STAINED_GLASS_PANE;
    public static final Item PURPLE_STAINED_GLASS_PANE;
    public static final Item BLUE_STAINED_GLASS_PANE;
    public static final Item BROWN_STAINED_GLASS_PANE;
    public static final Item GREEN_STAINED_GLASS_PANE;
    public static final Item RED_STAINED_GLASS_PANE;
    public static final Item BLACK_STAINED_GLASS_PANE;
    public static final Item PRISMARINE;
    public static final Item PRISMARINE_BRICKS;
    public static final Item DARK_PRISMARINE;
    public static final Item PRISMARINE_STAIRS;
    public static final Item PRISMARINE_BRICK_STAIRS;
    public static final Item DARK_PRISMARINE_STAIRS;
    public static final Item SEA_LANTERN;
    public static final Item RED_SANDSTONE;
    public static final Item CHISELED_RED_SANDSTONE;
    public static final Item CUT_RED_SANDSTONE;
    public static final Item RED_SANDSTONE_STAIRS;
    public static final Item REPEATING_COMMAND_BLOCK;
    public static final Item CHAIN_COMMAND_BLOCK;
    public static final Item MAGMA_BLOCK;
    public static final Item NETHER_WART_BLOCK;
    public static final Item RED_NETHER_BRICKS;
    public static final Item BONE_BLOCK;
    public static final Item STRUCTURE_VOID;
    public static final Item OBSERVER;
    public static final Item SHULKER_BOX;
    public static final Item WHITE_SHULKER_BOX;
    public static final Item ORANGE_SHULKER_BOX;
    public static final Item MAGENTA_SHULKER_BOX;
    public static final Item LIGHT_BLUE_SHULKER_BOX;
    public static final Item YELLOW_SHULKER_BOX;
    public static final Item LIME_SHULKER_BOX;
    public static final Item PINK_SHULKER_BOX;
    public static final Item GRAY_SHULKER_BOX;
    public static final Item LIGHT_GRAY_SHULKER_BOX;
    public static final Item CYAN_SHULKER_BOX;
    public static final Item PURPLE_SHULKER_BOX;
    public static final Item BLUE_SHULKER_BOX;
    public static final Item BROWN_SHULKER_BOX;
    public static final Item GREEN_SHULKER_BOX;
    public static final Item RED_SHULKER_BOX;
    public static final Item BLACK_SHULKER_BOX;
    public static final Item WHITE_GLAZED_TERRACOTTA;
    public static final Item ORANGE_GLAZED_TERRACOTTA;
    public static final Item MAGENTA_GLAZED_TERRACOTTA;
    public static final Item LIGHT_BLUE_GLAZED_TERRACOTTA;
    public static final Item YELLOW_GLAZED_TERRACOTTA;
    public static final Item LIME_GLAZED_TERRACOTTA;
    public static final Item PINK_GLAZED_TERRACOTTA;
    public static final Item GRAY_GLAZED_TERRACOTTA;
    public static final Item LIGHT_GRAY_GLAZED_TERRACOTTA;
    public static final Item CYAN_GLAZED_TERRACOTTA;
    public static final Item PURPLE_GLAZED_TERRACOTTA;
    public static final Item BLUE_GLAZED_TERRACOTTA;
    public static final Item BROWN_GLAZED_TERRACOTTA;
    public static final Item GREEN_GLAZED_TERRACOTTA;
    public static final Item RED_GLAZED_TERRACOTTA;
    public static final Item BLACK_GLAZED_TERRACOTTA;
    public static final Item WHITE_CONCRETE;
    public static final Item ORANGE_CONCRETE;
    public static final Item MAGENTA_CONCRETE;
    public static final Item LIGHT_BLUE_CONCRETE;
    public static final Item YELLOW_CONCRETE;
    public static final Item LIME_CONCRETE;
    public static final Item PINK_CONCRETE;
    public static final Item GRAY_CONCRETE;
    public static final Item LIGHT_GRAY_CONCRETE;
    public static final Item CYAN_CONCRETE;
    public static final Item PURPLE_CONCRETE;
    public static final Item BLUE_CONCRETE;
    public static final Item BROWN_CONCRETE;
    public static final Item GREEN_CONCRETE;
    public static final Item RED_CONCRETE;
    public static final Item BLACK_CONCRETE;
    public static final Item WHITE_CONCRETE_POWDER;
    public static final Item ORANGE_CONCRETE_POWDER;
    public static final Item MAGENTA_CONCRETE_POWDER;
    public static final Item LIGHT_BLUE_CONCRETE_POWDER;
    public static final Item YELLOW_CONCRETE_POWDER;
    public static final Item LIME_CONCRETE_POWDER;
    public static final Item PINK_CONCRETE_POWDER;
    public static final Item GRAY_CONCRETE_POWDER;
    public static final Item LIGHT_GRAY_CONCRETE_POWDER;
    public static final Item CYAN_CONCRETE_POWDER;
    public static final Item PURPLE_CONCRETE_POWDER;
    public static final Item BLUE_CONCRETE_POWDER;
    public static final Item BROWN_CONCRETE_POWDER;
    public static final Item GREEN_CONCRETE_POWDER;
    public static final Item RED_CONCRETE_POWDER;
    public static final Item BLACK_CONCRETE_POWDER;
    public static final Item TURTLE_EGG;
    public static final Item DEAD_TUBE_CORAL_BLOCK;
    public static final Item DEAD_BRAIN_CORAL_BLOCK;
    public static final Item DEAD_BUBBLE_CORAL_BLOCK;
    public static final Item DEAD_FIRE_CORAL_BLOCK;
    public static final Item DEAD_HORN_CORAL_BLOCK;
    public static final Item TUBE_CORAL_BLOCK;
    public static final Item BRAIN_CORAL_BLOCK;
    public static final Item BUBBLE_CORAL_BLOCK;
    public static final Item FIRE_CORAL_BLOCK;
    public static final Item HORN_CORAL_BLOCK;
    public static final Item TUBE_CORAL;
    public static final Item BRAIN_CORAL;
    public static final Item BUBBLE_CORAL;
    public static final Item FIRE_CORAL;
    public static final Item HORN_CORAL;
    public static final Item DEAD_BRAIN_CORAL;
    public static final Item DEAD_BUBBLE_CORAL;
    public static final Item DEAD_FIRE_CORAL;
    public static final Item DEAD_HORN_CORAL;
    public static final Item DEAD_TUBE_CORAL;
    public static final Item TUBE_CORAL_FAN;
    public static final Item BRAIN_CORAL_FAN;
    public static final Item BUBBLE_CORAL_FAN;
    public static final Item FIRE_CORAL_FAN;
    public static final Item HORN_CORAL_FAN;
    public static final Item DEAD_TUBE_CORAL_FAN;
    public static final Item DEAD_BRAIN_CORAL_FAN;
    public static final Item DEAD_BUBBLE_CORAL_FAN;
    public static final Item DEAD_FIRE_CORAL_FAN;
    public static final Item DEAD_HORN_CORAL_FAN;
    public static final Item BLUE_ICE;
    public static final Item CONDUIT;
    public static final Item POLISHED_GRANITE_STAIRS;
    public static final Item SMOOTH_RED_SANDSTONE_STAIRS;
    public static final Item MOSSY_STONE_BRICK_STAIRS;
    public static final Item POLISHED_DIORITE_STAIRS;
    public static final Item MOSSY_COBBLESTONE_STAIRS;
    public static final Item END_STONE_BRICK_STAIRS;
    public static final Item STONE_STAIRS;
    public static final Item SMOOTH_SANDSTONE_STAIRS;
    public static final Item SMOOTH_QUARTZ_STAIRS;
    public static final Item GRANITE_STAIRS;
    public static final Item ANDESITE_STAIRS;
    public static final Item RED_NETHER_BRICK_STAIRS;
    public static final Item POLISHED_ANDESITE_STAIRS;
    public static final Item DIORITE_STAIRS;
    public static final Item POLISHED_GRANITE_SLAB;
    public static final Item SMOOTH_RED_SANDSTONE_SLAB;
    public static final Item MOSSY_STONE_BRICK_SLAB;
    public static final Item POLISHED_DIORITE_SLAB;
    public static final Item MOSSY_COBBLESTONE_SLAB;
    public static final Item END_STONE_BRICK_SLAB;
    public static final Item SMOOTH_SANDSTONE_SLAB;
    public static final Item SMOOTH_QUARTZ_SLAB;
    public static final Item GRANITE_SLAB;
    public static final Item ANDESITE_SLAB;
    public static final Item RED_NETHER_BRICK_SLAB;
    public static final Item POLISHED_ANDESITE_SLAB;
    public static final Item DIORITE_SLAB;
    public static final Item SCAFFOLDING;
    public static final Item IRON_DOOR;
    public static final Item OAK_DOOR;
    public static final Item SPRUCE_DOOR;
    public static final Item BIRCH_DOOR;
    public static final Item JUNGLE_DOOR;
    public static final Item ACACIA_DOOR;
    public static final Item DARK_OAK_DOOR;
    public static final Item REPEATER;
    public static final Item COMPARATOR;
    public static final Item STRUCTURE_BLOCK;
    public static final Item JIGSAW;
    public static final Item COMPOSTER;
    public static final Item iY;
    public static final Item iZ;
    public static final Item ja;
    public static final Item jb;
    public static final Item jc;
    public static final Item jd;
    public static final Item je;
    public static final Item jf;
    public static final Item jg;
    public static final Item jh;
    public static final Item ji;
    public static final Item jj;
    public static final Item jk;
    public static final Item jl;
    public static final Item jm;
    public static final Item jn;
    public static final Item jo;
    public static final Item jp;
    public static final Item jq;
    public static final Item jr;
    public static final Item js;
    public static final Item jt;
    public static final Item ju;
    public static final Item jv;
    public static final Item jw;
    public static final Item jx;
    public static final Item jy;
    public static final Item jz;
    public static final Item jA;
    public static final Item jB;
    public static final Item jC;
    public static final Item jD;
    public static final Item jE;
    public static final Item jF;
    public static final Item jG;
    public static final Item jH;
    public static final Item jI;
    public static final Item jJ;
    public static final Item jK;
    public static final Item jL;
    public static final Item jM;
    public static final Item jN;
    public static final Item jO;
    public static final Item jP;
    public static final Item jQ;
    public static final Item jR;
    public static final Item jS;
    public static final Item jT;
    public static final Item jU;
    public static final Item jV;
    public static final Item jW;
    public static final Item jX;
    public static final Item jY;
    public static final Item jZ;
    public static final Item ka;
    public static final Item kb;
    public static final Item kc;
    public static final Item kd;
    public static final Item ke;
    public static final Item kf;
    public static final Item kg;
    public static final Item kh;
    public static final Item ki;
    public static final Item kj;
    public static final Item kk;
    public static final Item kl;
    public static final Item km;
    public static final Item kn;
    public static final Item ko;
    public static final Item kp;
    public static final Item kq;
    public static final Item kr;
    public static final Item ks;
    public static final Item kt;
    public static final Item ku;
    public static final Item kv;
    public static final Item kw;
    public static final Item kx;
    public static final Item ky;
    public static final Item kz;
    public static final Item kA;
    public static final Item kB;
    public static final Item kC;
    public static final Item kD;
    public static final Item kE;
    public static final Item kF;
    public static final Item kG;
    public static final Item kH;
    public static final Item kI;
    public static final Item kJ;
    public static final Item kK;
    public static final Item kL;
    public static final Item kM;
    public static final Item SUGAR_CANE;
    public static final Item KELP;
    public static final Item DRIED_KELP_BLOCK;
    public static final Item BAMBOO;
    public static final Item kR;
    public static final Item kS;
    public static final Item kT;
    public static final Item kU;
    public static final Item kV;
    public static final Item kW;
    public static final Item kX;
    public static final Item kY;
    public static final Item kZ;
    public static final Item la;
    public static final Item lb;
    public static final Item lc;
    public static final Item ld;
    public static final Item le;
    public static final Item lf;
    public static final Item lg;
    public static final Item lh;
    public static final Item li;
    public static final Item lj;
    public static final Item lk;
    public static final Item ll;
    public static final Item lm;
    public static final Item ln;
    public static final Item lo;
    public static final Item lp;
    public static final Item lq;
    public static final Item lr;
    public static final Item ls;
    public static final Item lt;
    public static final Item lu;
    public static final Item lv;
    public static final Item lw;
    public static final Item lx;
    public static final Item ly;
    public static final Item lz;
    public static final Item lA;
    public static final Item lB;
    public static final Item lC;
    public static final Item CAKE;
    public static final Item WHITE_BED;
    public static final Item ORANGE_BED;
    public static final Item MAGENTA_BED;
    public static final Item LIGHT_BLUE_BED;
    public static final Item YELLOW_BED;
    public static final Item LIME_BED;
    public static final Item PINK_BED;
    public static final Item GRAY_BED;
    public static final Item LIGHT_GRAY_BED;
    public static final Item CYAN_BED;
    public static final Item PURPLE_BED;
    public static final Item BLUE_BED;
    public static final Item BROWN_BED;
    public static final Item GREEN_BED;
    public static final Item RED_BED;
    public static final Item BLACK_BED;
    public static final Item lU;
    public static final Item lV;
    public static final Item lW;
    public static final Item lX;
    public static final Item lY;
    public static final Item lZ;
    public static final Item ma;
    public static final Item mb;
    public static final Item mc;
    public static final Item md;
    public static final Item me;
    public static final Item mf;
    public static final Item mg;
    public static final Item mh;
    public static final Item mi;
    public static final Item mj;
    public static final Item mk;
    public static final Item ml;
    public static final Item mm;
    public static final Item mn;
    public static final Item mo;
    public static final Item mp;
    public static final Item mq;
    public static final Item BREWING_STAND;
    public static final Item CAULDRON;
    public static final Item mt;
    public static final Item mu;
    public static final Item mv;
    public static final Item mw;
    public static final Item mx;
    public static final Item my;
    public static final Item mz;
    public static final Item mA;
    public static final Item mB;
    public static final Item mC;
    public static final Item mD;
    public static final Item mE;
    public static final Item mF;
    public static final Item mG;
    public static final Item mH;
    public static final Item mI;
    public static final Item mJ;
    public static final Item mK;
    public static final Item mL;
    public static final Item mM;
    public static final Item mN;
    public static final Item mO;
    public static final Item mP;
    public static final Item mQ;
    public static final Item mR;
    public static final Item mS;
    public static final Item mT;
    public static final Item mU;
    public static final Item mV;
    public static final Item mW;
    public static final Item mX;
    public static final Item mY;
    public static final Item mZ;
    public static final Item na;
    public static final Item nb;
    public static final Item nc;
    public static final Item nd;
    public static final Item ne;
    public static final Item nf;
    public static final Item ng;
    public static final Item nh;
    public static final Item ni;
    public static final Item nj;
    public static final Item nk;
    public static final Item nl;
    public static final Item nm;
    public static final Item nn;
    public static final Item no;
    public static final Item np;
    public static final Item nq;
    public static final Item nr;
    public static final Item ns;
    public static final Item nt;
    public static final Item nu;
    public static final Item nv;
    public static final Item nw;
    public static final Item nx;
    public static final Item ny;
    public static final Item nz;
    public static final Item nA;
    public static final Item nB;
    public static final Item nC;
    public static final Item nD;
    public static final Item nE;
    public static final Item nF;
    public static final Item nG;
    public static final Item FLOWER_POT;
    public static final Item nI;
    public static final Item nJ;
    public static final Item nK;
    public static final Item nL;
    public static final Item nM;
    public static final Item nN;
    public static final Item SKELETON_SKULL;
    public static final Item WITHER_SKELETON_SKULL;
    public static final Item PLAYER_HEAD;
    public static final Item ZOMBIE_HEAD;
    public static final Item CREEPER_HEAD;
    public static final Item DRAGON_HEAD;
    public static final Item nU;
    public static final Item nV;
    public static final Item nW;
    public static final Item nX;
    public static final Item nY;
    public static final Item nZ;
    public static final Item oa;
    public static final Item ob;
    public static final Item oc;
    public static final Item od;
    public static final Item oe;
    public static final Item of;
    public static final Item og;
    public static final Item oh;
    public static final Item oi;
    public static final Item oj;
    public static final Item ok;
    public static final Item ol;
    public static final Item om;
    public static final Item on;
    public static final Item oo;
    public static final Item op;
    public static final Item oq;
    public static final Item or;
    public static final Item os;
    public static final Item ot;
    public static final Item ou;
    public static final Item ov;
    public static final Item ow;
    public static final Item ox;
    public static final Item oy;
    public static final Item oz;
    public static final Item oA;
    public static final Item oB;
    public static final Item oC;
    public static final Item oD;
    public static final Item oE;
    public static final Item oF;
    public static final Item oG;
    public static final Item oH;
    public static final Item oI;
    public static final Item oJ;
    public static final Item oK;
    public static final Item oL;
    public static final Item oM;
    public static final Item oN;
    public static final Item oO;
    public static final Item oP;
    public static final Item oQ;
    public static final Item oR;
    public static final Item oS;
    public static final Item oT;
    public static final Item oU;
    public static final Item oV;
    public static final Item oW;
    public static final Item oX;
    public static final Item oY;
    public static final Item oZ;
    public static final Item pa;
    public static final Item pb;
    public static final Item pc;
    public static final Item pd;
    public static final Item pe;
    public static final Item pf;
    public static final Item pg;
    public static final Item ph;
    public static final Item pi;
    public static final Item pj;
    public static final Item pk;
    public static final Item pl;
    public static final Item pm;
    public static final Item pn;
    public static final Item po;
    public static final Item pp;
    public static final Item pq;
    public static final Item pr;
    public static final Item ps;
    public static final Item pt;
    public static final Item pu;
    public static final Item pv;
    public static final Item pw;
    public static final Item px;
    public static final Item py;
    public static final Item pz;
    public static final Item LOOM;
    public static final Item pB;
    public static final Item pC;
    public static final Item pD;
    public static final Item pE;
    public static final Item pF;
    public static final Item BARREL;
    public static final Item SMOKER;
    public static final Item BLAST_FURNACE;
    public static final Item CARTOGRAPHY_TABLE;
    public static final Item FLETCHING_TABLE;
    public static final Item GRINDSTONE;
    public static final Item LECTERN;
    public static final Item SMITHING_TABLE;
    public static final Item STONECUTTER;
    public static final Item BELL;
    public static final Item LANTERN;
    public static final Item pR;
    public static final Item CAMPFIRE;
    
    private static Item registerBlock(final Block block) {
        return register(new BlockItem(block, new Item.Settings()));
    }
    
    private static Item registerBlock(final Block block, final ItemGroup itemGroup) {
        return register(new BlockItem(block, new Item.Settings().itemGroup(itemGroup)));
    }
    
    private static Item register(final BlockItem blockItem) {
        return register(blockItem.getBlock(), blockItem);
    }
    
    protected static Item register(final Block block, final Item item) {
        return register(Registry.BLOCK.getId(block), item);
    }
    
    private static Item register(final String string, final Item item) {
        return register(new Identifier(string), item);
    }
    
    private static Item register(final Identifier identifier, final Item item) {
        if (item instanceof BlockItem) {
            ((BlockItem)item).registerBlockItemMap(Item.BLOCK_ITEM_MAP, item);
        }
        return Registry.<Item>register(Registry.ITEM, identifier, item);
    }
    
    static {
        AIR = register(Blocks.AIR, new AirBlockItem(Blocks.AIR, new Item.Settings()));
        STONE = registerBlock(Blocks.b, ItemGroup.BUILDING_BLOCKS);
        GRANITE = registerBlock(Blocks.c, ItemGroup.BUILDING_BLOCKS);
        POLISHED_GRANITE = registerBlock(Blocks.d, ItemGroup.BUILDING_BLOCKS);
        DIORITE = registerBlock(Blocks.e, ItemGroup.BUILDING_BLOCKS);
        POLISHED_DIORITE = registerBlock(Blocks.f, ItemGroup.BUILDING_BLOCKS);
        ANDESITE = registerBlock(Blocks.g, ItemGroup.BUILDING_BLOCKS);
        POLISHED_ANDESITE = registerBlock(Blocks.h, ItemGroup.BUILDING_BLOCKS);
        GRASS_BLOCK = registerBlock(Blocks.i, ItemGroup.BUILDING_BLOCKS);
        DIRT = registerBlock(Blocks.j, ItemGroup.BUILDING_BLOCKS);
        COARSE_DIRT = registerBlock(Blocks.k, ItemGroup.BUILDING_BLOCKS);
        PODZOL = registerBlock(Blocks.l, ItemGroup.BUILDING_BLOCKS);
        COBBLESTONE = registerBlock(Blocks.m, ItemGroup.BUILDING_BLOCKS);
        OAK_PLANKS = registerBlock(Blocks.n, ItemGroup.BUILDING_BLOCKS);
        SPRUCE_PLANKS = registerBlock(Blocks.o, ItemGroup.BUILDING_BLOCKS);
        BIRCH_PLANKS = registerBlock(Blocks.p, ItemGroup.BUILDING_BLOCKS);
        JUNGLE_PLANKS = registerBlock(Blocks.q, ItemGroup.BUILDING_BLOCKS);
        ACACIA_PLANKS = registerBlock(Blocks.r, ItemGroup.BUILDING_BLOCKS);
        DARK_OAK_PLANKS = registerBlock(Blocks.s, ItemGroup.BUILDING_BLOCKS);
        OAK_SAPLING = registerBlock(Blocks.t, ItemGroup.DECORATIONS);
        SPRUCE_SAPLING = registerBlock(Blocks.u, ItemGroup.DECORATIONS);
        BIRCH_SAPLING = registerBlock(Blocks.v, ItemGroup.DECORATIONS);
        JUNGLE_SAPLING = registerBlock(Blocks.w, ItemGroup.DECORATIONS);
        ACACIA_SAPLING = registerBlock(Blocks.x, ItemGroup.DECORATIONS);
        DARK_OAK_SAPLING = registerBlock(Blocks.y, ItemGroup.DECORATIONS);
        BEDROCK = registerBlock(Blocks.z, ItemGroup.BUILDING_BLOCKS);
        SAND = registerBlock(Blocks.C, ItemGroup.BUILDING_BLOCKS);
        RED_SAND = registerBlock(Blocks.D, ItemGroup.BUILDING_BLOCKS);
        GRAVEL = registerBlock(Blocks.E, ItemGroup.BUILDING_BLOCKS);
        GOLD_ORE = registerBlock(Blocks.F, ItemGroup.BUILDING_BLOCKS);
        IRON_ORE = registerBlock(Blocks.G, ItemGroup.BUILDING_BLOCKS);
        COAL_ORE = registerBlock(Blocks.H, ItemGroup.BUILDING_BLOCKS);
        OAK_LOG = registerBlock(Blocks.I, ItemGroup.BUILDING_BLOCKS);
        SPRUCE_LOG = registerBlock(Blocks.J, ItemGroup.BUILDING_BLOCKS);
        BIRCH_LOG = registerBlock(Blocks.K, ItemGroup.BUILDING_BLOCKS);
        JUNGLE_LOG = registerBlock(Blocks.L, ItemGroup.BUILDING_BLOCKS);
        ACACIA_LOG = registerBlock(Blocks.M, ItemGroup.BUILDING_BLOCKS);
        DARK_OAK_LOG = registerBlock(Blocks.N, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_OAK_LOG = registerBlock(Blocks.T, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_SPRUCE_LOG = registerBlock(Blocks.O, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_BIRCH_LOG = registerBlock(Blocks.P, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_JUNGLE_LOG = registerBlock(Blocks.Q, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_ACACIA_LOG = registerBlock(Blocks.R, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_DARK_OAK_LOG = registerBlock(Blocks.S, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_OAK_WOOD = registerBlock(Blocks.aa, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_SPRUCE_WOOD = registerBlock(Blocks.ab, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_BIRCH_WOOD = registerBlock(Blocks.ac, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_JUNGLE_WOOD = registerBlock(Blocks.ad, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_ACACIA_WOOD = registerBlock(Blocks.ae, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_DARK_OAK_WOOD = registerBlock(Blocks.af, ItemGroup.BUILDING_BLOCKS);
        OAK_WOOD = registerBlock(Blocks.U, ItemGroup.BUILDING_BLOCKS);
        SPRUCE_WOOD = registerBlock(Blocks.V, ItemGroup.BUILDING_BLOCKS);
        BIRCH_WOOD = registerBlock(Blocks.W, ItemGroup.BUILDING_BLOCKS);
        JUNGLE_WOOD = registerBlock(Blocks.X, ItemGroup.BUILDING_BLOCKS);
        ACACIA_WOOD = registerBlock(Blocks.Y, ItemGroup.BUILDING_BLOCKS);
        DARK_OAK_WOOD = registerBlock(Blocks.Z, ItemGroup.BUILDING_BLOCKS);
        OAK_LEAVES = registerBlock(Blocks.ag, ItemGroup.DECORATIONS);
        SPRUCE_LEAVES = registerBlock(Blocks.ah, ItemGroup.DECORATIONS);
        BIRCH_LEAVES = registerBlock(Blocks.ai, ItemGroup.DECORATIONS);
        JUNGLE_LEAVES = registerBlock(Blocks.aj, ItemGroup.DECORATIONS);
        ACACIA_LEAVES = registerBlock(Blocks.ak, ItemGroup.DECORATIONS);
        DARK_OAK_LEAVES = registerBlock(Blocks.al, ItemGroup.DECORATIONS);
        SPONGE = registerBlock(Blocks.am, ItemGroup.BUILDING_BLOCKS);
        WET_SPONGE = registerBlock(Blocks.an, ItemGroup.BUILDING_BLOCKS);
        GLASS = registerBlock(Blocks.ao, ItemGroup.BUILDING_BLOCKS);
        LAPIS_ORE = registerBlock(Blocks.ap, ItemGroup.BUILDING_BLOCKS);
        LAPIS_BLOCK = registerBlock(Blocks.aq, ItemGroup.BUILDING_BLOCKS);
        DISPENSER = registerBlock(Blocks.ar, ItemGroup.REDSTONE);
        SANDSTONE = registerBlock(Blocks.as, ItemGroup.BUILDING_BLOCKS);
        CHISELED_SANDSTONE = registerBlock(Blocks.at, ItemGroup.BUILDING_BLOCKS);
        CUT_SANDSTONE = registerBlock(Blocks.au, ItemGroup.BUILDING_BLOCKS);
        NOTE_BLOCK = registerBlock(Blocks.av, ItemGroup.REDSTONE);
        POWERED_RAIL = registerBlock(Blocks.aM, ItemGroup.TRANSPORTATION);
        DETECTOR_RAIL = registerBlock(Blocks.aN, ItemGroup.TRANSPORTATION);
        STICKY_PISTON = registerBlock(Blocks.aO, ItemGroup.REDSTONE);
        COBWEB = registerBlock(Blocks.aP, ItemGroup.DECORATIONS);
        GRASS = registerBlock(Blocks.aQ, ItemGroup.DECORATIONS);
        FERN = registerBlock(Blocks.aR, ItemGroup.DECORATIONS);
        DEAD_BUSH = registerBlock(Blocks.aS, ItemGroup.DECORATIONS);
        SEAGRASS = registerBlock(Blocks.aT, ItemGroup.DECORATIONS);
        SEA_PICKLE = registerBlock(Blocks.kM, ItemGroup.DECORATIONS);
        PISTON = registerBlock(Blocks.aV, ItemGroup.REDSTONE);
        WHITE_WOOL = registerBlock(Blocks.aX, ItemGroup.BUILDING_BLOCKS);
        ORANGE_WOOL = registerBlock(Blocks.aY, ItemGroup.BUILDING_BLOCKS);
        MAGENTA_WOOL = registerBlock(Blocks.aZ, ItemGroup.BUILDING_BLOCKS);
        LIGHT_BLUE_WOOL = registerBlock(Blocks.ba, ItemGroup.BUILDING_BLOCKS);
        YELLOW_WOOL = registerBlock(Blocks.bb, ItemGroup.BUILDING_BLOCKS);
        LIME_WOOL = registerBlock(Blocks.bc, ItemGroup.BUILDING_BLOCKS);
        PINK_WOOL = registerBlock(Blocks.bd, ItemGroup.BUILDING_BLOCKS);
        GRAY_WOOL = registerBlock(Blocks.be, ItemGroup.BUILDING_BLOCKS);
        LIGHT_GRAY_WOOL = registerBlock(Blocks.bf, ItemGroup.BUILDING_BLOCKS);
        CYAN_WOOL = registerBlock(Blocks.bg, ItemGroup.BUILDING_BLOCKS);
        PURPLE_WOOL = registerBlock(Blocks.bh, ItemGroup.BUILDING_BLOCKS);
        BLUE_WOOL = registerBlock(Blocks.bi, ItemGroup.BUILDING_BLOCKS);
        BROWN_WOOL = registerBlock(Blocks.bj, ItemGroup.BUILDING_BLOCKS);
        GREEN_WOOL = registerBlock(Blocks.bk, ItemGroup.BUILDING_BLOCKS);
        RED_WOOL = registerBlock(Blocks.bl, ItemGroup.BUILDING_BLOCKS);
        BLACK_WOOL = registerBlock(Blocks.bm, ItemGroup.BUILDING_BLOCKS);
        DANDELION = registerBlock(Blocks.bo, ItemGroup.DECORATIONS);
        POPPY = registerBlock(Blocks.bp, ItemGroup.DECORATIONS);
        BLUE_ORCHID = registerBlock(Blocks.bq, ItemGroup.DECORATIONS);
        ALLIUM = registerBlock(Blocks.br, ItemGroup.DECORATIONS);
        AZURE_BLUET = registerBlock(Blocks.bs, ItemGroup.DECORATIONS);
        RED_TULIP = registerBlock(Blocks.bt, ItemGroup.DECORATIONS);
        ORANGE_TULIP = registerBlock(Blocks.bu, ItemGroup.DECORATIONS);
        WHITE_TULIP = registerBlock(Blocks.bv, ItemGroup.DECORATIONS);
        PINK_TULIP = registerBlock(Blocks.bw, ItemGroup.DECORATIONS);
        OXEYE_DAISY = registerBlock(Blocks.bx, ItemGroup.DECORATIONS);
        CORNFLOWER = registerBlock(Blocks.by, ItemGroup.DECORATIONS);
        LILY_OF_THE_VALLEY = registerBlock(Blocks.bA, ItemGroup.DECORATIONS);
        WITHER_ROSE = registerBlock(Blocks.bz, ItemGroup.DECORATIONS);
        BROWN_MUSHROOM = registerBlock(Blocks.bB, ItemGroup.DECORATIONS);
        RED_MUSHROOM = registerBlock(Blocks.bC, ItemGroup.DECORATIONS);
        GOLD_BLOCK = registerBlock(Blocks.bD, ItemGroup.BUILDING_BLOCKS);
        IRON_BLOCK = registerBlock(Blocks.bE, ItemGroup.BUILDING_BLOCKS);
        OAK_SLAB = registerBlock(Blocks.hC, ItemGroup.BUILDING_BLOCKS);
        SPRUCE_SLAB = registerBlock(Blocks.hD, ItemGroup.BUILDING_BLOCKS);
        BIRCH_SLAB = registerBlock(Blocks.hE, ItemGroup.BUILDING_BLOCKS);
        JUNGLE_SLAB = registerBlock(Blocks.hF, ItemGroup.BUILDING_BLOCKS);
        ACACIA_SLAB = registerBlock(Blocks.hG, ItemGroup.BUILDING_BLOCKS);
        DARK_OAK_SLAB = registerBlock(Blocks.hH, ItemGroup.BUILDING_BLOCKS);
        STONE_SLAB = registerBlock(Blocks.hI, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_STONE_SLAB = registerBlock(Blocks.hJ, ItemGroup.BUILDING_BLOCKS);
        SANDSTONE_SLAB = registerBlock(Blocks.hK, ItemGroup.BUILDING_BLOCKS);
        CUT_SANDSTONE_SLAB = registerBlock(Blocks.hL, ItemGroup.BUILDING_BLOCKS);
        PETRIFIED_OAK_SLAB = registerBlock(Blocks.hM, ItemGroup.BUILDING_BLOCKS);
        COBBLESTONE_SLAB = registerBlock(Blocks.hN, ItemGroup.BUILDING_BLOCKS);
        BRICK_SLAB = registerBlock(Blocks.hO, ItemGroup.BUILDING_BLOCKS);
        STONE_BRICK_SLAB = registerBlock(Blocks.hP, ItemGroup.BUILDING_BLOCKS);
        NETHER_BRICK_SLAB = registerBlock(Blocks.hQ, ItemGroup.BUILDING_BLOCKS);
        QUARTZ_SLAB = registerBlock(Blocks.hR, ItemGroup.BUILDING_BLOCKS);
        RED_SANDSTONE_SLAB = registerBlock(Blocks.hS, ItemGroup.BUILDING_BLOCKS);
        CUT_RED_SANDSTONE_SLAB = registerBlock(Blocks.hT, ItemGroup.BUILDING_BLOCKS);
        PURPUR_SLAB = registerBlock(Blocks.hU, ItemGroup.BUILDING_BLOCKS);
        PRISMARINE_SLAB = registerBlock(Blocks.go, ItemGroup.BUILDING_BLOCKS);
        PRISMARINE_BRICK_SLAB = registerBlock(Blocks.gp, ItemGroup.BUILDING_BLOCKS);
        DARK_PRISMARINE_SLAB = registerBlock(Blocks.gq, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_QUARTZ = registerBlock(Blocks.hX, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_RED_SANDSTONE = registerBlock(Blocks.hY, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_SANDSTONE = registerBlock(Blocks.hW, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_STONE = registerBlock(Blocks.hV, ItemGroup.BUILDING_BLOCKS);
        BRICKS = registerBlock(Blocks.bF, ItemGroup.BUILDING_BLOCKS);
        TNT = registerBlock(Blocks.bG, ItemGroup.REDSTONE);
        BOOKSHELF = registerBlock(Blocks.bH, ItemGroup.BUILDING_BLOCKS);
        MOSSY_COBBLESTONE = registerBlock(Blocks.bI, ItemGroup.BUILDING_BLOCKS);
        OBSIDIAN = registerBlock(Blocks.bJ, ItemGroup.BUILDING_BLOCKS);
        TORCH = register(new WallStandingBlockItem(Blocks.bK, Blocks.bL, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        END_ROD = registerBlock(Blocks.io, ItemGroup.DECORATIONS);
        CHORUS_PLANT = registerBlock(Blocks.ip, ItemGroup.DECORATIONS);
        CHORUS_FLOWER = registerBlock(Blocks.iq, ItemGroup.DECORATIONS);
        PURPUR_BLOCK = registerBlock(Blocks.ir, ItemGroup.BUILDING_BLOCKS);
        PURPUR_PILLAR = registerBlock(Blocks.is, ItemGroup.BUILDING_BLOCKS);
        PURPUR_STAIRS = registerBlock(Blocks.it, ItemGroup.BUILDING_BLOCKS);
        SPAWNER = registerBlock(Blocks.bN);
        OAK_STAIRS = registerBlock(Blocks.bO, ItemGroup.BUILDING_BLOCKS);
        CHEST = registerBlock(Blocks.bP, ItemGroup.DECORATIONS);
        DIAMOND_ORE = registerBlock(Blocks.bR, ItemGroup.BUILDING_BLOCKS);
        DIAMOND_BLOCK = registerBlock(Blocks.bS, ItemGroup.BUILDING_BLOCKS);
        CRAFTING_TABLE = registerBlock(Blocks.bT, ItemGroup.DECORATIONS);
        FARMLAND = registerBlock(Blocks.bV, ItemGroup.DECORATIONS);
        FURNACE = registerBlock(Blocks.bW, ItemGroup.DECORATIONS);
        LADDER = registerBlock(Blocks.ce, ItemGroup.DECORATIONS);
        RAIL = registerBlock(Blocks.cf, ItemGroup.TRANSPORTATION);
        COBBLESTONE_STAIRS = registerBlock(Blocks.cg, ItemGroup.BUILDING_BLOCKS);
        LEVER = registerBlock(Blocks.cn, ItemGroup.REDSTONE);
        STONE_PRESSURE_PLATE = registerBlock(Blocks.co, ItemGroup.REDSTONE);
        OAK_PRESSURE_PLATE = registerBlock(Blocks.cq, ItemGroup.REDSTONE);
        SPRUCE_PRESSURE_PLATE = registerBlock(Blocks.cr, ItemGroup.REDSTONE);
        BIRCH_PRESSURE_PLATE = registerBlock(Blocks.cs, ItemGroup.REDSTONE);
        JUNGLE_PRESSURE_PLATE = registerBlock(Blocks.ct, ItemGroup.REDSTONE);
        ACACIA_PRESSURE_PLATE = registerBlock(Blocks.cu, ItemGroup.REDSTONE);
        DARK_OAK_PRESSURE_PLATE = registerBlock(Blocks.cv, ItemGroup.REDSTONE);
        REDSTONE_ORE = registerBlock(Blocks.cw, ItemGroup.BUILDING_BLOCKS);
        REDSTONE_TORCH = register(new WallStandingBlockItem(Blocks.cx, Blocks.cy, new Item.Settings().itemGroup(ItemGroup.REDSTONE)));
        STONE_BUTTON = registerBlock(Blocks.cz, ItemGroup.REDSTONE);
        SNOW = registerBlock(Blocks.cA, ItemGroup.DECORATIONS);
        ICE = registerBlock(Blocks.cB, ItemGroup.BUILDING_BLOCKS);
        SNOW_BLOCK = registerBlock(Blocks.cC, ItemGroup.BUILDING_BLOCKS);
        CACTUS = registerBlock(Blocks.cD, ItemGroup.DECORATIONS);
        CLAY = registerBlock(Blocks.cE, ItemGroup.BUILDING_BLOCKS);
        JUKEBOX = registerBlock(Blocks.cG, ItemGroup.DECORATIONS);
        OAK_FENCE = registerBlock(Blocks.cH, ItemGroup.DECORATIONS);
        SPRUCE_FENCE = registerBlock(Blocks.ie, ItemGroup.DECORATIONS);
        BIRCH_FENCE = registerBlock(Blocks.if_, ItemGroup.DECORATIONS);
        JUNGLE_FENCE = registerBlock(Blocks.ig, ItemGroup.DECORATIONS);
        ACACIA_FENCE = registerBlock(Blocks.ih, ItemGroup.DECORATIONS);
        DARK_OAK_FENCE = registerBlock(Blocks.ii, ItemGroup.DECORATIONS);
        PUMPKIN = registerBlock(Blocks.cI, ItemGroup.BUILDING_BLOCKS);
        CARVED_PUMPKIN = registerBlock(Blocks.cN, ItemGroup.BUILDING_BLOCKS);
        NETHERRACK = registerBlock(Blocks.cJ, ItemGroup.BUILDING_BLOCKS);
        SOUL_SAND = registerBlock(Blocks.cK, ItemGroup.BUILDING_BLOCKS);
        GLOWSTONE = registerBlock(Blocks.cL, ItemGroup.BUILDING_BLOCKS);
        JACK_O_LANTERN = registerBlock(Blocks.cO, ItemGroup.BUILDING_BLOCKS);
        OAK_TRAPDOOR = registerBlock(Blocks.dh, ItemGroup.REDSTONE);
        SPRUCE_TRAPDOOR = registerBlock(Blocks.di, ItemGroup.REDSTONE);
        BIRCH_TRAPDOOR = registerBlock(Blocks.dj, ItemGroup.REDSTONE);
        JUNGLE_TRAPDOOR = registerBlock(Blocks.dk, ItemGroup.REDSTONE);
        ACACIA_TRAPDOOR = registerBlock(Blocks.dl, ItemGroup.REDSTONE);
        DARK_OAK_TRAPDOOR = registerBlock(Blocks.dm, ItemGroup.REDSTONE);
        INFESTED_STONE = registerBlock(Blocks.dr, ItemGroup.DECORATIONS);
        INFESTED_COBBLESTONE = registerBlock(Blocks.ds, ItemGroup.DECORATIONS);
        INFESTED_STONE_BRICKS = registerBlock(Blocks.dt, ItemGroup.DECORATIONS);
        INFESTED_MOSSY_STONE_BRICKS = registerBlock(Blocks.du, ItemGroup.DECORATIONS);
        INFESTED_CRACKED_STONE_BRICKS = registerBlock(Blocks.dv, ItemGroup.DECORATIONS);
        INFESTED_CHISELED_STONE_BRICKS = registerBlock(Blocks.dw, ItemGroup.DECORATIONS);
        STONE_BRICKS = registerBlock(Blocks.dn, ItemGroup.BUILDING_BLOCKS);
        MOSSY_STONE_BRICKS = registerBlock(Blocks.do_, ItemGroup.BUILDING_BLOCKS);
        CRACKED_STONE_BRICKS = registerBlock(Blocks.dp, ItemGroup.BUILDING_BLOCKS);
        CHISELED_STONE_BRICKS = registerBlock(Blocks.dq, ItemGroup.BUILDING_BLOCKS);
        BROWN_MUSHROOM_BLOCK = registerBlock(Blocks.dx, ItemGroup.DECORATIONS);
        RED_MUSHROOM_BLOCK = registerBlock(Blocks.dy, ItemGroup.DECORATIONS);
        MUSHROOM_STEM = registerBlock(Blocks.dz, ItemGroup.DECORATIONS);
        IRON_BARS = registerBlock(Blocks.dA, ItemGroup.DECORATIONS);
        GLASS_PANE = registerBlock(Blocks.dB, ItemGroup.DECORATIONS);
        MELON = registerBlock(Blocks.dC, ItemGroup.BUILDING_BLOCKS);
        VINE = registerBlock(Blocks.dH, ItemGroup.DECORATIONS);
        OAK_FENCE_GATE = registerBlock(Blocks.dI, ItemGroup.REDSTONE);
        SPRUCE_FENCE_GATE = registerBlock(Blocks.hZ, ItemGroup.REDSTONE);
        BIRCH_FENCE_GATE = registerBlock(Blocks.ia, ItemGroup.REDSTONE);
        JUNGLE_FENCE_GATE = registerBlock(Blocks.ib, ItemGroup.REDSTONE);
        ACACIA_FENCE_GATE = registerBlock(Blocks.ic, ItemGroup.REDSTONE);
        DARK_OAK_FENCE_GATE = registerBlock(Blocks.id, ItemGroup.REDSTONE);
        BRICK_STAIRS = registerBlock(Blocks.dJ, ItemGroup.BUILDING_BLOCKS);
        STONE_BRICK_STAIRS = registerBlock(Blocks.dK, ItemGroup.BUILDING_BLOCKS);
        MYCELIUM = registerBlock(Blocks.dL, ItemGroup.BUILDING_BLOCKS);
        LILY_PAD = register(new LilyPadItem(Blocks.dM, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        NETHER_BRICKS = registerBlock(Blocks.dN, ItemGroup.BUILDING_BLOCKS);
        NETHER_BRICK_FENCE = registerBlock(Blocks.dO, ItemGroup.DECORATIONS);
        NETHER_BRICK_STAIRS = registerBlock(Blocks.dP, ItemGroup.BUILDING_BLOCKS);
        ENCHANTING_TABLE = registerBlock(Blocks.dR, ItemGroup.DECORATIONS);
        END_PORTAL_FRAME = registerBlock(Blocks.dV, ItemGroup.DECORATIONS);
        END_STONE = registerBlock(Blocks.dW, ItemGroup.BUILDING_BLOCKS);
        END_STONE_BRICKS = registerBlock(Blocks.iu, ItemGroup.BUILDING_BLOCKS);
        DRAGON_EGG = register(new BlockItem(Blocks.dX, new Item.Settings().rarity(Rarity.d)));
        REDSTONE_LAMP = registerBlock(Blocks.dY, ItemGroup.REDSTONE);
        SANDSTONE_STAIRS = registerBlock(Blocks.ea, ItemGroup.BUILDING_BLOCKS);
        EMERALD_ORE = registerBlock(Blocks.eb, ItemGroup.BUILDING_BLOCKS);
        ENDER_CHEST = registerBlock(Blocks.ec, ItemGroup.DECORATIONS);
        TRIPWIRE_HOOK = registerBlock(Blocks.ed, ItemGroup.REDSTONE);
        EMERALD_BLOCK = registerBlock(Blocks.ef, ItemGroup.BUILDING_BLOCKS);
        SPRUCE_STAIRS = registerBlock(Blocks.eg, ItemGroup.BUILDING_BLOCKS);
        BIRCH_STAIRS = registerBlock(Blocks.eh, ItemGroup.BUILDING_BLOCKS);
        JUNGLE_STAIRS = registerBlock(Blocks.ei, ItemGroup.BUILDING_BLOCKS);
        COMMAND_BLOCK = register(new CommandBlockItem(Blocks.ej, new Item.Settings().rarity(Rarity.d)));
        BEACON = register(new BlockItem(Blocks.ek, new Item.Settings().itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        COBBLESTONE_WALL = registerBlock(Blocks.el, ItemGroup.DECORATIONS);
        MOSSY_COBBLESTONE_WALL = registerBlock(Blocks.em, ItemGroup.DECORATIONS);
        BRICK_WALL = registerBlock(Blocks.lw, ItemGroup.DECORATIONS);
        PRISMARINE_WALL = registerBlock(Blocks.lx, ItemGroup.DECORATIONS);
        RED_SANDSTONE_WALL = registerBlock(Blocks.ly, ItemGroup.DECORATIONS);
        MOSSY_STONE_BRICK_WALL = registerBlock(Blocks.lz, ItemGroup.DECORATIONS);
        GRANITE_WALL = registerBlock(Blocks.lA, ItemGroup.DECORATIONS);
        STONE_BRICK_WALL = registerBlock(Blocks.lB, ItemGroup.DECORATIONS);
        NETHER_BRICK_WALL = registerBlock(Blocks.lC, ItemGroup.DECORATIONS);
        ANDESITE_WALL = registerBlock(Blocks.lD, ItemGroup.DECORATIONS);
        RED_NETHER_BRICK_WALL = registerBlock(Blocks.lE, ItemGroup.DECORATIONS);
        SANDSTONE_WALL = registerBlock(Blocks.lF, ItemGroup.DECORATIONS);
        END_STONE_BRICK_WALL = registerBlock(Blocks.lG, ItemGroup.DECORATIONS);
        DIORITE_WALL = registerBlock(Blocks.lH, ItemGroup.DECORATIONS);
        OAK_BUTTON = registerBlock(Blocks.eO, ItemGroup.REDSTONE);
        SPRUCE_BUTTON = registerBlock(Blocks.eP, ItemGroup.REDSTONE);
        BIRCH_BUTTON = registerBlock(Blocks.eQ, ItemGroup.REDSTONE);
        JUNGLE_BUTTON = registerBlock(Blocks.eR, ItemGroup.REDSTONE);
        ACACIA_BUTTON = registerBlock(Blocks.eS, ItemGroup.REDSTONE);
        DARK_OAK_BUTTON = registerBlock(Blocks.eT, ItemGroup.REDSTONE);
        ANVIL = registerBlock(Blocks.fg, ItemGroup.DECORATIONS);
        CHIPPED_ANVIL = registerBlock(Blocks.fh, ItemGroup.DECORATIONS);
        DAMAGED_ANVIL = registerBlock(Blocks.fi, ItemGroup.DECORATIONS);
        TRAPPED_CHEST = registerBlock(Blocks.fj, ItemGroup.REDSTONE);
        LIGHT_WEIGHTED_PRESSURE_PLATE = registerBlock(Blocks.fk, ItemGroup.REDSTONE);
        HEAVY_WEIGHTED_PRESSURE_PLATE = registerBlock(Blocks.fl, ItemGroup.REDSTONE);
        DAYLIGHT_DETECTOR = registerBlock(Blocks.fn, ItemGroup.REDSTONE);
        REDSTONE_BLOCK = registerBlock(Blocks.fo, ItemGroup.REDSTONE);
        NETHER_QUARTZ_ORE = registerBlock(Blocks.fp, ItemGroup.BUILDING_BLOCKS);
        HOPPER = registerBlock(Blocks.fq, ItemGroup.REDSTONE);
        CHISELED_QUARTZ_BLOCK = registerBlock(Blocks.fs, ItemGroup.BUILDING_BLOCKS);
        QUARTZ_BLOCK = registerBlock(Blocks.fr, ItemGroup.BUILDING_BLOCKS);
        QUARTZ_PILLAR = registerBlock(Blocks.ft, ItemGroup.BUILDING_BLOCKS);
        QUARTZ_STAIRS = registerBlock(Blocks.fu, ItemGroup.BUILDING_BLOCKS);
        ACTIVATOR_RAIL = registerBlock(Blocks.fv, ItemGroup.TRANSPORTATION);
        DROPPER = registerBlock(Blocks.fw, ItemGroup.REDSTONE);
        WHITE_TERRACOTTA = registerBlock(Blocks.fx, ItemGroup.BUILDING_BLOCKS);
        ORANGE_TERRACOTTA = registerBlock(Blocks.fy, ItemGroup.BUILDING_BLOCKS);
        MAGENTA_TERRACOTTA = registerBlock(Blocks.fz, ItemGroup.BUILDING_BLOCKS);
        LIGHT_BLUE_TERRACOTTA = registerBlock(Blocks.fA, ItemGroup.BUILDING_BLOCKS);
        YELLOW_TERRACOTTA = registerBlock(Blocks.fB, ItemGroup.BUILDING_BLOCKS);
        LIME_TERRACOTTA = registerBlock(Blocks.fC, ItemGroup.BUILDING_BLOCKS);
        PINK_TERRACOTTA = registerBlock(Blocks.fD, ItemGroup.BUILDING_BLOCKS);
        GRAY_TERRACOTTA = registerBlock(Blocks.fE, ItemGroup.BUILDING_BLOCKS);
        LIGHT_GRAY_TERRACOTTA = registerBlock(Blocks.fF, ItemGroup.BUILDING_BLOCKS);
        CYAN_TERRACOTTA = registerBlock(Blocks.fG, ItemGroup.BUILDING_BLOCKS);
        PURPLE_TERRACOTTA = registerBlock(Blocks.fH, ItemGroup.BUILDING_BLOCKS);
        BLUE_TERRACOTTA = registerBlock(Blocks.fI, ItemGroup.BUILDING_BLOCKS);
        BROWN_TERRACOTTA = registerBlock(Blocks.fJ, ItemGroup.BUILDING_BLOCKS);
        GREEN_TERRACOTTA = registerBlock(Blocks.fK, ItemGroup.BUILDING_BLOCKS);
        RED_TERRACOTTA = registerBlock(Blocks.fL, ItemGroup.BUILDING_BLOCKS);
        BLACK_TERRACOTTA = registerBlock(Blocks.fM, ItemGroup.BUILDING_BLOCKS);
        BARRIER = registerBlock(Blocks.gg);
        IRON_TRAPDOOR = registerBlock(Blocks.gh, ItemGroup.REDSTONE);
        HAY_BLOCK = registerBlock(Blocks.gs, ItemGroup.BUILDING_BLOCKS);
        WHITE_CARPET = registerBlock(Blocks.gt, ItemGroup.DECORATIONS);
        ORANGE_CARPET = registerBlock(Blocks.gu, ItemGroup.DECORATIONS);
        MAGENTA_CARPET = registerBlock(Blocks.gv, ItemGroup.DECORATIONS);
        LIGHT_BLUE_CARPET = registerBlock(Blocks.gw, ItemGroup.DECORATIONS);
        YELLOW_CARPET = registerBlock(Blocks.gx, ItemGroup.DECORATIONS);
        LIME_CARPET = registerBlock(Blocks.gy, ItemGroup.DECORATIONS);
        PINK_CARPET = registerBlock(Blocks.gz, ItemGroup.DECORATIONS);
        GRAY_CARPET = registerBlock(Blocks.gA, ItemGroup.DECORATIONS);
        LIGHT_GRAY_CARPET = registerBlock(Blocks.gB, ItemGroup.DECORATIONS);
        CYAN_CARPET = registerBlock(Blocks.gC, ItemGroup.DECORATIONS);
        PURPLE_CARPET = registerBlock(Blocks.gD, ItemGroup.DECORATIONS);
        BLUE_CARPET = registerBlock(Blocks.gE, ItemGroup.DECORATIONS);
        BROWN_CARPET = registerBlock(Blocks.gF, ItemGroup.DECORATIONS);
        GREEN_CARPET = registerBlock(Blocks.gG, ItemGroup.DECORATIONS);
        RED_CARPET = registerBlock(Blocks.gH, ItemGroup.DECORATIONS);
        BLACK_CARPET = registerBlock(Blocks.gI, ItemGroup.DECORATIONS);
        TERRACOTTA = registerBlock(Blocks.gJ, ItemGroup.BUILDING_BLOCKS);
        COAL_BLOCK = registerBlock(Blocks.gK, ItemGroup.BUILDING_BLOCKS);
        PACKED_ICE = registerBlock(Blocks.gL, ItemGroup.BUILDING_BLOCKS);
        ACACIA_STAIRS = registerBlock(Blocks.gd, ItemGroup.BUILDING_BLOCKS);
        DARK_OAK_STAIRS = registerBlock(Blocks.ge, ItemGroup.BUILDING_BLOCKS);
        SLIME_BLOCK = registerBlock(Blocks.gf, ItemGroup.DECORATIONS);
        GRASS_PATH = registerBlock(Blocks.iw, ItemGroup.DECORATIONS);
        SUNFLOWER = register(new TallBlockItem(Blocks.gM, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        LILAC = register(new TallBlockItem(Blocks.gN, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        ROSE_BUSH = register(new TallBlockItem(Blocks.gO, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        PEONY = register(new TallBlockItem(Blocks.gP, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        TALL_GRASS = register(new TallBlockItem(Blocks.gQ, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        LARGE_FERN = register(new TallBlockItem(Blocks.gR, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        WHITE_STAINED_GLASS = registerBlock(Blocks.cR, ItemGroup.BUILDING_BLOCKS);
        ORANGE_STAINED_GLASS = registerBlock(Blocks.cS, ItemGroup.BUILDING_BLOCKS);
        MAGENTA_STAINED_GLASS = registerBlock(Blocks.cT, ItemGroup.BUILDING_BLOCKS);
        LIGHT_BLUE_STAINED_GLASS = registerBlock(Blocks.cU, ItemGroup.BUILDING_BLOCKS);
        YELLOW_STAINED_GLASS = registerBlock(Blocks.cV, ItemGroup.BUILDING_BLOCKS);
        LIME_STAINED_GLASS = registerBlock(Blocks.cW, ItemGroup.BUILDING_BLOCKS);
        PINK_STAINED_GLASS = registerBlock(Blocks.cX, ItemGroup.BUILDING_BLOCKS);
        GRAY_STAINED_GLASS = registerBlock(Blocks.cY, ItemGroup.BUILDING_BLOCKS);
        LIGHT_GRAY_STAINED_GLASS = registerBlock(Blocks.cZ, ItemGroup.BUILDING_BLOCKS);
        CYAN_STAINED_GLASS = registerBlock(Blocks.da, ItemGroup.BUILDING_BLOCKS);
        PURPLE_STAINED_GLASS = registerBlock(Blocks.db, ItemGroup.BUILDING_BLOCKS);
        BLUE_STAINED_GLASS = registerBlock(Blocks.dc, ItemGroup.BUILDING_BLOCKS);
        BROWN_STAINED_GLASS = registerBlock(Blocks.dd, ItemGroup.BUILDING_BLOCKS);
        GREEN_STAINED_GLASS = registerBlock(Blocks.de, ItemGroup.BUILDING_BLOCKS);
        RED_STAINED_GLASS = registerBlock(Blocks.df, ItemGroup.BUILDING_BLOCKS);
        BLACK_STAINED_GLASS = registerBlock(Blocks.dg, ItemGroup.BUILDING_BLOCKS);
        WHITE_STAINED_GLASS_PANE = registerBlock(Blocks.fN, ItemGroup.DECORATIONS);
        ORANGE_STAINED_GLASS_PANE = registerBlock(Blocks.fO, ItemGroup.DECORATIONS);
        MAGENTA_STAINED_GLASS_PANE = registerBlock(Blocks.fP, ItemGroup.DECORATIONS);
        LIGHT_BLUE_STAINED_GLASS_PANE = registerBlock(Blocks.fQ, ItemGroup.DECORATIONS);
        YELLOW_STAINED_GLASS_PANE = registerBlock(Blocks.fR, ItemGroup.DECORATIONS);
        LIME_STAINED_GLASS_PANE = registerBlock(Blocks.fS, ItemGroup.DECORATIONS);
        PINK_STAINED_GLASS_PANE = registerBlock(Blocks.fT, ItemGroup.DECORATIONS);
        GRAY_STAINED_GLASS_PANE = registerBlock(Blocks.fU, ItemGroup.DECORATIONS);
        LIGHT_GRAY_STAINED_GLASS_PANE = registerBlock(Blocks.fV, ItemGroup.DECORATIONS);
        CYAN_STAINED_GLASS_PANE = registerBlock(Blocks.fW, ItemGroup.DECORATIONS);
        PURPLE_STAINED_GLASS_PANE = registerBlock(Blocks.fX, ItemGroup.DECORATIONS);
        BLUE_STAINED_GLASS_PANE = registerBlock(Blocks.fY, ItemGroup.DECORATIONS);
        BROWN_STAINED_GLASS_PANE = registerBlock(Blocks.fZ, ItemGroup.DECORATIONS);
        GREEN_STAINED_GLASS_PANE = registerBlock(Blocks.ga, ItemGroup.DECORATIONS);
        RED_STAINED_GLASS_PANE = registerBlock(Blocks.gb, ItemGroup.DECORATIONS);
        BLACK_STAINED_GLASS_PANE = registerBlock(Blocks.gc, ItemGroup.DECORATIONS);
        PRISMARINE = registerBlock(Blocks.gi, ItemGroup.BUILDING_BLOCKS);
        PRISMARINE_BRICKS = registerBlock(Blocks.gj, ItemGroup.BUILDING_BLOCKS);
        DARK_PRISMARINE = registerBlock(Blocks.gk, ItemGroup.BUILDING_BLOCKS);
        PRISMARINE_STAIRS = registerBlock(Blocks.gl, ItemGroup.BUILDING_BLOCKS);
        PRISMARINE_BRICK_STAIRS = registerBlock(Blocks.gm, ItemGroup.BUILDING_BLOCKS);
        DARK_PRISMARINE_STAIRS = registerBlock(Blocks.gn, ItemGroup.BUILDING_BLOCKS);
        SEA_LANTERN = registerBlock(Blocks.gr, ItemGroup.BUILDING_BLOCKS);
        RED_SANDSTONE = registerBlock(Blocks.hy, ItemGroup.BUILDING_BLOCKS);
        CHISELED_RED_SANDSTONE = registerBlock(Blocks.hz, ItemGroup.BUILDING_BLOCKS);
        CUT_RED_SANDSTONE = registerBlock(Blocks.hA, ItemGroup.BUILDING_BLOCKS);
        RED_SANDSTONE_STAIRS = registerBlock(Blocks.hB, ItemGroup.BUILDING_BLOCKS);
        REPEATING_COMMAND_BLOCK = register(new CommandBlockItem(Blocks.iy, new Item.Settings().rarity(Rarity.d)));
        CHAIN_COMMAND_BLOCK = register(new CommandBlockItem(Blocks.iz, new Item.Settings().rarity(Rarity.d)));
        MAGMA_BLOCK = registerBlock(Blocks.iB, ItemGroup.BUILDING_BLOCKS);
        NETHER_WART_BLOCK = registerBlock(Blocks.iC, ItemGroup.BUILDING_BLOCKS);
        RED_NETHER_BRICKS = registerBlock(Blocks.iD, ItemGroup.BUILDING_BLOCKS);
        BONE_BLOCK = registerBlock(Blocks.iE, ItemGroup.BUILDING_BLOCKS);
        STRUCTURE_VOID = registerBlock(Blocks.iF);
        OBSERVER = registerBlock(Blocks.iG, ItemGroup.REDSTONE);
        SHULKER_BOX = register(new BlockItem(Blocks.iH, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        WHITE_SHULKER_BOX = register(new BlockItem(Blocks.iI, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        ORANGE_SHULKER_BOX = register(new BlockItem(Blocks.iJ, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        MAGENTA_SHULKER_BOX = register(new BlockItem(Blocks.iK, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        LIGHT_BLUE_SHULKER_BOX = register(new BlockItem(Blocks.iL, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        YELLOW_SHULKER_BOX = register(new BlockItem(Blocks.iM, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        LIME_SHULKER_BOX = register(new BlockItem(Blocks.iN, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        PINK_SHULKER_BOX = register(new BlockItem(Blocks.iO, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        GRAY_SHULKER_BOX = register(new BlockItem(Blocks.iP, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        LIGHT_GRAY_SHULKER_BOX = register(new BlockItem(Blocks.iQ, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        CYAN_SHULKER_BOX = register(new BlockItem(Blocks.iR, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        PURPLE_SHULKER_BOX = register(new BlockItem(Blocks.iS, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        BLUE_SHULKER_BOX = register(new BlockItem(Blocks.iT, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        BROWN_SHULKER_BOX = register(new BlockItem(Blocks.iU, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        GREEN_SHULKER_BOX = register(new BlockItem(Blocks.iV, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        RED_SHULKER_BOX = register(new BlockItem(Blocks.iW, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        BLACK_SHULKER_BOX = register(new BlockItem(Blocks.iX, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        WHITE_GLAZED_TERRACOTTA = registerBlock(Blocks.iY, ItemGroup.DECORATIONS);
        ORANGE_GLAZED_TERRACOTTA = registerBlock(Blocks.iZ, ItemGroup.DECORATIONS);
        MAGENTA_GLAZED_TERRACOTTA = registerBlock(Blocks.ja, ItemGroup.DECORATIONS);
        LIGHT_BLUE_GLAZED_TERRACOTTA = registerBlock(Blocks.jb, ItemGroup.DECORATIONS);
        YELLOW_GLAZED_TERRACOTTA = registerBlock(Blocks.jc, ItemGroup.DECORATIONS);
        LIME_GLAZED_TERRACOTTA = registerBlock(Blocks.jd, ItemGroup.DECORATIONS);
        PINK_GLAZED_TERRACOTTA = registerBlock(Blocks.je, ItemGroup.DECORATIONS);
        GRAY_GLAZED_TERRACOTTA = registerBlock(Blocks.jf, ItemGroup.DECORATIONS);
        LIGHT_GRAY_GLAZED_TERRACOTTA = registerBlock(Blocks.jg, ItemGroup.DECORATIONS);
        CYAN_GLAZED_TERRACOTTA = registerBlock(Blocks.jh, ItemGroup.DECORATIONS);
        PURPLE_GLAZED_TERRACOTTA = registerBlock(Blocks.ji, ItemGroup.DECORATIONS);
        BLUE_GLAZED_TERRACOTTA = registerBlock(Blocks.jj, ItemGroup.DECORATIONS);
        BROWN_GLAZED_TERRACOTTA = registerBlock(Blocks.jk, ItemGroup.DECORATIONS);
        GREEN_GLAZED_TERRACOTTA = registerBlock(Blocks.jl, ItemGroup.DECORATIONS);
        RED_GLAZED_TERRACOTTA = registerBlock(Blocks.jm, ItemGroup.DECORATIONS);
        BLACK_GLAZED_TERRACOTTA = registerBlock(Blocks.jn, ItemGroup.DECORATIONS);
        WHITE_CONCRETE = registerBlock(Blocks.jo, ItemGroup.BUILDING_BLOCKS);
        ORANGE_CONCRETE = registerBlock(Blocks.jp, ItemGroup.BUILDING_BLOCKS);
        MAGENTA_CONCRETE = registerBlock(Blocks.jq, ItemGroup.BUILDING_BLOCKS);
        LIGHT_BLUE_CONCRETE = registerBlock(Blocks.jr, ItemGroup.BUILDING_BLOCKS);
        YELLOW_CONCRETE = registerBlock(Blocks.js, ItemGroup.BUILDING_BLOCKS);
        LIME_CONCRETE = registerBlock(Blocks.jt, ItemGroup.BUILDING_BLOCKS);
        PINK_CONCRETE = registerBlock(Blocks.ju, ItemGroup.BUILDING_BLOCKS);
        GRAY_CONCRETE = registerBlock(Blocks.jv, ItemGroup.BUILDING_BLOCKS);
        LIGHT_GRAY_CONCRETE = registerBlock(Blocks.jw, ItemGroup.BUILDING_BLOCKS);
        CYAN_CONCRETE = registerBlock(Blocks.jx, ItemGroup.BUILDING_BLOCKS);
        PURPLE_CONCRETE = registerBlock(Blocks.jy, ItemGroup.BUILDING_BLOCKS);
        BLUE_CONCRETE = registerBlock(Blocks.jz, ItemGroup.BUILDING_BLOCKS);
        BROWN_CONCRETE = registerBlock(Blocks.jA, ItemGroup.BUILDING_BLOCKS);
        GREEN_CONCRETE = registerBlock(Blocks.jB, ItemGroup.BUILDING_BLOCKS);
        RED_CONCRETE = registerBlock(Blocks.jC, ItemGroup.BUILDING_BLOCKS);
        BLACK_CONCRETE = registerBlock(Blocks.jD, ItemGroup.BUILDING_BLOCKS);
        WHITE_CONCRETE_POWDER = registerBlock(Blocks.jE, ItemGroup.BUILDING_BLOCKS);
        ORANGE_CONCRETE_POWDER = registerBlock(Blocks.jF, ItemGroup.BUILDING_BLOCKS);
        MAGENTA_CONCRETE_POWDER = registerBlock(Blocks.jG, ItemGroup.BUILDING_BLOCKS);
        LIGHT_BLUE_CONCRETE_POWDER = registerBlock(Blocks.jH, ItemGroup.BUILDING_BLOCKS);
        YELLOW_CONCRETE_POWDER = registerBlock(Blocks.jI, ItemGroup.BUILDING_BLOCKS);
        LIME_CONCRETE_POWDER = registerBlock(Blocks.jJ, ItemGroup.BUILDING_BLOCKS);
        PINK_CONCRETE_POWDER = registerBlock(Blocks.jK, ItemGroup.BUILDING_BLOCKS);
        GRAY_CONCRETE_POWDER = registerBlock(Blocks.jL, ItemGroup.BUILDING_BLOCKS);
        LIGHT_GRAY_CONCRETE_POWDER = registerBlock(Blocks.jM, ItemGroup.BUILDING_BLOCKS);
        CYAN_CONCRETE_POWDER = registerBlock(Blocks.jN, ItemGroup.BUILDING_BLOCKS);
        PURPLE_CONCRETE_POWDER = registerBlock(Blocks.jO, ItemGroup.BUILDING_BLOCKS);
        BLUE_CONCRETE_POWDER = registerBlock(Blocks.jP, ItemGroup.BUILDING_BLOCKS);
        BROWN_CONCRETE_POWDER = registerBlock(Blocks.jQ, ItemGroup.BUILDING_BLOCKS);
        GREEN_CONCRETE_POWDER = registerBlock(Blocks.jR, ItemGroup.BUILDING_BLOCKS);
        RED_CONCRETE_POWDER = registerBlock(Blocks.jS, ItemGroup.BUILDING_BLOCKS);
        BLACK_CONCRETE_POWDER = registerBlock(Blocks.jT, ItemGroup.BUILDING_BLOCKS);
        TURTLE_EGG = registerBlock(Blocks.jX, ItemGroup.MISC);
        DEAD_TUBE_CORAL_BLOCK = registerBlock(Blocks.jY, ItemGroup.BUILDING_BLOCKS);
        DEAD_BRAIN_CORAL_BLOCK = registerBlock(Blocks.jZ, ItemGroup.BUILDING_BLOCKS);
        DEAD_BUBBLE_CORAL_BLOCK = registerBlock(Blocks.ka, ItemGroup.BUILDING_BLOCKS);
        DEAD_FIRE_CORAL_BLOCK = registerBlock(Blocks.kb, ItemGroup.BUILDING_BLOCKS);
        DEAD_HORN_CORAL_BLOCK = registerBlock(Blocks.kc, ItemGroup.BUILDING_BLOCKS);
        TUBE_CORAL_BLOCK = registerBlock(Blocks.kd, ItemGroup.BUILDING_BLOCKS);
        BRAIN_CORAL_BLOCK = registerBlock(Blocks.ke, ItemGroup.BUILDING_BLOCKS);
        BUBBLE_CORAL_BLOCK = registerBlock(Blocks.kf, ItemGroup.BUILDING_BLOCKS);
        FIRE_CORAL_BLOCK = registerBlock(Blocks.kg, ItemGroup.BUILDING_BLOCKS);
        HORN_CORAL_BLOCK = registerBlock(Blocks.kh, ItemGroup.BUILDING_BLOCKS);
        TUBE_CORAL = registerBlock(Blocks.kn, ItemGroup.DECORATIONS);
        BRAIN_CORAL = registerBlock(Blocks.ko, ItemGroup.DECORATIONS);
        BUBBLE_CORAL = registerBlock(Blocks.kp, ItemGroup.DECORATIONS);
        FIRE_CORAL = registerBlock(Blocks.kq, ItemGroup.DECORATIONS);
        HORN_CORAL = registerBlock(Blocks.kr, ItemGroup.DECORATIONS);
        DEAD_BRAIN_CORAL = registerBlock(Blocks.kj, ItemGroup.DECORATIONS);
        DEAD_BUBBLE_CORAL = registerBlock(Blocks.kk, ItemGroup.DECORATIONS);
        DEAD_FIRE_CORAL = registerBlock(Blocks.kl, ItemGroup.DECORATIONS);
        DEAD_HORN_CORAL = registerBlock(Blocks.km, ItemGroup.DECORATIONS);
        DEAD_TUBE_CORAL = registerBlock(Blocks.ki, ItemGroup.DECORATIONS);
        TUBE_CORAL_FAN = register(new WallStandingBlockItem(Blocks.kx, Blocks.kH, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        BRAIN_CORAL_FAN = register(new WallStandingBlockItem(Blocks.ky, Blocks.kI, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        BUBBLE_CORAL_FAN = register(new WallStandingBlockItem(Blocks.kz, Blocks.kJ, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        FIRE_CORAL_FAN = register(new WallStandingBlockItem(Blocks.kA, Blocks.kK, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        HORN_CORAL_FAN = register(new WallStandingBlockItem(Blocks.kB, Blocks.kL, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        DEAD_TUBE_CORAL_FAN = register(new WallStandingBlockItem(Blocks.ks, Blocks.kC, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        DEAD_BRAIN_CORAL_FAN = register(new WallStandingBlockItem(Blocks.kt, Blocks.kD, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        DEAD_BUBBLE_CORAL_FAN = register(new WallStandingBlockItem(Blocks.ku, Blocks.kE, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        DEAD_FIRE_CORAL_FAN = register(new WallStandingBlockItem(Blocks.kv, Blocks.kF, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        DEAD_HORN_CORAL_FAN = register(new WallStandingBlockItem(Blocks.kw, Blocks.kG, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        BLUE_ICE = registerBlock(Blocks.kN, ItemGroup.BUILDING_BLOCKS);
        CONDUIT = register(new BlockItem(Blocks.kO, new Item.Settings().itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        POLISHED_GRANITE_STAIRS = registerBlock(Blocks.kV, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_RED_SANDSTONE_STAIRS = registerBlock(Blocks.kW, ItemGroup.BUILDING_BLOCKS);
        MOSSY_STONE_BRICK_STAIRS = registerBlock(Blocks.kX, ItemGroup.BUILDING_BLOCKS);
        POLISHED_DIORITE_STAIRS = registerBlock(Blocks.kY, ItemGroup.BUILDING_BLOCKS);
        MOSSY_COBBLESTONE_STAIRS = registerBlock(Blocks.kZ, ItemGroup.BUILDING_BLOCKS);
        END_STONE_BRICK_STAIRS = registerBlock(Blocks.la, ItemGroup.BUILDING_BLOCKS);
        STONE_STAIRS = registerBlock(Blocks.lb, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_SANDSTONE_STAIRS = registerBlock(Blocks.lc, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_QUARTZ_STAIRS = registerBlock(Blocks.ld, ItemGroup.BUILDING_BLOCKS);
        GRANITE_STAIRS = registerBlock(Blocks.le, ItemGroup.BUILDING_BLOCKS);
        ANDESITE_STAIRS = registerBlock(Blocks.lf, ItemGroup.BUILDING_BLOCKS);
        RED_NETHER_BRICK_STAIRS = registerBlock(Blocks.lg, ItemGroup.BUILDING_BLOCKS);
        POLISHED_ANDESITE_STAIRS = registerBlock(Blocks.lh, ItemGroup.BUILDING_BLOCKS);
        DIORITE_STAIRS = registerBlock(Blocks.li, ItemGroup.BUILDING_BLOCKS);
        POLISHED_GRANITE_SLAB = registerBlock(Blocks.lj, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_RED_SANDSTONE_SLAB = registerBlock(Blocks.lk, ItemGroup.BUILDING_BLOCKS);
        MOSSY_STONE_BRICK_SLAB = registerBlock(Blocks.ll, ItemGroup.BUILDING_BLOCKS);
        POLISHED_DIORITE_SLAB = registerBlock(Blocks.lm, ItemGroup.BUILDING_BLOCKS);
        MOSSY_COBBLESTONE_SLAB = registerBlock(Blocks.ln, ItemGroup.BUILDING_BLOCKS);
        END_STONE_BRICK_SLAB = registerBlock(Blocks.lo, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_SANDSTONE_SLAB = registerBlock(Blocks.lp, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_QUARTZ_SLAB = registerBlock(Blocks.lq, ItemGroup.BUILDING_BLOCKS);
        GRANITE_SLAB = registerBlock(Blocks.lr, ItemGroup.BUILDING_BLOCKS);
        ANDESITE_SLAB = registerBlock(Blocks.ls, ItemGroup.BUILDING_BLOCKS);
        RED_NETHER_BRICK_SLAB = registerBlock(Blocks.lt, ItemGroup.BUILDING_BLOCKS);
        POLISHED_ANDESITE_SLAB = registerBlock(Blocks.lu, ItemGroup.BUILDING_BLOCKS);
        DIORITE_SLAB = registerBlock(Blocks.lv, ItemGroup.BUILDING_BLOCKS);
        SCAFFOLDING = register(new ScaffoldingItem(Blocks.lI, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        IRON_DOOR = register(new TallBlockItem(Blocks.cp, new Item.Settings().itemGroup(ItemGroup.REDSTONE)));
        OAK_DOOR = register(new TallBlockItem(Blocks.cd, new Item.Settings().itemGroup(ItemGroup.REDSTONE)));
        SPRUCE_DOOR = register(new TallBlockItem(Blocks.ij, new Item.Settings().itemGroup(ItemGroup.REDSTONE)));
        BIRCH_DOOR = register(new TallBlockItem(Blocks.ik, new Item.Settings().itemGroup(ItemGroup.REDSTONE)));
        JUNGLE_DOOR = register(new TallBlockItem(Blocks.il, new Item.Settings().itemGroup(ItemGroup.REDSTONE)));
        ACACIA_DOOR = register(new TallBlockItem(Blocks.im, new Item.Settings().itemGroup(ItemGroup.REDSTONE)));
        DARK_OAK_DOOR = register(new TallBlockItem(Blocks.in, new Item.Settings().itemGroup(ItemGroup.REDSTONE)));
        REPEATER = registerBlock(Blocks.cQ, ItemGroup.REDSTONE);
        COMPARATOR = registerBlock(Blocks.fm, ItemGroup.REDSTONE);
        STRUCTURE_BLOCK = register(new CommandBlockItem(Blocks.lX, new Item.Settings().rarity(Rarity.d)));
        JIGSAW = register(new CommandBlockItem(Blocks.lY, new Item.Settings().rarity(Rarity.d)));
        COMPOSTER = registerBlock(Blocks.lZ, ItemGroup.MISC);
        iY = register("turtle_helmet", new ArmorItem(ArmorMaterials.f, EquipmentSlot.HEAD, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        iZ = register("scute", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        ja = register("iron_shovel", new ShovelItem(ToolMaterials.c, 1.5f, -3.0f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jb = register("iron_pickaxe", new PickaxeItem(ToolMaterials.c, 1, -2.8f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jc = register("iron_axe", new AxeItem(ToolMaterials.c, 6.0f, -3.1f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jd = register("flint_and_steel", new FlintAndSteelItem(new Item.Settings().durability(64).itemGroup(ItemGroup.TOOLS)));
        je = register("apple", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.APPLE)));
        jf = register("bow", new BowItem(new Item.Settings().durability(384).itemGroup(ItemGroup.COMBAT)));
        jg = register("arrow", new ArrowItem(new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jh = register("coal", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        ji = register("charcoal", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        jj = register("diamond", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        jk = register("iron_ingot", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        jl = register("gold_ingot", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        jm = register("iron_sword", new SwordItem(ToolMaterials.c, 3, -2.4f, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jn = register("wooden_sword", new SwordItem(ToolMaterials.a, 3, -2.4f, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jo = register("wooden_shovel", new ShovelItem(ToolMaterials.a, 1.5f, -3.0f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jp = register("wooden_pickaxe", new PickaxeItem(ToolMaterials.a, 1, -2.8f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jq = register("wooden_axe", new AxeItem(ToolMaterials.a, 6.0f, -3.2f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jr = register("stone_sword", new SwordItem(ToolMaterials.b, 3, -2.4f, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        js = register("stone_shovel", new ShovelItem(ToolMaterials.b, 1.5f, -3.0f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jt = register("stone_pickaxe", new PickaxeItem(ToolMaterials.b, 1, -2.8f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        ju = register("stone_axe", new AxeItem(ToolMaterials.b, 7.0f, -3.2f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jv = register("diamond_sword", new SwordItem(ToolMaterials.d, 3, -2.4f, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jw = register("diamond_shovel", new ShovelItem(ToolMaterials.d, 1.5f, -3.0f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jx = register("diamond_pickaxe", new PickaxeItem(ToolMaterials.d, 1, -2.8f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jy = register("diamond_axe", new AxeItem(ToolMaterials.d, 5.0f, -3.0f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jz = register("stick", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        jA = register("bowl", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        jB = register("mushroom_stew", new MushroomStewItem(new Item.Settings().stackSize(1).itemGroup(ItemGroup.FOOD).food(FoodItemSettings.MUSHROOM_STEW)));
        jC = register("golden_sword", new SwordItem(ToolMaterials.e, 3, -2.4f, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jD = register("golden_shovel", new ShovelItem(ToolMaterials.e, 1.5f, -3.0f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jE = register("golden_pickaxe", new PickaxeItem(ToolMaterials.e, 1, -2.8f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jF = register("golden_axe", new AxeItem(ToolMaterials.e, 6.0f, -3.0f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jG = register("string", new AliasedBlockItem(Blocks.ee, new Item.Settings().itemGroup(ItemGroup.MISC)));
        jH = register("feather", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        jI = register("gunpowder", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        jJ = register("wooden_hoe", new HoeItem(ToolMaterials.a, -3.0f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jK = register("stone_hoe", new HoeItem(ToolMaterials.b, -2.0f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jL = register("iron_hoe", new HoeItem(ToolMaterials.c, -1.0f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jM = register("diamond_hoe", new HoeItem(ToolMaterials.d, 0.0f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jN = register("golden_hoe", new HoeItem(ToolMaterials.e, -3.0f, new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        jO = register("wheat_seeds", new AliasedBlockItem(Blocks.bU, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        jP = register("wheat", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        jQ = register("bread", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.BREAD)));
        jR = register("leather_helmet", new DyeableArmorItem(ArmorMaterials.a, EquipmentSlot.HEAD, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jS = register("leather_chestplate", new DyeableArmorItem(ArmorMaterials.a, EquipmentSlot.CHEST, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jT = register("leather_leggings", new DyeableArmorItem(ArmorMaterials.a, EquipmentSlot.LEGS, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jU = register("leather_boots", new DyeableArmorItem(ArmorMaterials.a, EquipmentSlot.FEET, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jV = register("chainmail_helmet", new ArmorItem(ArmorMaterials.b, EquipmentSlot.HEAD, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jW = register("chainmail_chestplate", new ArmorItem(ArmorMaterials.b, EquipmentSlot.CHEST, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jX = register("chainmail_leggings", new ArmorItem(ArmorMaterials.b, EquipmentSlot.LEGS, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jY = register("chainmail_boots", new ArmorItem(ArmorMaterials.b, EquipmentSlot.FEET, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        jZ = register("iron_helmet", new ArmorItem(ArmorMaterials.c, EquipmentSlot.HEAD, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        ka = register("iron_chestplate", new ArmorItem(ArmorMaterials.c, EquipmentSlot.CHEST, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        kb = register("iron_leggings", new ArmorItem(ArmorMaterials.c, EquipmentSlot.LEGS, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        kc = register("iron_boots", new ArmorItem(ArmorMaterials.c, EquipmentSlot.FEET, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        kd = register("diamond_helmet", new ArmorItem(ArmorMaterials.e, EquipmentSlot.HEAD, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        ke = register("diamond_chestplate", new ArmorItem(ArmorMaterials.e, EquipmentSlot.CHEST, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        kf = register("diamond_leggings", new ArmorItem(ArmorMaterials.e, EquipmentSlot.LEGS, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        kg = register("diamond_boots", new ArmorItem(ArmorMaterials.e, EquipmentSlot.FEET, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        kh = register("golden_helmet", new ArmorItem(ArmorMaterials.d, EquipmentSlot.HEAD, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        ki = register("golden_chestplate", new ArmorItem(ArmorMaterials.d, EquipmentSlot.CHEST, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        kj = register("golden_leggings", new ArmorItem(ArmorMaterials.d, EquipmentSlot.LEGS, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        kk = register("golden_boots", new ArmorItem(ArmorMaterials.d, EquipmentSlot.FEET, new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        kl = register("flint", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        km = register("porkchop", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.PORKCHOP)));
        kn = register("cooked_porkchop", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.COOKED_PORKCHOP)));
        ko = register("painting", new DecorationItem(EntityType.PAINTING, new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        kp = register("golden_apple", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).rarity(Rarity.c).food(FoodItemSettings.GOLDEN_APPLE)));
        kq = register("enchanted_golden_apple", new EnchantedGoldenAppleItem(new Item.Settings().itemGroup(ItemGroup.FOOD).rarity(Rarity.d).food(FoodItemSettings.ENCHANTED_GOLDEN_APPLE)));
        kr = register("oak_sign", new SignItem(new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS), Blocks.bX, Blocks.ch));
        ks = register("spruce_sign", new SignItem(new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS), Blocks.bY, Blocks.ci));
        kt = register("birch_sign", new SignItem(new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS), Blocks.bZ, Blocks.cj));
        ku = register("jungle_sign", new SignItem(new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS), Blocks.cb, Blocks.cl));
        kv = register("acacia_sign", new SignItem(new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS), Blocks.ca, Blocks.ck));
        kw = register("dark_oak_sign", new SignItem(new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS), Blocks.cc, Blocks.cm));
        kx = register("bucket", new BucketItem(Fluids.EMPTY, new Item.Settings().stackSize(16).itemGroup(ItemGroup.MISC)));
        ky = register("water_bucket", new BucketItem(Fluids.WATER, new Item.Settings().recipeRemainder(Items.kx).stackSize(1).itemGroup(ItemGroup.MISC)));
        kz = register("lava_bucket", new BucketItem(Fluids.LAVA, new Item.Settings().recipeRemainder(Items.kx).stackSize(1).itemGroup(ItemGroup.MISC)));
        kA = register("minecart", new MinecartItem(AbstractMinecartEntity.Type.a, new Item.Settings().stackSize(1).itemGroup(ItemGroup.TRANSPORTATION)));
        kB = register("saddle", new SaddleItem(new Item.Settings().stackSize(1).itemGroup(ItemGroup.TRANSPORTATION)));
        kC = register("redstone", new AliasedBlockItem(Blocks.bQ, new Item.Settings().itemGroup(ItemGroup.REDSTONE)));
        kD = register("snowball", new SnowballItem(new Item.Settings().stackSize(16).itemGroup(ItemGroup.MISC)));
        kE = register("oak_boat", new BoatItem(BoatEntity.Type.OAK, new Item.Settings().stackSize(1).itemGroup(ItemGroup.TRANSPORTATION)));
        kF = register("leather", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        kG = register("milk_bucket", new MilkBucketItem(new Item.Settings().recipeRemainder(Items.kx).stackSize(1).itemGroup(ItemGroup.MISC)));
        kH = register("pufferfish_bucket", new FishBucketItem(EntityType.PUFFERFISH, Fluids.WATER, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC)));
        kI = register("salmon_bucket", new FishBucketItem(EntityType.SALMON, Fluids.WATER, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC)));
        kJ = register("cod_bucket", new FishBucketItem(EntityType.COD, Fluids.WATER, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC)));
        kK = register("tropical_fish_bucket", new FishBucketItem(EntityType.TROPICAL_FISH, Fluids.WATER, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC)));
        kL = register("brick", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        kM = register("clay_ball", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        SUGAR_CANE = registerBlock(Blocks.cF, ItemGroup.MISC);
        KELP = registerBlock(Blocks.jU, ItemGroup.MISC);
        DRIED_KELP_BLOCK = registerBlock(Blocks.jW, ItemGroup.BUILDING_BLOCKS);
        BAMBOO = registerBlock(Blocks.kQ, ItemGroup.MATERIALS);
        kR = register("paper", new Item(new Item.Settings().itemGroup(ItemGroup.MISC)));
        kS = register("book", new BookItem(new Item.Settings().itemGroup(ItemGroup.MISC)));
        kT = register("slime_ball", new Item(new Item.Settings().itemGroup(ItemGroup.MISC)));
        kU = register("chest_minecart", new MinecartItem(AbstractMinecartEntity.Type.b, new Item.Settings().stackSize(1).itemGroup(ItemGroup.TRANSPORTATION)));
        kV = register("furnace_minecart", new MinecartItem(AbstractMinecartEntity.Type.c, new Item.Settings().stackSize(1).itemGroup(ItemGroup.TRANSPORTATION)));
        kW = register("egg", new EggItem(new Item.Settings().stackSize(16).itemGroup(ItemGroup.MATERIALS)));
        kX = register("compass", new CompassItem(new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        kY = register("fishing_rod", new FishingRodItem(new Item.Settings().durability(64).itemGroup(ItemGroup.TOOLS)));
        kZ = register("clock", new ClockItem(new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        la = register("glowstone_dust", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lb = register("cod", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.COD)));
        lc = register("salmon", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.SALMON)));
        ld = register("tropical_fish", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.TROPICAL_FISH)));
        le = register("pufferfish", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.PUFFERFISH)));
        lf = register("cooked_cod", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.COOKED_COD)));
        lg = register("cooked_salmon", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.COOKED_SALMON)));
        lh = register("ink_sac", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        li = register("red_dye", new DyeItem(DyeColor.o, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lj = register("green_dye", new DyeItem(DyeColor.n, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lk = register("cocoa_beans", new AliasedBlockItem(Blocks.dZ, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        ll = register("lapis_lazuli", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lm = register("purple_dye", new DyeItem(DyeColor.k, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        ln = register("cyan_dye", new DyeItem(DyeColor.j, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lo = register("light_gray_dye", new DyeItem(DyeColor.i, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lp = register("gray_dye", new DyeItem(DyeColor.h, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lq = register("pink_dye", new DyeItem(DyeColor.g, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lr = register("lime_dye", new DyeItem(DyeColor.f, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        ls = register("yellow_dye", new DyeItem(DyeColor.e, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lt = register("light_blue_dye", new DyeItem(DyeColor.d, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lu = register("magenta_dye", new DyeItem(DyeColor.c, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lv = register("orange_dye", new DyeItem(DyeColor.b, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lw = register("bone_meal", new BoneMealItem(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lx = register("blue_dye", new DyeItem(DyeColor.l, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        ly = register("brown_dye", new DyeItem(DyeColor.m, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lz = register("black_dye", new DyeItem(DyeColor.BLACK, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lA = register("white_dye", new DyeItem(DyeColor.a, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        lB = register("bone", new Item(new Item.Settings().itemGroup(ItemGroup.MISC)));
        lC = register("sugar", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        CAKE = register(new BlockItem(Blocks.cP, new Item.Settings().stackSize(1).itemGroup(ItemGroup.FOOD)));
        WHITE_BED = register(new BedItem(Blocks.aw, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        ORANGE_BED = register(new BedItem(Blocks.ax, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        MAGENTA_BED = register(new BedItem(Blocks.ay, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        LIGHT_BLUE_BED = register(new BedItem(Blocks.az, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        YELLOW_BED = register(new BedItem(Blocks.aA, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        LIME_BED = register(new BedItem(Blocks.aB, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        PINK_BED = register(new BedItem(Blocks.aC, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        GRAY_BED = register(new BedItem(Blocks.aD, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        LIGHT_GRAY_BED = register(new BedItem(Blocks.aE, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        CYAN_BED = register(new BedItem(Blocks.aF, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        PURPLE_BED = register(new BedItem(Blocks.aG, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        BLUE_BED = register(new BedItem(Blocks.aH, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        BROWN_BED = register(new BedItem(Blocks.aI, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        GREEN_BED = register(new BedItem(Blocks.aJ, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        RED_BED = register(new BedItem(Blocks.aK, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        BLACK_BED = register(new BedItem(Blocks.aL, new Item.Settings().stackSize(1).itemGroup(ItemGroup.DECORATIONS)));
        lU = register("cookie", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.COOKIE)));
        lV = register("filled_map", new FilledMapItem(new Item.Settings()));
        lW = register("shears", new ShearsItem(new Item.Settings().durability(238).itemGroup(ItemGroup.TOOLS)));
        lX = register("melon_slice", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.MELON_SLICE)));
        lY = register("dried_kelp", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.DRIED_KELP)));
        lZ = register("pumpkin_seeds", new AliasedBlockItem(Blocks.dF, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        ma = register("melon_seeds", new AliasedBlockItem(Blocks.dG, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        mb = register("beef", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.BEEF)));
        mc = register("cooked_beef", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.COOKED_BEEF)));
        md = register("chicken", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.CHICKEN)));
        me = register("cooked_chicken", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.COOKED_CHICKEN)));
        mf = register("rotten_flesh", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.ROTTEN_FLESH)));
        mg = register("ender_pearl", new EnderPearlItem(new Item.Settings().stackSize(16).itemGroup(ItemGroup.MISC)));
        mh = register("blaze_rod", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        mi = register("ghast_tear", new Item(new Item.Settings().itemGroup(ItemGroup.BREWING)));
        mj = register("gold_nugget", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        mk = register("nether_wart", new AliasedBlockItem(Blocks.dQ, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        ml = register("potion", new PotionItem(new Item.Settings().stackSize(1).itemGroup(ItemGroup.BREWING)));
        mm = register("glass_bottle", new GlassBottleItem(new Item.Settings().itemGroup(ItemGroup.BREWING)));
        mn = register("spider_eye", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.SPIDER_EYE)));
        mo = register("fermented_spider_eye", new Item(new Item.Settings().itemGroup(ItemGroup.BREWING)));
        mp = register("blaze_powder", new Item(new Item.Settings().itemGroup(ItemGroup.BREWING)));
        mq = register("magma_cream", new Item(new Item.Settings().itemGroup(ItemGroup.BREWING)));
        BREWING_STAND = registerBlock(Blocks.dS, ItemGroup.BREWING);
        CAULDRON = registerBlock(Blocks.dT, ItemGroup.BREWING);
        mt = register("ender_eye", new EnderEyeItem(new Item.Settings().itemGroup(ItemGroup.MISC)));
        mu = register("glistering_melon_slice", new Item(new Item.Settings().itemGroup(ItemGroup.BREWING)));
        mv = register("bat_spawn_egg", new SpawnEggItem(EntityType.BAT, 4996656, 986895, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mw = register("blaze_spawn_egg", new SpawnEggItem(EntityType.BLAZE, 16167425, 16775294, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mx = register("cat_spawn_egg", new SpawnEggItem(EntityType.CAT, 15714446, 9794134, new Item.Settings().itemGroup(ItemGroup.MISC)));
        my = register("cave_spider_spawn_egg", new SpawnEggItem(EntityType.CAVE_SPIDER, 803406, 11013646, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mz = register("chicken_spawn_egg", new SpawnEggItem(EntityType.CHICKEN, 10592673, 16711680, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mA = register("cod_spawn_egg", new SpawnEggItem(EntityType.COD, 12691306, 15058059, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mB = register("cow_spawn_egg", new SpawnEggItem(EntityType.COW, 4470310, 10592673, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mC = register("creeper_spawn_egg", new SpawnEggItem(EntityType.CREEPER, 894731, 0, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mD = register("dolphin_spawn_egg", new SpawnEggItem(EntityType.DOLPHIN, 2243405, 16382457, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mE = register("donkey_spawn_egg", new SpawnEggItem(EntityType.DONKEY, 5457209, 8811878, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mF = register("drowned_spawn_egg", new SpawnEggItem(EntityType.DROWNED, 9433559, 7969893, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mG = register("elder_guardian_spawn_egg", new SpawnEggItem(EntityType.ELDER_GUARDIAN, 13552826, 7632531, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mH = register("enderman_spawn_egg", new SpawnEggItem(EntityType.ENDERMAN, 1447446, 0, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mI = register("endermite_spawn_egg", new SpawnEggItem(EntityType.ENDERMITE, 1447446, 7237230, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mJ = register("evoker_spawn_egg", new SpawnEggItem(EntityType.EVOKER, 9804699, 1973274, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mK = register("fox_spawn_egg", new SpawnEggItem(EntityType.B, 14005919, 13396256, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mL = register("ghast_spawn_egg", new SpawnEggItem(EntityType.GHAST, 16382457, 12369084, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mM = register("guardian_spawn_egg", new SpawnEggItem(EntityType.GUARDIAN, 5931634, 15826224, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mN = register("horse_spawn_egg", new SpawnEggItem(EntityType.HORSE, 12623485, 15656192, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mO = register("husk_spawn_egg", new SpawnEggItem(EntityType.HUSK, 7958625, 15125652, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mP = register("llama_spawn_egg", new SpawnEggItem(EntityType.LLAMA, 12623485, 10051392, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mQ = register("magma_cube_spawn_egg", new SpawnEggItem(EntityType.MAGMA_CUBE, 3407872, 16579584, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mR = register("mooshroom_spawn_egg", new SpawnEggItem(EntityType.MOOSHROOM, 10489616, 12040119, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mS = register("mule_spawn_egg", new SpawnEggItem(EntityType.MULE, 1769984, 5321501, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mT = register("ocelot_spawn_egg", new SpawnEggItem(EntityType.OCELOT, 15720061, 5653556, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mU = register("panda_spawn_egg", new SpawnEggItem(EntityType.PANDA, 15198183, 1776418, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mV = register("parrot_spawn_egg", new SpawnEggItem(EntityType.PARROT, 894731, 16711680, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mW = register("phantom_spawn_egg", new SpawnEggItem(EntityType.PHANTOM, 4411786, 8978176, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mX = register("pig_spawn_egg", new SpawnEggItem(EntityType.PIG, 15771042, 14377823, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mY = register("pillager_spawn_egg", new SpawnEggItem(EntityType.PILLAGER, 5451574, 9804699, new Item.Settings().itemGroup(ItemGroup.MISC)));
        mZ = register("polar_bear_spawn_egg", new SpawnEggItem(EntityType.POLAR_BEAR, 15921906, 9803152, new Item.Settings().itemGroup(ItemGroup.MISC)));
        na = register("pufferfish_spawn_egg", new SpawnEggItem(EntityType.PUFFERFISH, 16167425, 3654642, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nb = register("rabbit_spawn_egg", new SpawnEggItem(EntityType.RABBIT, 10051392, 7555121, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nc = register("ravager_spawn_egg", new SpawnEggItem(EntityType.RAVAGER, 7697520, 5984329, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nd = register("salmon_spawn_egg", new SpawnEggItem(EntityType.SALMON, 10489616, 951412, new Item.Settings().itemGroup(ItemGroup.MISC)));
        ne = register("sheep_spawn_egg", new SpawnEggItem(EntityType.SHEEP, 15198183, 16758197, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nf = register("shulker_spawn_egg", new SpawnEggItem(EntityType.SHULKER, 9725844, 5060690, new Item.Settings().itemGroup(ItemGroup.MISC)));
        ng = register("silverfish_spawn_egg", new SpawnEggItem(EntityType.SILVERFISH, 7237230, 3158064, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nh = register("skeleton_spawn_egg", new SpawnEggItem(EntityType.SKELETON, 12698049, 4802889, new Item.Settings().itemGroup(ItemGroup.MISC)));
        ni = register("skeleton_horse_spawn_egg", new SpawnEggItem(EntityType.SKELETON_HORSE, 6842447, 15066584, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nj = register("slime_spawn_egg", new SpawnEggItem(EntityType.SLIME, 5349438, 8306542, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nk = register("spider_spawn_egg", new SpawnEggItem(EntityType.SPIDER, 3419431, 11013646, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nl = register("squid_spawn_egg", new SpawnEggItem(EntityType.SQUID, 2243405, 7375001, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nm = register("stray_spawn_egg", new SpawnEggItem(EntityType.STRAY, 6387319, 14543594, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nn = register("trader_llama_spawn_egg", new SpawnEggItem(EntityType.ax, 15377456, 4547222, new Item.Settings().itemGroup(ItemGroup.MISC)));
        no = register("tropical_fish_spawn_egg", new SpawnEggItem(EntityType.TROPICAL_FISH, 15690005, 16775663, new Item.Settings().itemGroup(ItemGroup.MISC)));
        np = register("turtle_spawn_egg", new SpawnEggItem(EntityType.TURTLE, 15198183, 44975, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nq = register("vex_spawn_egg", new SpawnEggItem(EntityType.VEX, 8032420, 15265265, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nr = register("villager_spawn_egg", new SpawnEggItem(EntityType.VILLAGER, 5651507, 12422002, new Item.Settings().itemGroup(ItemGroup.MISC)));
        ns = register("vindicator_spawn_egg", new SpawnEggItem(EntityType.VINDICATOR, 9804699, 2580065, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nt = register("wandering_trader_spawn_egg", new SpawnEggItem(EntityType.aK, 4547222, 15377456, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nu = register("witch_spawn_egg", new SpawnEggItem(EntityType.WITCH, 3407872, 5349438, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nv = register("wither_skeleton_spawn_egg", new SpawnEggItem(EntityType.WITHER_SKELETON, 1315860, 4672845, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nw = register("wolf_spawn_egg", new SpawnEggItem(EntityType.WOLF, 14144467, 13545366, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nx = register("zombie_spawn_egg", new SpawnEggItem(EntityType.ZOMBIE, 44975, 7969893, new Item.Settings().itemGroup(ItemGroup.MISC)));
        ny = register("zombie_horse_spawn_egg", new SpawnEggItem(EntityType.ZOMBIE_HORSE, 3232308, 9945732, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nz = register("zombie_pigman_spawn_egg", new SpawnEggItem(EntityType.ZOMBIE_PIGMAN, 15373203, 5009705, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nA = register("zombie_villager_spawn_egg", new SpawnEggItem(EntityType.ZOMBIE_VILLAGER, 5651507, 7969893, new Item.Settings().itemGroup(ItemGroup.MISC)));
        nB = register("experience_bottle", new ExperienceBottleItem(new Item.Settings().itemGroup(ItemGroup.MISC).rarity(Rarity.b)));
        nC = register("fire_charge", new FireChargeItem(new Item.Settings().itemGroup(ItemGroup.MISC)));
        nD = register("writable_book", new WritableBookItem(new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC)));
        nE = register("written_book", new WrittenBookItem(new Item.Settings().stackSize(16)));
        nF = register("emerald", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        nG = register("item_frame", new ItemFrameItem(new Item.Settings().itemGroup(ItemGroup.DECORATIONS)));
        FLOWER_POT = registerBlock(Blocks.en, ItemGroup.DECORATIONS);
        nI = register("carrot", new AliasedBlockItem(Blocks.eM, new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.CARROT)));
        nJ = register("potato", new AliasedBlockItem(Blocks.eN, new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.POTATO)));
        nK = register("baked_potato", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.BAKED_POTATO)));
        nL = register("poisonous_potato", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.POISONOUS_POTATO)));
        nM = register("map", new EmptyMapItem(new Item.Settings().itemGroup(ItemGroup.MISC)));
        nN = register("golden_carrot", new Item(new Item.Settings().itemGroup(ItemGroup.BREWING).food(FoodItemSettings.GOLDEN_CARROT)));
        SKELETON_SKULL = register(new WallStandingBlockItem(Blocks.eU, Blocks.eV, new Item.Settings().itemGroup(ItemGroup.DECORATIONS).rarity(Rarity.b)));
        WITHER_SKELETON_SKULL = register(new WallStandingBlockItem(Blocks.eW, Blocks.eX, new Item.Settings().itemGroup(ItemGroup.DECORATIONS).rarity(Rarity.b)));
        PLAYER_HEAD = register(new SkullItem(Blocks.fa, Blocks.fb, new Item.Settings().itemGroup(ItemGroup.DECORATIONS).rarity(Rarity.b)));
        ZOMBIE_HEAD = register(new WallStandingBlockItem(Blocks.eY, Blocks.eZ, new Item.Settings().itemGroup(ItemGroup.DECORATIONS).rarity(Rarity.b)));
        CREEPER_HEAD = register(new WallStandingBlockItem(Blocks.fc, Blocks.fd, new Item.Settings().itemGroup(ItemGroup.DECORATIONS).rarity(Rarity.b)));
        DRAGON_HEAD = register(new WallStandingBlockItem(Blocks.fe, Blocks.ff, new Item.Settings().itemGroup(ItemGroup.DECORATIONS).rarity(Rarity.b)));
        nU = register("carrot_on_a_stick", new CarrotOnAStickItem(new Item.Settings().durability(25).itemGroup(ItemGroup.TRANSPORTATION)));
        nV = register("nether_star", new NetherStarItem(new Item.Settings().itemGroup(ItemGroup.MATERIALS).rarity(Rarity.b)));
        nW = register("pumpkin_pie", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.PUMPKIN_PIE)));
        nX = register("firework_rocket", new FireworkItem(new Item.Settings().itemGroup(ItemGroup.MISC)));
        nY = register("firework_star", new FireworkChargeItem(new Item.Settings().itemGroup(ItemGroup.MISC)));
        nZ = register("enchanted_book", new EnchantedBookItem(new Item.Settings().stackSize(1).rarity(Rarity.b)));
        oa = register("nether_brick", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        ob = register("quartz", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        oc = register("tnt_minecart", new MinecartItem(AbstractMinecartEntity.Type.d, new Item.Settings().stackSize(1).itemGroup(ItemGroup.TRANSPORTATION)));
        od = register("hopper_minecart", new MinecartItem(AbstractMinecartEntity.Type.f, new Item.Settings().stackSize(1).itemGroup(ItemGroup.TRANSPORTATION)));
        oe = register("prismarine_shard", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        of = register("prismarine_crystals", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        og = register("rabbit", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.RABBIT)));
        oh = register("cooked_rabbit", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.COOKED_RABBIT)));
        oi = register("rabbit_stew", new MushroomStewItem(new Item.Settings().stackSize(1).itemGroup(ItemGroup.FOOD).food(FoodItemSettings.RABBIT_STEW)));
        oj = register("rabbit_foot", new Item(new Item.Settings().itemGroup(ItemGroup.BREWING)));
        ok = register("rabbit_hide", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        ol = register("armor_stand", new ArmorStandItem(new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        om = register("iron_horse_armor", new HorseArmorItem(5, "iron", new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC)));
        on = register("golden_horse_armor", new HorseArmorItem(7, "gold", new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC)));
        oo = register("diamond_horse_armor", new HorseArmorItem(11, "diamond", new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC)));
        op = register("leather_horse_armor", new DyeableHorseArmorItem(3, "leather", new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC)));
        oq = register("lead", new LeadItem(new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        or = register("name_tag", new NameTagItem(new Item.Settings().itemGroup(ItemGroup.TOOLS)));
        os = register("command_block_minecart", new MinecartItem(AbstractMinecartEntity.Type.g, new Item.Settings().stackSize(1)));
        ot = register("mutton", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.MUTTON)));
        ou = register("cooked_mutton", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.COOKED_MUTTON)));
        ov = register("white_banner", new BannerItem(Blocks.gS, Blocks.hi, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        ow = register("orange_banner", new BannerItem(Blocks.gT, Blocks.hj, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        ox = register("magenta_banner", new BannerItem(Blocks.gU, Blocks.hk, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oy = register("light_blue_banner", new BannerItem(Blocks.gV, Blocks.hl, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oz = register("yellow_banner", new BannerItem(Blocks.gW, Blocks.hm, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oA = register("lime_banner", new BannerItem(Blocks.gX, Blocks.hn, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oB = register("pink_banner", new BannerItem(Blocks.gY, Blocks.ho, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oC = register("gray_banner", new BannerItem(Blocks.gZ, Blocks.hp, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oD = register("light_gray_banner", new BannerItem(Blocks.ha, Blocks.hq, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oE = register("cyan_banner", new BannerItem(Blocks.hb, Blocks.hr, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oF = register("purple_banner", new BannerItem(Blocks.hc, Blocks.hs, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oG = register("blue_banner", new BannerItem(Blocks.hd, Blocks.ht, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oH = register("brown_banner", new BannerItem(Blocks.he, Blocks.hu, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oI = register("green_banner", new BannerItem(Blocks.hf, Blocks.hv, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oJ = register("red_banner", new BannerItem(Blocks.hg, Blocks.hw, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oK = register("black_banner", new BannerItem(Blocks.hh, Blocks.hx, new Item.Settings().stackSize(16).itemGroup(ItemGroup.DECORATIONS)));
        oL = register("end_crystal", new EndCrystalItem(new Item.Settings().itemGroup(ItemGroup.DECORATIONS).rarity(Rarity.c)));
        oM = register("chorus_fruit", new ChorusFruitItem(new Item.Settings().itemGroup(ItemGroup.MATERIALS).food(FoodItemSettings.CHORUS_FRUIT)));
        oN = register("popped_chorus_fruit", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        oO = register("beetroot", new Item(new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.BEETROOT)));
        oP = register("beetroot_seeds", new AliasedBlockItem(Blocks.iv, new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        oQ = register("beetroot_soup", new MushroomStewItem(new Item.Settings().stackSize(1).itemGroup(ItemGroup.FOOD).food(FoodItemSettings.BEETROOT_SOUP)));
        oR = register("dragon_breath", new Item(new Item.Settings().recipeRemainder(Items.mm).itemGroup(ItemGroup.BREWING).rarity(Rarity.b)));
        oS = register("splash_potion", new SplashPotionItem(new Item.Settings().stackSize(1).itemGroup(ItemGroup.BREWING)));
        oT = register("spectral_arrow", new SpectralArrowItem(new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        oU = register("tipped_arrow", new TippedArrowItem(new Item.Settings().itemGroup(ItemGroup.COMBAT)));
        oV = register("lingering_potion", new LingeringPotionItem(new Item.Settings().stackSize(1).itemGroup(ItemGroup.BREWING)));
        oW = register("shield", new ShieldItem(new Item.Settings().durability(336).itemGroup(ItemGroup.COMBAT)));
        oX = register("elytra", new ElytraItem(new Item.Settings().durability(432).itemGroup(ItemGroup.TRANSPORTATION).rarity(Rarity.b)));
        oY = register("spruce_boat", new BoatItem(BoatEntity.Type.SPRUCE, new Item.Settings().stackSize(1).itemGroup(ItemGroup.TRANSPORTATION)));
        oZ = register("birch_boat", new BoatItem(BoatEntity.Type.BIRCH, new Item.Settings().stackSize(1).itemGroup(ItemGroup.TRANSPORTATION)));
        pa = register("jungle_boat", new BoatItem(BoatEntity.Type.JUNGLE, new Item.Settings().stackSize(1).itemGroup(ItemGroup.TRANSPORTATION)));
        pb = register("acacia_boat", new BoatItem(BoatEntity.Type.ACACIA, new Item.Settings().stackSize(1).itemGroup(ItemGroup.TRANSPORTATION)));
        pc = register("dark_oak_boat", new BoatItem(BoatEntity.Type.DARK_OAK, new Item.Settings().stackSize(1).itemGroup(ItemGroup.TRANSPORTATION)));
        pd = register("totem_of_undying", new Item(new Item.Settings().stackSize(1).itemGroup(ItemGroup.COMBAT).rarity(Rarity.b)));
        pe = register("shulker_shell", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        pf = register("iron_nugget", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        pg = register("knowledge_book", new KnowledgeBookItem(new Item.Settings().stackSize(1)));
        ph = register("debug_stick", new DebugStickItem(new Item.Settings().stackSize(1)));
        pi = register("music_disc_13", new MusicDiscItem(1, SoundEvents.jp, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        pj = register("music_disc_cat", new MusicDiscItem(2, SoundEvents.jr, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        pk = register("music_disc_blocks", new MusicDiscItem(3, SoundEvents.jq, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        pl = register("music_disc_chirp", new MusicDiscItem(4, SoundEvents.js, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        pm = register("music_disc_far", new MusicDiscItem(5, SoundEvents.jt, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        pn = register("music_disc_mall", new MusicDiscItem(6, SoundEvents.ju, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        po = register("music_disc_mellohi", new MusicDiscItem(7, SoundEvents.jv, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        pp = register("music_disc_stal", new MusicDiscItem(8, SoundEvents.jw, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        pq = register("music_disc_strad", new MusicDiscItem(9, SoundEvents.jx, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        pr = register("music_disc_ward", new MusicDiscItem(10, SoundEvents.jz, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        ps = register("music_disc_11", new MusicDiscItem(11, SoundEvents.jo, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        pt = register("music_disc_wait", new MusicDiscItem(12, SoundEvents.jy, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.c)));
        pu = register("trident", new TridentItem(new Item.Settings().durability(250).itemGroup(ItemGroup.COMBAT)));
        pv = register("phantom_membrane", new Item(new Item.Settings().itemGroup(ItemGroup.BREWING)));
        pw = register("nautilus_shell", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS)));
        px = register("heart_of_the_sea", new Item(new Item.Settings().itemGroup(ItemGroup.MATERIALS).rarity(Rarity.b)));
        py = register("crossbow", new CrossbowItem(new Item.Settings().stackSize(1).itemGroup(ItemGroup.COMBAT).durability(326)));
        pz = register("suspicious_stew", new SuspiciousStewItem(new Item.Settings().stackSize(1).food(FoodItemSettings.SUSPICIOUS_STEW)));
        LOOM = registerBlock(Blocks.lJ, ItemGroup.DECORATIONS);
        pB = register("flower_banner_pattern", new BannerPatternItem(BannerPattern.FLOWER, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC)));
        pC = register("creeper_banner_pattern", new BannerPatternItem(BannerPattern.CREEPER, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.b)));
        pD = register("skull_banner_pattern", new BannerPatternItem(BannerPattern.SKULL, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.b)));
        pE = register("mojang_banner_pattern", new BannerPatternItem(BannerPattern.MOJANG, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC).rarity(Rarity.d)));
        pF = register("globe_banner_pattern", new BannerPatternItem(BannerPattern.GLOBE, new Item.Settings().stackSize(1).itemGroup(ItemGroup.MISC)));
        BARREL = registerBlock(Blocks.lK, ItemGroup.DECORATIONS);
        SMOKER = registerBlock(Blocks.lL, ItemGroup.DECORATIONS);
        BLAST_FURNACE = registerBlock(Blocks.lM, ItemGroup.DECORATIONS);
        CARTOGRAPHY_TABLE = registerBlock(Blocks.lN, ItemGroup.DECORATIONS);
        FLETCHING_TABLE = registerBlock(Blocks.lO, ItemGroup.DECORATIONS);
        GRINDSTONE = registerBlock(Blocks.lP, ItemGroup.DECORATIONS);
        LECTERN = registerBlock(Blocks.lQ, ItemGroup.REDSTONE);
        SMITHING_TABLE = registerBlock(Blocks.lR, ItemGroup.DECORATIONS);
        STONECUTTER = registerBlock(Blocks.lS, ItemGroup.DECORATIONS);
        BELL = registerBlock(Blocks.lT, ItemGroup.DECORATIONS);
        LANTERN = registerBlock(Blocks.lU, ItemGroup.DECORATIONS);
        pR = register("sweet_berries", new AliasedBlockItem(Blocks.lW, new Item.Settings().itemGroup(ItemGroup.FOOD).food(FoodItemSettings.SWEET_BERRIES)));
        CAMPFIRE = registerBlock(Blocks.lV, ItemGroup.DECORATIONS);
    }
}
