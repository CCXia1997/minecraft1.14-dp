package net.minecraft.world.biome;

import java.util.Collection;
import java.util.Collections;
import net.minecraft.util.Identifier;
import net.minecraft.util.registry.Registry;

public abstract class Biomes
{
    public static final Biome a;
    public static final Biome DEFAULT;
    public static final Biome c;
    public static final Biome d;
    public static final Biome e;
    public static final Biome f;
    public static final Biome g;
    public static final Biome h;
    public static final Biome i;
    public static final Biome j;
    public static final Biome k;
    public static final Biome l;
    public static final Biome m;
    public static final Biome n;
    public static final Biome o;
    public static final Biome p;
    public static final Biome q;
    public static final Biome r;
    public static final Biome s;
    public static final Biome t;
    public static final Biome u;
    public static final Biome v;
    public static final Biome w;
    public static final Biome x;
    public static final Biome y;
    public static final Biome z;
    public static final Biome A;
    public static final Biome B;
    public static final Biome C;
    public static final Biome D;
    public static final Biome E;
    public static final Biome F;
    public static final Biome G;
    public static final Biome H;
    public static final Biome I;
    public static final Biome J;
    public static final Biome K;
    public static final Biome L;
    public static final Biome M;
    public static final Biome N;
    public static final Biome O;
    public static final Biome P;
    public static final Biome Q;
    public static final Biome R;
    public static final Biome S;
    public static final Biome T;
    public static final Biome U;
    public static final Biome V;
    public static final Biome W;
    public static final Biome X;
    public static final Biome Y;
    public static final Biome Z;
    public static final Biome aa;
    public static final Biome ab;
    public static final Biome ac;
    public static final Biome ad;
    public static final Biome ae;
    public static final Biome af;
    public static final Biome ag;
    public static final Biome ah;
    public static final Biome ai;
    public static final Biome aj;
    public static final Biome ak;
    public static final Biome al;
    public static final Biome am;
    public static final Biome an;
    public static final Biome ao;
    public static final Biome ap;
    public static final Biome aq;
    public static final Biome ar;
    public static final Biome as;
    public static final Biome at;
    public static final Biome au;
    public static final Biome av;
    public static final Biome aw;
    public static final Biome ax;
    
    private static Biome register(final int rawId, final String id, final Biome biome) {
        Registry.<Biome>register(Registry.BIOME, rawId, id, biome);
        if (biome.hasParent()) {
            Biome.PARENT_BIOME_ID_MAP.set(biome, Registry.BIOME.getRawId(Registry.BIOME.get(new Identifier(biome.parent))));
        }
        return biome;
    }
    
    static {
        a = register(0, "ocean", new OceanBiome());
        DEFAULT = Biomes.a;
        c = register(1, "plains", new PlainsBiome());
        d = register(2, "desert", new DesertBiome());
        e = register(3, "mountains", new MountainsBiome());
        f = register(4, "forest", new ForestBiome());
        g = register(5, "taiga", new TaigaBiome());
        h = register(6, "swamp", new SwampBiome());
        i = register(7, "river", new RiverBiome());
        j = register(8, "nether", new NetherBiome());
        k = register(9, "the_end", new EndBiome());
        l = register(10, "frozen_ocean", new FrozenOceanBiome());
        m = register(11, "frozen_river", new FrozenRiverBiome());
        n = register(12, "snowy_tundra", new SnowyTundraBiome());
        o = register(13, "snowy_mountains", new SnowyMountainsBiome());
        p = register(14, "mushroom_fields", new MushroomFieldsBiome());
        q = register(15, "mushroom_field_shore", new MushroomFieldShoreBiome());
        r = register(16, "beach", new BeachBiome());
        s = register(17, "desert_hills", new DesertHillsBiome());
        t = register(18, "wooded_hills", new WoodedHillsBiome());
        u = register(19, "taiga_hills", new TaigaHillsBiome());
        v = register(20, "mountain_edge", new MountainEdgeBiome());
        w = register(21, "jungle", new JungleBiome());
        x = register(22, "jungle_hills", new JungleHillsBiome());
        y = register(23, "jungle_edge", new JungleEdgeBiome());
        z = register(24, "deep_ocean", new DeepOceanBiome());
        A = register(25, "stone_shore", new StoneShoreBiome());
        B = register(26, "snowy_beach", new SnowyBeachBiome());
        C = register(27, "birch_forest", new BirchForestBiome());
        D = register(28, "birch_forest_hills", new BirchForestHillsBiome());
        E = register(29, "dark_forest", new DarkForestBiome());
        F = register(30, "snowy_taiga", new SnowyTaigaBiome());
        G = register(31, "snowy_taiga_hills", new SnowyTaigaHillsBiome());
        H = register(32, "giant_tree_taiga", new GiantTreeTaigaBiome());
        I = register(33, "giant_tree_taiga_hills", new GiantTreeTaigaHillsBiome());
        J = register(34, "wooded_mountains", new WoodedMountainsBiome());
        K = register(35, "savanna", new SavannaBiome());
        L = register(36, "savanna_plateau", new SavannaPlateauBiome());
        M = register(37, "badlands", new BadlandsBiome());
        N = register(38, "wooded_badlands_plateau", new WoodedBadlandsPlateauBiome());
        O = register(39, "badlands_plateau", new BadlandsPlateauBiome());
        P = register(40, "small_end_islands", new EndIslandsSmallBiome());
        Q = register(41, "end_midlands", new EndMidlandsBiome());
        R = register(42, "end_highlands", new EndHighlandsBiome());
        S = register(43, "end_barrens", new EndBarrensBiome());
        T = register(44, "warm_ocean", new OceanWarmBiome());
        U = register(45, "lukewarm_ocean", new OceanLukewarmBiome());
        V = register(46, "cold_ocean", new OceanColdBiome());
        W = register(47, "deep_warm_ocean", new OceanDeepWarmBiome());
        X = register(48, "deep_lukewarm_ocean", new OceanDeepLukewarmBiome());
        Y = register(49, "deep_cold_ocean", new OceanDeepColdBiome());
        Z = register(50, "deep_frozen_ocean", new OceanDeepFrozenBiome());
        aa = register(127, "the_void", new VoidBiome());
        ab = register(129, "sunflower_plains", new SunflowerPlainsBiome());
        ac = register(130, "desert_lakes", new DesertLakesBiome());
        ad = register(131, "gravelly_mountains", new GravellyMountainsBiome());
        ae = register(132, "flower_forest", new FlowerForestBiome());
        af = register(133, "taiga_mountains", new TaigaMountainsBiome());
        ag = register(134, "swamp_hills", new SwampHillsBiome());
        ah = register(140, "ice_spikes", new IceSpikesBiome());
        ai = register(149, "modified_jungle", new ModifiedJungleBiome());
        aj = register(151, "modified_jungle_edge", new ModifiedJungleEdgeBiome());
        ak = register(155, "tall_birch_forest", new TallBirchForestBiome());
        al = register(156, "tall_birch_hills", new TallBirchHillsBiome());
        am = register(157, "dark_forest_hills", new DarkForestHillsBiome());
        an = register(158, "snowy_taiga_mountains", new SnowyTaigaMountainsBiome());
        ao = register(160, "giant_spruce_taiga", new GiantSpruceTaigaBiome());
        ap = register(161, "giant_spruce_taiga_hills", new GiantSpruceTaigaHillsBiome());
        aq = register(162, "modified_gravelly_mountains", new ModifiedGravellyMountainsBiome());
        ar = register(163, "shattered_savanna", new ShatteredSavannaBiome());
        as = register(164, "shattered_savanna_plateau", new ShatteredSavannaPlateauBiome());
        at = register(165, "eroded_badlands", new ErodedBadlandsBiome());
        au = register(166, "modified_wooded_badlands_plateau", new ModifiedWoodedBadlandsPlateauBiome());
        av = register(167, "modified_badlands_plateau", new ModifiedBadlandsPlateauBiome());
        aw = register(168, "bamboo_jungle", new BambooJungleBiome());
        ax = register(169, "bamboo_jungle_hills", new BambooJungleHillsBiome());
        Collections.<Biome>addAll(Biome.BIOMES, new Biome[] { Biomes.a, Biomes.c, Biomes.d, Biomes.e, Biomes.f, Biomes.g, Biomes.h, Biomes.i, Biomes.m, Biomes.n, Biomes.o, Biomes.p, Biomes.q, Biomes.r, Biomes.s, Biomes.t, Biomes.u, Biomes.w, Biomes.x, Biomes.y, Biomes.z, Biomes.A, Biomes.B, Biomes.C, Biomes.D, Biomes.E, Biomes.F, Biomes.G, Biomes.H, Biomes.I, Biomes.J, Biomes.K, Biomes.L, Biomes.M, Biomes.N, Biomes.O });
    }
}
