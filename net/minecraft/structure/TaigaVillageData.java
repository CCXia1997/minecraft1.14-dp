package net.minecraft.structure;

import net.minecraft.state.AbstractPropertyContainer;
import net.minecraft.structure.pool.FeaturePoolElement;
import net.minecraft.world.gen.feature.ConfiguredFeature;
import net.minecraft.world.gen.feature.FeatureConfig;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.structure.pool.EmptyPoolElement;
import net.minecraft.structure.pool.StructurePoolElement;
import net.minecraft.structure.pool.StructurePool;
import com.mojang.datafixers.util.Pair;
import net.minecraft.structure.processor.StructureProcessor;
import net.minecraft.structure.pool.SinglePoolElement;
import net.minecraft.util.Identifier;
import net.minecraft.structure.pool.StructurePoolBasedGenerator;
import java.util.List;
import net.minecraft.structure.processor.RuleStructureProcessor;
import com.google.common.collect.ImmutableList;
import net.minecraft.structure.rule.BlockStateMatchRuleTest;
import net.minecraft.block.PaneBlock;
import net.minecraft.state.property.Property;
import net.minecraft.block.CampfireBlock;
import net.minecraft.block.BlockState;
import net.minecraft.structure.rule.BlockMatchRuleTest;
import net.minecraft.structure.rule.TagMatchRuleTest;
import net.minecraft.tag.BlockTags;
import net.minecraft.structure.rule.AbstractRuleTest;
import net.minecraft.structure.processor.StructureProcessorRule;
import net.minecraft.structure.rule.AlwaysTrueRuleTest;
import net.minecraft.structure.rule.RandomBlockMatchRuleTest;
import net.minecraft.block.Blocks;

public class TaigaVillageData
{
    public static void initialize() {
    }
    
    static {
        final ImmutableList<StructureProcessor> immutableList1 = ImmutableList.of(new RuleStructureProcessor(ImmutableList.<StructureProcessorRule>of(new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.m, 0.8f), AlwaysTrueRuleTest.INSTANCE, Blocks.bI.getDefaultState()), new StructureProcessorRule(new TagMatchRuleTest(BlockTags.m), AlwaysTrueRuleTest.INSTANCE, Blocks.AIR.getDefaultState()), new StructureProcessorRule(new BlockMatchRuleTest(Blocks.bK), AlwaysTrueRuleTest.INSTANCE, Blocks.AIR.getDefaultState()), new StructureProcessorRule(new BlockMatchRuleTest(Blocks.bL), AlwaysTrueRuleTest.INSTANCE, Blocks.AIR.getDefaultState()), new StructureProcessorRule(new BlockMatchRuleTest(Blocks.lV), AlwaysTrueRuleTest.INSTANCE, ((AbstractPropertyContainer<O, BlockState>)Blocks.lV.getDefaultState()).<Comparable, Boolean>with((Property<Comparable>)CampfireBlock.LIT, false)), new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.m, 0.08f), AlwaysTrueRuleTest.INSTANCE, Blocks.aP.getDefaultState()), new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.J, 0.08f), AlwaysTrueRuleTest.INSTANCE, Blocks.aP.getDefaultState()), new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.dB, 0.5f), AlwaysTrueRuleTest.INSTANCE, Blocks.aP.getDefaultState()), new StructureProcessorRule(new BlockStateMatchRuleTest((((AbstractPropertyContainer<O, BlockState>)Blocks.dB.getDefaultState()).with((Property<Comparable>)PaneBlock.NORTH, true)).<Comparable, Boolean>with((Property<Comparable>)PaneBlock.SOUTH, true)), AlwaysTrueRuleTest.INSTANCE, (((AbstractPropertyContainer<O, BlockState>)Blocks.fZ.getDefaultState()).with((Property<Comparable>)PaneBlock.NORTH, true)).<Comparable, Boolean>with((Property<Comparable>)PaneBlock.SOUTH, true)), new StructureProcessorRule(new BlockStateMatchRuleTest((((AbstractPropertyContainer<O, BlockState>)Blocks.dB.getDefaultState()).with((Property<Comparable>)PaneBlock.EAST, true)).<Comparable, Boolean>with((Property<Comparable>)PaneBlock.WEST, true)), AlwaysTrueRuleTest.INSTANCE, (((AbstractPropertyContainer<O, BlockState>)Blocks.fZ.getDefaultState()).with((Property<Comparable>)PaneBlock.EAST, true)).<Comparable, Boolean>with((Property<Comparable>)PaneBlock.WEST, true)), new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.bU, 0.3f), AlwaysTrueRuleTest.INSTANCE, Blocks.dF.getDefaultState()), new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.bU, 0.2f), AlwaysTrueRuleTest.INSTANCE, Blocks.eN.getDefaultState()), new StructureProcessorRule[0])));
        final ImmutableList<StructureProcessor> immutableList2 = ImmutableList.of(new RuleStructureProcessor(ImmutableList.<StructureProcessorRule>of(new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.m, 0.1f), AlwaysTrueRuleTest.INSTANCE, Blocks.bI.getDefaultState()))));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/taiga/town_centers"), new Identifier("empty"), ImmutableList.of(new Pair(new SinglePoolElement("village/taiga/town_centers/taiga_meeting_point_1", immutableList2), 49), new Pair(new SinglePoolElement("village/taiga/town_centers/taiga_meeting_point_2", immutableList2), 49), new Pair(new SinglePoolElement("village/taiga/zombie/town_centers/taiga_meeting_point_1", immutableList1), 1), new Pair(new SinglePoolElement("village/taiga/zombie/town_centers/taiga_meeting_point_2", immutableList1), 1)), StructurePool.Projection.RIGID));
        final ImmutableList<StructureProcessor> immutableList3 = ImmutableList.of(new RuleStructureProcessor(ImmutableList.<StructureProcessorRule>of(new StructureProcessorRule(new BlockMatchRuleTest(Blocks.iw), new BlockMatchRuleTest(Blocks.A), Blocks.o.getDefaultState()), new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.iw, 0.2f), AlwaysTrueRuleTest.INSTANCE, Blocks.i.getDefaultState()), new StructureProcessorRule(new BlockMatchRuleTest(Blocks.i), new BlockMatchRuleTest(Blocks.A), Blocks.A.getDefaultState()), new StructureProcessorRule(new BlockMatchRuleTest(Blocks.j), new BlockMatchRuleTest(Blocks.A), Blocks.A.getDefaultState()))));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/taiga/streets"), new Identifier("village/taiga/terminators"), ImmutableList.of(new Pair(new SinglePoolElement("village/taiga/streets/corner_01", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/streets/corner_02", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/streets/corner_03", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/streets/straight_01", immutableList3), 4), new Pair(new SinglePoolElement("village/taiga/streets/straight_02", immutableList3), 4), new Pair(new SinglePoolElement("village/taiga/streets/straight_03", immutableList3), 4), new Pair(new SinglePoolElement("village/taiga/streets/straight_04", immutableList3), 7), new Pair(new SinglePoolElement("village/taiga/streets/straight_05", immutableList3), 7), new Pair(new SinglePoolElement("village/taiga/streets/straight_06", immutableList3), 4), new Pair(new SinglePoolElement("village/taiga/streets/crossroad_01", immutableList3), 1), new Pair(new SinglePoolElement("village/taiga/streets/crossroad_02", immutableList3), 1), new Pair(new SinglePoolElement("village/taiga/streets/crossroad_03", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/streets/crossroad_04", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/streets/crossroad_05", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/streets/crossroad_06", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/streets/turn_01", immutableList3), 3)), StructurePool.Projection.TERRAIN_MATCHING));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/taiga/zombie/streets"), new Identifier("village/taiga/terminators"), ImmutableList.of(new Pair(new SinglePoolElement("village/taiga/zombie/streets/corner_01", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/zombie/streets/corner_02", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/zombie/streets/corner_03", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/zombie/streets/straight_01", immutableList3), 4), new Pair(new SinglePoolElement("village/taiga/zombie/streets/straight_02", immutableList3), 4), new Pair(new SinglePoolElement("village/taiga/zombie/streets/straight_03", immutableList3), 4), new Pair(new SinglePoolElement("village/taiga/zombie/streets/straight_04", immutableList3), 7), new Pair(new SinglePoolElement("village/taiga/zombie/streets/straight_05", immutableList3), 7), new Pair(new SinglePoolElement("village/taiga/zombie/streets/straight_06", immutableList3), 4), new Pair(new SinglePoolElement("village/taiga/zombie/streets/crossroad_01", immutableList3), 1), new Pair(new SinglePoolElement("village/taiga/zombie/streets/crossroad_02", immutableList3), 1), new Pair(new SinglePoolElement("village/taiga/zombie/streets/crossroad_03", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/zombie/streets/crossroad_04", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/zombie/streets/crossroad_05", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/zombie/streets/crossroad_06", immutableList3), 2), new Pair(new SinglePoolElement("village/taiga/zombie/streets/turn_01", immutableList3), 3)), StructurePool.Projection.TERRAIN_MATCHING));
        final ImmutableList<StructureProcessor> immutableList4 = ImmutableList.of(new RuleStructureProcessor(ImmutableList.<StructureProcessorRule>of(new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.bU, 0.3f), AlwaysTrueRuleTest.INSTANCE, Blocks.dF.getDefaultState()), new StructureProcessorRule(new RandomBlockMatchRuleTest(Blocks.bU, 0.2f), AlwaysTrueRuleTest.INSTANCE, Blocks.eN.getDefaultState()))));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/taiga/houses"), new Identifier("village/taiga/terminators"), ImmutableList.of(new Pair(new SinglePoolElement("village/taiga/houses/taiga_small_house_1", immutableList2), 4), new Pair(new SinglePoolElement("village/taiga/houses/taiga_small_house_2", immutableList2), 4), new Pair(new SinglePoolElement("village/taiga/houses/taiga_small_house_3", immutableList2), 4), new Pair(new SinglePoolElement("village/taiga/houses/taiga_small_house_4", immutableList2), 4), new Pair(new SinglePoolElement("village/taiga/houses/taiga_small_house_5", immutableList2), 4), new Pair(new SinglePoolElement("village/taiga/houses/taiga_medium_house_1", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_medium_house_2", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_medium_house_3", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_medium_house_4", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_butcher_shop_1", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_tool_smith_1", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_fletcher_house_1", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_shepherds_house_1", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_armorer_house_1", immutableList2), 1), new Pair(new SinglePoolElement("village/taiga/houses/taiga_armorer_2", immutableList2), 1), new Pair(new SinglePoolElement("village/taiga/houses/taiga_fisher_cottage_1", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_tannery_1", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_cartographer_house_1", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_library_1", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_masons_house_1", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_weaponsmith_1", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_weaponsmith_2", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_temple_1", immutableList2), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_large_farm_1", immutableList4), 6), new Pair(new SinglePoolElement("village/taiga/houses/taiga_large_farm_2", immutableList4), 6), new Pair(new SinglePoolElement("village/taiga/houses/taiga_small_farm_1", immutableList2), 1), new Pair(new SinglePoolElement("village/taiga/houses/taiga_animal_pen_1", immutableList2), 2), Pair.of(EmptyPoolElement.INSTANCE, 6)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/taiga/zombie/houses"), new Identifier("village/taiga/terminators"), ImmutableList.of(new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_small_house_1", immutableList1), 4), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_small_house_2", immutableList1), 4), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_small_house_3", immutableList1), 4), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_small_house_4", immutableList1), 4), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_small_house_5", immutableList1), 4), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_medium_house_1", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_medium_house_2", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_medium_house_3", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_medium_house_4", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_butcher_shop_1", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_tool_smith_1", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_fletcher_house_1", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_shepherds_house_1", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_armorer_house_1", immutableList1), 1), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_fisher_cottage_1", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_tannery_1", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_cartographer_house_1", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_library_1", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_masons_house_1", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_weaponsmith_1", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_weaponsmith_2", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_temple_1", immutableList1), 2), new Pair(new SinglePoolElement("village/taiga/houses/taiga_large_farm_1", immutableList1), 6), new Pair(new SinglePoolElement("village/taiga/zombie/houses/taiga_large_farm_2", immutableList1), 6), new Pair(new SinglePoolElement("village/taiga/houses/taiga_small_farm_1", immutableList1), 1), new Pair(new SinglePoolElement("village/taiga/houses/taiga_animal_pen_1", immutableList1), 2), Pair.of(EmptyPoolElement.INSTANCE, 6)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/taiga/terminators"), new Identifier("empty"), ImmutableList.of(new Pair(new SinglePoolElement("village/plains/terminators/terminator_01", immutableList3), 1), new Pair(new SinglePoolElement("village/plains/terminators/terminator_02", immutableList3), 1), new Pair(new SinglePoolElement("village/plains/terminators/terminator_03", immutableList3), 1), new Pair(new SinglePoolElement("village/plains/terminators/terminator_04", immutableList3), 1)), StructurePool.Projection.TERRAIN_MATCHING));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/taiga/decor"), new Identifier("empty"), ImmutableList.of(new Pair(new SinglePoolElement("village/taiga/taiga_lamp_post_1"), 10), new Pair(new SinglePoolElement("village/taiga/taiga_decoration_1"), 4), new Pair(new SinglePoolElement("village/taiga/taiga_decoration_2"), 1), new Pair(new SinglePoolElement("village/taiga/taiga_decoration_3"), 1), new Pair(new SinglePoolElement("village/taiga/taiga_decoration_4"), 1), new Pair(new SinglePoolElement("village/taiga/taiga_decoration_5"), 2), new Pair(new SinglePoolElement("village/taiga/taiga_decoration_6"), 1), new Pair(new FeaturePoolElement(new ConfiguredFeature<>(Feature.y, FeatureConfig.DEFAULT)), 4), new Pair(new FeaturePoolElement(new ConfiguredFeature<>(Feature.v, FeatureConfig.DEFAULT)), 4), new Pair(new FeaturePoolElement(new ConfiguredFeature<>(Feature.ak, FeatureConfig.DEFAULT)), 2), new Pair(new FeaturePoolElement(new ConfiguredFeature<>(Feature.K, FeatureConfig.DEFAULT)), 4), new Pair(new FeaturePoolElement(new ConfiguredFeature<>(Feature.aM, FeatureConfig.DEFAULT)), 1), Pair.of(EmptyPoolElement.INSTANCE, 4)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/taiga/zombie/decor"), new Identifier("empty"), ImmutableList.of(new Pair(new SinglePoolElement("village/taiga/taiga_decoration_1"), 4), new Pair(new SinglePoolElement("village/taiga/taiga_decoration_2"), 1), new Pair(new SinglePoolElement("village/taiga/taiga_decoration_3"), 1), new Pair(new SinglePoolElement("village/taiga/taiga_decoration_4"), 1), new Pair(new FeaturePoolElement(new ConfiguredFeature<>(Feature.y, FeatureConfig.DEFAULT)), 4), new Pair(new FeaturePoolElement(new ConfiguredFeature<>(Feature.v, FeatureConfig.DEFAULT)), 4), new Pair(new FeaturePoolElement(new ConfiguredFeature<>(Feature.ak, FeatureConfig.DEFAULT)), 2), new Pair(new FeaturePoolElement(new ConfiguredFeature<>(Feature.K, FeatureConfig.DEFAULT)), 4), new Pair(new FeaturePoolElement(new ConfiguredFeature<>(Feature.aM, FeatureConfig.DEFAULT)), 1), Pair.of(EmptyPoolElement.INSTANCE, 4)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/taiga/villagers"), new Identifier("empty"), ImmutableList.of(new Pair(new SinglePoolElement("village/taiga/villagers/nitwit"), 1), new Pair(new SinglePoolElement("village/taiga/villagers/baby"), 1), new Pair(new SinglePoolElement("village/taiga/villagers/unemployed"), 10)), StructurePool.Projection.RIGID));
        StructurePoolBasedGenerator.REGISTRY.add(new StructurePool(new Identifier("village/taiga/zombie/villagers"), new Identifier("empty"), ImmutableList.of(new Pair(new SinglePoolElement("village/taiga/zombie/villagers/nitwit"), 1), new Pair(new SinglePoolElement("village/taiga/zombie/villagers/unemployed"), 10)), StructurePool.Projection.RIGID));
    }
}
