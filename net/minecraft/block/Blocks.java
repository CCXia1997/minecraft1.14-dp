package net.minecraft.block;

import com.google.common.collect.UnmodifiableIterator;
import java.util.Iterator;
import net.minecraft.entity.effect.StatusEffects;
import net.minecraft.util.DyeColor;
import net.minecraft.fluid.Fluids;
import net.minecraft.block.sapling.DarkOakSaplingGenerator;
import net.minecraft.block.sapling.AcaciaSaplingGenerator;
import net.minecraft.block.sapling.JungleSaplingGenerator;
import net.minecraft.block.sapling.BirchSaplingGenerator;
import net.minecraft.block.sapling.SpruceSaplingGenerator;
import net.minecraft.block.sapling.SaplingGenerator;
import net.minecraft.block.sapling.OakSaplingGenerator;
import net.minecraft.sound.BlockSoundGroup;
import net.minecraft.util.registry.Registry;

public class Blocks
{
    public static final Block AIR;
    public static final Block b;
    public static final Block c;
    public static final Block d;
    public static final Block e;
    public static final Block f;
    public static final Block g;
    public static final Block h;
    public static final Block i;
    public static final Block j;
    public static final Block k;
    public static final Block l;
    public static final Block m;
    public static final Block n;
    public static final Block o;
    public static final Block p;
    public static final Block q;
    public static final Block r;
    public static final Block s;
    public static final Block t;
    public static final Block u;
    public static final Block v;
    public static final Block w;
    public static final Block x;
    public static final Block y;
    public static final Block z;
    public static final Block A;
    public static final Block B;
    public static final Block C;
    public static final Block D;
    public static final Block E;
    public static final Block F;
    public static final Block G;
    public static final Block H;
    public static final Block I;
    public static final Block J;
    public static final Block K;
    public static final Block L;
    public static final Block M;
    public static final Block N;
    public static final Block O;
    public static final Block P;
    public static final Block Q;
    public static final Block R;
    public static final Block S;
    public static final Block T;
    public static final Block U;
    public static final Block V;
    public static final Block W;
    public static final Block X;
    public static final Block Y;
    public static final Block Z;
    public static final Block aa;
    public static final Block ab;
    public static final Block ac;
    public static final Block ad;
    public static final Block ae;
    public static final Block af;
    public static final Block ag;
    public static final Block ah;
    public static final Block ai;
    public static final Block aj;
    public static final Block ak;
    public static final Block al;
    public static final Block am;
    public static final Block an;
    public static final Block ao;
    public static final Block ap;
    public static final Block aq;
    public static final Block ar;
    public static final Block as;
    public static final Block at;
    public static final Block au;
    public static final Block av;
    public static final Block aw;
    public static final Block ax;
    public static final Block ay;
    public static final Block az;
    public static final Block aA;
    public static final Block aB;
    public static final Block aC;
    public static final Block aD;
    public static final Block aE;
    public static final Block aF;
    public static final Block aG;
    public static final Block aH;
    public static final Block aI;
    public static final Block aJ;
    public static final Block aK;
    public static final Block aL;
    public static final Block aM;
    public static final Block aN;
    public static final Block aO;
    public static final Block aP;
    public static final Block aQ;
    public static final Block aR;
    public static final Block aS;
    public static final Block aT;
    public static final Block aU;
    public static final Block aV;
    public static final Block aW;
    public static final Block aX;
    public static final Block aY;
    public static final Block aZ;
    public static final Block ba;
    public static final Block bb;
    public static final Block bc;
    public static final Block bd;
    public static final Block be;
    public static final Block bf;
    public static final Block bg;
    public static final Block bh;
    public static final Block bi;
    public static final Block bj;
    public static final Block bk;
    public static final Block bl;
    public static final Block bm;
    public static final Block bn;
    public static final Block bo;
    public static final Block bp;
    public static final Block bq;
    public static final Block br;
    public static final Block bs;
    public static final Block bt;
    public static final Block bu;
    public static final Block bv;
    public static final Block bw;
    public static final Block bx;
    public static final Block by;
    public static final Block bz;
    public static final Block bA;
    public static final Block bB;
    public static final Block bC;
    public static final Block bD;
    public static final Block bE;
    public static final Block bF;
    public static final Block bG;
    public static final Block bH;
    public static final Block bI;
    public static final Block bJ;
    public static final Block bK;
    public static final Block bL;
    public static final Block bM;
    public static final Block bN;
    public static final Block bO;
    public static final Block bP;
    public static final Block bQ;
    public static final Block bR;
    public static final Block bS;
    public static final Block bT;
    public static final Block bU;
    public static final Block bV;
    public static final Block bW;
    public static final Block bX;
    public static final Block bY;
    public static final Block bZ;
    public static final Block ca;
    public static final Block cb;
    public static final Block cc;
    public static final Block cd;
    public static final Block ce;
    public static final Block cf;
    public static final Block cg;
    public static final Block ch;
    public static final Block ci;
    public static final Block cj;
    public static final Block ck;
    public static final Block cl;
    public static final Block cm;
    public static final Block cn;
    public static final Block co;
    public static final Block cp;
    public static final Block cq;
    public static final Block cr;
    public static final Block cs;
    public static final Block ct;
    public static final Block cu;
    public static final Block cv;
    public static final Block cw;
    public static final Block cx;
    public static final Block cy;
    public static final Block cz;
    public static final Block cA;
    public static final Block cB;
    public static final Block cC;
    public static final Block cD;
    public static final Block cE;
    public static final Block cF;
    public static final Block cG;
    public static final Block cH;
    public static final Block cI;
    public static final Block cJ;
    public static final Block cK;
    public static final Block cL;
    public static final Block cM;
    public static final Block cN;
    public static final Block cO;
    public static final Block cP;
    public static final Block cQ;
    public static final Block cR;
    public static final Block cS;
    public static final Block cT;
    public static final Block cU;
    public static final Block cV;
    public static final Block cW;
    public static final Block cX;
    public static final Block cY;
    public static final Block cZ;
    public static final Block da;
    public static final Block db;
    public static final Block dc;
    public static final Block dd;
    public static final Block de;
    public static final Block df;
    public static final Block dg;
    public static final Block dh;
    public static final Block di;
    public static final Block dj;
    public static final Block dk;
    public static final Block dl;
    public static final Block dm;
    public static final Block dn;
    public static final Block do_;
    public static final Block dp;
    public static final Block dq;
    public static final Block dr;
    public static final Block ds;
    public static final Block dt;
    public static final Block du;
    public static final Block dv;
    public static final Block dw;
    public static final Block dx;
    public static final Block dy;
    public static final Block dz;
    public static final Block dA;
    public static final Block dB;
    public static final Block dC;
    public static final Block dD;
    public static final Block dE;
    public static final Block dF;
    public static final Block dG;
    public static final Block dH;
    public static final Block dI;
    public static final Block dJ;
    public static final Block dK;
    public static final Block dL;
    public static final Block dM;
    public static final Block dN;
    public static final Block dO;
    public static final Block dP;
    public static final Block dQ;
    public static final Block dR;
    public static final Block dS;
    public static final Block dT;
    public static final Block dU;
    public static final Block dV;
    public static final Block dW;
    public static final Block dX;
    public static final Block dY;
    public static final Block dZ;
    public static final Block ea;
    public static final Block eb;
    public static final Block ec;
    public static final Block ed;
    public static final Block ee;
    public static final Block ef;
    public static final Block eg;
    public static final Block eh;
    public static final Block ei;
    public static final Block ej;
    public static final Block ek;
    public static final Block el;
    public static final Block em;
    public static final Block en;
    public static final Block eo;
    public static final Block ep;
    public static final Block eq;
    public static final Block er;
    public static final Block es;
    public static final Block et;
    public static final Block eu;
    public static final Block ev;
    public static final Block ew;
    public static final Block ex;
    public static final Block ey;
    public static final Block ez;
    public static final Block eA;
    public static final Block eB;
    public static final Block eC;
    public static final Block eD;
    public static final Block eE;
    public static final Block eF;
    public static final Block eG;
    public static final Block eH;
    public static final Block eI;
    public static final Block eJ;
    public static final Block eK;
    public static final Block eL;
    public static final Block eM;
    public static final Block eN;
    public static final Block eO;
    public static final Block eP;
    public static final Block eQ;
    public static final Block eR;
    public static final Block eS;
    public static final Block eT;
    public static final Block eU;
    public static final Block eV;
    public static final Block eW;
    public static final Block eX;
    public static final Block eY;
    public static final Block eZ;
    public static final Block fa;
    public static final Block fb;
    public static final Block fc;
    public static final Block fd;
    public static final Block fe;
    public static final Block ff;
    public static final Block fg;
    public static final Block fh;
    public static final Block fi;
    public static final Block fj;
    public static final Block fk;
    public static final Block fl;
    public static final Block fm;
    public static final Block fn;
    public static final Block fo;
    public static final Block fp;
    public static final Block fq;
    public static final Block fr;
    public static final Block fs;
    public static final Block ft;
    public static final Block fu;
    public static final Block fv;
    public static final Block fw;
    public static final Block fx;
    public static final Block fy;
    public static final Block fz;
    public static final Block fA;
    public static final Block fB;
    public static final Block fC;
    public static final Block fD;
    public static final Block fE;
    public static final Block fF;
    public static final Block fG;
    public static final Block fH;
    public static final Block fI;
    public static final Block fJ;
    public static final Block fK;
    public static final Block fL;
    public static final Block fM;
    public static final Block fN;
    public static final Block fO;
    public static final Block fP;
    public static final Block fQ;
    public static final Block fR;
    public static final Block fS;
    public static final Block fT;
    public static final Block fU;
    public static final Block fV;
    public static final Block fW;
    public static final Block fX;
    public static final Block fY;
    public static final Block fZ;
    public static final Block ga;
    public static final Block gb;
    public static final Block gc;
    public static final Block gd;
    public static final Block ge;
    public static final Block gf;
    public static final Block gg;
    public static final Block gh;
    public static final Block gi;
    public static final Block gj;
    public static final Block gk;
    public static final Block gl;
    public static final Block gm;
    public static final Block gn;
    public static final Block go;
    public static final Block gp;
    public static final Block gq;
    public static final Block gr;
    public static final Block gs;
    public static final Block gt;
    public static final Block gu;
    public static final Block gv;
    public static final Block gw;
    public static final Block gx;
    public static final Block gy;
    public static final Block gz;
    public static final Block gA;
    public static final Block gB;
    public static final Block gC;
    public static final Block gD;
    public static final Block gE;
    public static final Block gF;
    public static final Block gG;
    public static final Block gH;
    public static final Block gI;
    public static final Block gJ;
    public static final Block gK;
    public static final Block gL;
    public static final Block gM;
    public static final Block gN;
    public static final Block gO;
    public static final Block gP;
    public static final Block gQ;
    public static final Block gR;
    public static final Block gS;
    public static final Block gT;
    public static final Block gU;
    public static final Block gV;
    public static final Block gW;
    public static final Block gX;
    public static final Block gY;
    public static final Block gZ;
    public static final Block ha;
    public static final Block hb;
    public static final Block hc;
    public static final Block hd;
    public static final Block he;
    public static final Block hf;
    public static final Block hg;
    public static final Block hh;
    public static final Block hi;
    public static final Block hj;
    public static final Block hk;
    public static final Block hl;
    public static final Block hm;
    public static final Block hn;
    public static final Block ho;
    public static final Block hp;
    public static final Block hq;
    public static final Block hr;
    public static final Block hs;
    public static final Block ht;
    public static final Block hu;
    public static final Block hv;
    public static final Block hw;
    public static final Block hx;
    public static final Block hy;
    public static final Block hz;
    public static final Block hA;
    public static final Block hB;
    public static final Block hC;
    public static final Block hD;
    public static final Block hE;
    public static final Block hF;
    public static final Block hG;
    public static final Block hH;
    public static final Block hI;
    public static final Block hJ;
    public static final Block hK;
    public static final Block hL;
    public static final Block hM;
    public static final Block hN;
    public static final Block hO;
    public static final Block hP;
    public static final Block hQ;
    public static final Block hR;
    public static final Block hS;
    public static final Block hT;
    public static final Block hU;
    public static final Block hV;
    public static final Block hW;
    public static final Block hX;
    public static final Block hY;
    public static final Block hZ;
    public static final Block ia;
    public static final Block ib;
    public static final Block ic;
    public static final Block id;
    public static final Block ie;
    public static final Block if_;
    public static final Block ig;
    public static final Block ih;
    public static final Block ii;
    public static final Block ij;
    public static final Block ik;
    public static final Block il;
    public static final Block im;
    public static final Block in;
    public static final Block io;
    public static final Block ip;
    public static final Block iq;
    public static final Block ir;
    public static final Block is;
    public static final Block it;
    public static final Block iu;
    public static final Block iv;
    public static final Block iw;
    public static final Block ix;
    public static final Block iy;
    public static final Block iz;
    public static final Block iA;
    public static final Block iB;
    public static final Block iC;
    public static final Block iD;
    public static final Block iE;
    public static final Block iF;
    public static final Block iG;
    public static final Block iH;
    public static final Block iI;
    public static final Block iJ;
    public static final Block iK;
    public static final Block iL;
    public static final Block iM;
    public static final Block iN;
    public static final Block iO;
    public static final Block iP;
    public static final Block iQ;
    public static final Block iR;
    public static final Block iS;
    public static final Block iT;
    public static final Block iU;
    public static final Block iV;
    public static final Block iW;
    public static final Block iX;
    public static final Block iY;
    public static final Block iZ;
    public static final Block ja;
    public static final Block jb;
    public static final Block jc;
    public static final Block jd;
    public static final Block je;
    public static final Block jf;
    public static final Block jg;
    public static final Block jh;
    public static final Block ji;
    public static final Block jj;
    public static final Block jk;
    public static final Block jl;
    public static final Block jm;
    public static final Block jn;
    public static final Block jo;
    public static final Block jp;
    public static final Block jq;
    public static final Block jr;
    public static final Block js;
    public static final Block jt;
    public static final Block ju;
    public static final Block jv;
    public static final Block jw;
    public static final Block jx;
    public static final Block jy;
    public static final Block jz;
    public static final Block jA;
    public static final Block jB;
    public static final Block jC;
    public static final Block jD;
    public static final Block jE;
    public static final Block jF;
    public static final Block jG;
    public static final Block jH;
    public static final Block jI;
    public static final Block jJ;
    public static final Block jK;
    public static final Block jL;
    public static final Block jM;
    public static final Block jN;
    public static final Block jO;
    public static final Block jP;
    public static final Block jQ;
    public static final Block jR;
    public static final Block jS;
    public static final Block jT;
    public static final Block jU;
    public static final Block jV;
    public static final Block jW;
    public static final Block jX;
    public static final Block jY;
    public static final Block jZ;
    public static final Block ka;
    public static final Block kb;
    public static final Block kc;
    public static final Block kd;
    public static final Block ke;
    public static final Block kf;
    public static final Block kg;
    public static final Block kh;
    public static final Block ki;
    public static final Block kj;
    public static final Block kk;
    public static final Block kl;
    public static final Block km;
    public static final Block kn;
    public static final Block ko;
    public static final Block kp;
    public static final Block kq;
    public static final Block kr;
    public static final Block ks;
    public static final Block kt;
    public static final Block ku;
    public static final Block kv;
    public static final Block kw;
    public static final Block kx;
    public static final Block ky;
    public static final Block kz;
    public static final Block kA;
    public static final Block kB;
    public static final Block kC;
    public static final Block kD;
    public static final Block kE;
    public static final Block kF;
    public static final Block kG;
    public static final Block kH;
    public static final Block kI;
    public static final Block kJ;
    public static final Block kK;
    public static final Block kL;
    public static final Block kM;
    public static final Block kN;
    public static final Block kO;
    public static final Block kP;
    public static final Block kQ;
    public static final Block kR;
    public static final Block kS;
    public static final Block kT;
    public static final Block kU;
    public static final Block kV;
    public static final Block kW;
    public static final Block kX;
    public static final Block kY;
    public static final Block kZ;
    public static final Block la;
    public static final Block lb;
    public static final Block lc;
    public static final Block ld;
    public static final Block le;
    public static final Block lf;
    public static final Block lg;
    public static final Block lh;
    public static final Block li;
    public static final Block lj;
    public static final Block lk;
    public static final Block ll;
    public static final Block lm;
    public static final Block ln;
    public static final Block lo;
    public static final Block lp;
    public static final Block lq;
    public static final Block lr;
    public static final Block ls;
    public static final Block lt;
    public static final Block lu;
    public static final Block lv;
    public static final Block lw;
    public static final Block lx;
    public static final Block ly;
    public static final Block lz;
    public static final Block lA;
    public static final Block lB;
    public static final Block lC;
    public static final Block lD;
    public static final Block lE;
    public static final Block lF;
    public static final Block lG;
    public static final Block lH;
    public static final Block lI;
    public static final Block lJ;
    public static final Block lK;
    public static final Block lL;
    public static final Block lM;
    public static final Block lN;
    public static final Block lO;
    public static final Block lP;
    public static final Block lQ;
    public static final Block lR;
    public static final Block lS;
    public static final Block lT;
    public static final Block lU;
    public static final Block lV;
    public static final Block lW;
    public static final Block lX;
    public static final Block lY;
    public static final Block lZ;
    
    private static Block register(final String id, final Block block) {
        return Registry.<Block>register(Registry.BLOCK, id, block);
    }
    
    static {
        AIR = register("air", new AirBlock(Block.Settings.of(Material.AIR).noCollision().dropsNothing()));
        b = register("stone", new Block(Block.Settings.of(Material.STONE, MaterialColor.STONE).strength(1.5f, 6.0f)));
        c = register("granite", new Block(Block.Settings.of(Material.STONE, MaterialColor.DIRT).strength(1.5f, 6.0f)));
        d = register("polished_granite", new Block(Block.Settings.of(Material.STONE, MaterialColor.DIRT).strength(1.5f, 6.0f)));
        e = register("diorite", new Block(Block.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(1.5f, 6.0f)));
        f = register("polished_diorite", new Block(Block.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(1.5f, 6.0f)));
        g = register("andesite", new Block(Block.Settings.of(Material.STONE, MaterialColor.STONE).strength(1.5f, 6.0f)));
        h = register("polished_andesite", new Block(Block.Settings.of(Material.STONE, MaterialColor.STONE).strength(1.5f, 6.0f)));
        i = register("grass_block", new GrassBlock(Block.Settings.of(Material.ORGANIC).ticksRandomly().strength(0.6f).sounds(BlockSoundGroup.GRASS)));
        j = register("dirt", new Block(Block.Settings.of(Material.EARTH, MaterialColor.DIRT).strength(0.5f).sounds(BlockSoundGroup.GRAVEL)));
        k = register("coarse_dirt", new Block(Block.Settings.of(Material.EARTH, MaterialColor.DIRT).strength(0.5f).sounds(BlockSoundGroup.GRAVEL)));
        l = register("podzol", new SnowyBlock(Block.Settings.of(Material.EARTH, MaterialColor.SPRUCE).strength(0.5f).sounds(BlockSoundGroup.GRAVEL)));
        m = register("cobblestone", new Block(Block.Settings.of(Material.STONE).strength(2.0f, 6.0f)));
        n = register("oak_planks", new Block(Block.Settings.of(Material.WOOD, MaterialColor.WOOD).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        o = register("spruce_planks", new Block(Block.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        p = register("birch_planks", new Block(Block.Settings.of(Material.WOOD, MaterialColor.SAND).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        q = register("jungle_planks", new Block(Block.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        r = register("acacia_planks", new Block(Block.Settings.of(Material.WOOD, MaterialColor.ORANGE).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        s = register("dark_oak_planks", new Block(Block.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        t = register("oak_sapling", new SaplingBlock(new OakSaplingGenerator(), Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        u = register("spruce_sapling", new SaplingBlock(new SpruceSaplingGenerator(), Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        v = register("birch_sapling", new SaplingBlock(new BirchSaplingGenerator(), Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        w = register("jungle_sapling", new SaplingBlock(new JungleSaplingGenerator(), Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        x = register("acacia_sapling", new SaplingBlock(new AcaciaSaplingGenerator(), Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        y = register("dark_oak_sapling", new SaplingBlock(new DarkOakSaplingGenerator(), Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        z = register("bedrock", new BedrockBlock(Block.Settings.of(Material.STONE).strength(-1.0f, 3600000.0f).dropsNothing()));
        A = register("water", new FluidBlock(Fluids.WATER, Block.Settings.of(Material.WATER).noCollision().strength(100.0f).dropsNothing()));
        B = register("lava", new FluidBlock(Fluids.LAVA, Block.Settings.of(Material.LAVA).noCollision().ticksRandomly().strength(100.0f).lightLevel(15).dropsNothing()));
        C = register("sand", new SandBlock(14406560, Block.Settings.of(Material.SAND, MaterialColor.SAND).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        D = register("red_sand", new SandBlock(11098145, Block.Settings.of(Material.SAND, MaterialColor.ORANGE).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        E = register("gravel", new GravelBlock(Block.Settings.of(Material.SAND, MaterialColor.STONE).strength(0.6f).sounds(BlockSoundGroup.GRAVEL)));
        F = register("gold_ore", new OreBlock(Block.Settings.of(Material.STONE).strength(3.0f, 3.0f)));
        G = register("iron_ore", new OreBlock(Block.Settings.of(Material.STONE).strength(3.0f, 3.0f)));
        H = register("coal_ore", new OreBlock(Block.Settings.of(Material.STONE).strength(3.0f, 3.0f)));
        I = register("oak_log", new LogBlock(MaterialColor.WOOD, Block.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        J = register("spruce_log", new LogBlock(MaterialColor.SPRUCE, Block.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        K = register("birch_log", new LogBlock(MaterialColor.SAND, Block.Settings.of(Material.WOOD, MaterialColor.QUARTZ).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        L = register("jungle_log", new LogBlock(MaterialColor.DIRT, Block.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        M = register("acacia_log", new LogBlock(MaterialColor.ORANGE, Block.Settings.of(Material.WOOD, MaterialColor.STONE).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        N = register("dark_oak_log", new LogBlock(MaterialColor.BROWN, Block.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        O = register("stripped_spruce_log", new LogBlock(MaterialColor.SPRUCE, Block.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        P = register("stripped_birch_log", new LogBlock(MaterialColor.SAND, Block.Settings.of(Material.WOOD, MaterialColor.SAND).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        Q = register("stripped_jungle_log", new LogBlock(MaterialColor.DIRT, Block.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        R = register("stripped_acacia_log", new LogBlock(MaterialColor.ORANGE, Block.Settings.of(Material.WOOD, MaterialColor.ORANGE).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        S = register("stripped_dark_oak_log", new LogBlock(MaterialColor.BROWN, Block.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        T = register("stripped_oak_log", new LogBlock(MaterialColor.WOOD, Block.Settings.of(Material.WOOD, MaterialColor.WOOD).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        U = register("oak_wood", new PillarBlock(Block.Settings.of(Material.WOOD, MaterialColor.WOOD).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        V = register("spruce_wood", new PillarBlock(Block.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        W = register("birch_wood", new PillarBlock(Block.Settings.of(Material.WOOD, MaterialColor.SAND).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        X = register("jungle_wood", new PillarBlock(Block.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        Y = register("acacia_wood", new PillarBlock(Block.Settings.of(Material.WOOD, MaterialColor.GRAY).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        Z = register("dark_oak_wood", new PillarBlock(Block.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        aa = register("stripped_oak_wood", new PillarBlock(Block.Settings.of(Material.WOOD, MaterialColor.WOOD).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        ab = register("stripped_spruce_wood", new PillarBlock(Block.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        ac = register("stripped_birch_wood", new PillarBlock(Block.Settings.of(Material.WOOD, MaterialColor.SAND).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        ad = register("stripped_jungle_wood", new PillarBlock(Block.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        ae = register("stripped_acacia_wood", new PillarBlock(Block.Settings.of(Material.WOOD, MaterialColor.ORANGE).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        af = register("stripped_dark_oak_wood", new PillarBlock(Block.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(2.0f).sounds(BlockSoundGroup.WOOD)));
        ag = register("oak_leaves", new LeavesBlock(Block.Settings.of(Material.LEAVES).strength(0.2f).ticksRandomly().sounds(BlockSoundGroup.GRASS)));
        ah = register("spruce_leaves", new LeavesBlock(Block.Settings.of(Material.LEAVES).strength(0.2f).ticksRandomly().sounds(BlockSoundGroup.GRASS)));
        ai = register("birch_leaves", new LeavesBlock(Block.Settings.of(Material.LEAVES).strength(0.2f).ticksRandomly().sounds(BlockSoundGroup.GRASS)));
        aj = register("jungle_leaves", new LeavesBlock(Block.Settings.of(Material.LEAVES).strength(0.2f).ticksRandomly().sounds(BlockSoundGroup.GRASS)));
        ak = register("acacia_leaves", new LeavesBlock(Block.Settings.of(Material.LEAVES).strength(0.2f).ticksRandomly().sounds(BlockSoundGroup.GRASS)));
        al = register("dark_oak_leaves", new LeavesBlock(Block.Settings.of(Material.LEAVES).strength(0.2f).ticksRandomly().sounds(BlockSoundGroup.GRASS)));
        am = register("sponge", new SpongeBlock(Block.Settings.of(Material.SPONGE).strength(0.6f).sounds(BlockSoundGroup.GRASS)));
        an = register("wet_sponge", new WetSpongeBlock(Block.Settings.of(Material.SPONGE).strength(0.6f).sounds(BlockSoundGroup.GRASS)));
        ao = register("glass", new GlassBlock(Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        ap = register("lapis_ore", new OreBlock(Block.Settings.of(Material.STONE).strength(3.0f, 3.0f)));
        aq = register("lapis_block", new Block(Block.Settings.of(Material.METAL, MaterialColor.LAPIS).strength(3.0f, 3.0f)));
        ar = register("dispenser", new DispenserBlock(Block.Settings.of(Material.STONE).strength(3.5f)));
        as = register("sandstone", new Block(Block.Settings.of(Material.STONE, MaterialColor.SAND).strength(0.8f)));
        at = register("chiseled_sandstone", new Block(Block.Settings.of(Material.STONE, MaterialColor.SAND).strength(0.8f)));
        au = register("cut_sandstone", new Block(Block.Settings.of(Material.STONE, MaterialColor.SAND).strength(0.8f)));
        av = register("note_block", new NoteBlock(Block.Settings.of(Material.WOOD).sounds(BlockSoundGroup.WOOD).strength(0.8f)));
        aw = register("white_bed", new BedBlock(DyeColor.a, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        ax = register("orange_bed", new BedBlock(DyeColor.b, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        ay = register("magenta_bed", new BedBlock(DyeColor.c, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        az = register("light_blue_bed", new BedBlock(DyeColor.d, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aA = register("yellow_bed", new BedBlock(DyeColor.e, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aB = register("lime_bed", new BedBlock(DyeColor.f, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aC = register("pink_bed", new BedBlock(DyeColor.g, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aD = register("gray_bed", new BedBlock(DyeColor.h, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aE = register("light_gray_bed", new BedBlock(DyeColor.i, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aF = register("cyan_bed", new BedBlock(DyeColor.j, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aG = register("purple_bed", new BedBlock(DyeColor.k, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aH = register("blue_bed", new BedBlock(DyeColor.l, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aI = register("brown_bed", new BedBlock(DyeColor.m, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aJ = register("green_bed", new BedBlock(DyeColor.n, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aK = register("red_bed", new BedBlock(DyeColor.o, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aL = register("black_bed", new BedBlock(DyeColor.BLACK, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2f)));
        aM = register("powered_rail", new PoweredRailBlock(Block.Settings.of(Material.PART).noCollision().strength(0.7f).sounds(BlockSoundGroup.METAL)));
        aN = register("detector_rail", new DetectorRailBlock(Block.Settings.of(Material.PART).noCollision().strength(0.7f).sounds(BlockSoundGroup.METAL)));
        aO = register("sticky_piston", new PistonBlock(true, Block.Settings.of(Material.PISTON).strength(0.5f)));
        aP = register("cobweb", new CobwebBlock(Block.Settings.of(Material.COBWEB).noCollision().strength(4.0f)));
        aQ = register("grass", new FernBlock(Block.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        aR = register("fern", new FernBlock(Block.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        aS = register("dead_bush", new DeadBushBlock(Block.Settings.of(Material.REPLACEABLE_PLANT, MaterialColor.WOOD).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        aT = register("seagrass", new SeagrassBlock(Block.Settings.of(Material.SEAGRASS).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        aU = register("tall_seagrass", new TallSeagrassBlock(Block.Settings.of(Material.SEAGRASS).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        aV = register("piston", new PistonBlock(false, Block.Settings.of(Material.PISTON).strength(0.5f)));
        aW = register("piston_head", new PistonHeadBlock(Block.Settings.of(Material.PISTON).strength(0.5f).dropsNothing()));
        aX = register("white_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.WHITE).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        aY = register("orange_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.ORANGE).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        aZ = register("magenta_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.MAGENTA).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        ba = register("light_blue_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.LIGHT_BLUE).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        bb = register("yellow_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.YELLOW).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        bc = register("lime_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.LIME).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        bd = register("pink_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.PINK).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        be = register("gray_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.GRAY).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        bf = register("light_gray_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.LIGHT_GRAY).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        bg = register("cyan_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.CYAN).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        bh = register("purple_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.PURPLE).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        bi = register("blue_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.BLUE).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        bj = register("brown_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.BROWN).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        bk = register("green_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.GREEN).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        bl = register("red_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.RED).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        bm = register("black_wool", new Block(Block.Settings.of(Material.WOOL, MaterialColor.BLACK).strength(0.8f).sounds(BlockSoundGroup.WOOL)));
        bn = register("moving_piston", new PistonExtensionBlock(Block.Settings.of(Material.PISTON).strength(-1.0f).hasDynamicBounds().dropsNothing()));
        bo = register("dandelion", new FlowerBlock(StatusEffects.w, 7, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bp = register("poppy", new FlowerBlock(StatusEffects.a, 6, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bq = register("blue_orchid", new FlowerBlock(StatusEffects.w, 7, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        br = register("allium", new FlowerBlock(StatusEffects.l, 4, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bs = register("azure_bluet", new FlowerBlock(StatusEffects.o, 8, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bt = register("red_tulip", new FlowerBlock(StatusEffects.r, 9, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bu = register("orange_tulip", new FlowerBlock(StatusEffects.r, 9, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bv = register("white_tulip", new FlowerBlock(StatusEffects.r, 9, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bw = register("pink_tulip", new FlowerBlock(StatusEffects.r, 9, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bx = register("oxeye_daisy", new FlowerBlock(StatusEffects.j, 8, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        by = register("cornflower", new FlowerBlock(StatusEffects.h, 6, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bz = register("wither_rose", new WitherRoseBlock(StatusEffects.t, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bA = register("lily_of_the_valley", new FlowerBlock(StatusEffects.s, 12, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bB = register("brown_mushroom", new MushroomPlantBlock(Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS).lightLevel(1)));
        bC = register("red_mushroom", new MushroomPlantBlock(Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bD = register("gold_block", new Block(Block.Settings.of(Material.METAL, MaterialColor.GOLD).strength(3.0f, 6.0f).sounds(BlockSoundGroup.METAL)));
        bE = register("iron_block", new Block(Block.Settings.of(Material.METAL, MaterialColor.IRON).strength(5.0f, 6.0f).sounds(BlockSoundGroup.METAL)));
        bF = register("bricks", new Block(Block.Settings.of(Material.STONE, MaterialColor.RED).strength(2.0f, 6.0f)));
        bG = register("tnt", new TntBlock(Block.Settings.of(Material.TNT).breakInstantly().sounds(BlockSoundGroup.GRASS)));
        bH = register("bookshelf", new Block(Block.Settings.of(Material.WOOD).strength(1.5f).sounds(BlockSoundGroup.WOOD)));
        bI = register("mossy_cobblestone", new Block(Block.Settings.of(Material.STONE).strength(2.0f, 6.0f)));
        bJ = register("obsidian", new Block(Block.Settings.of(Material.STONE, MaterialColor.BLACK).strength(50.0f, 1200.0f)));
        bK = register("torch", new TorchBlock(Block.Settings.of(Material.PART).noCollision().breakInstantly().lightLevel(14).sounds(BlockSoundGroup.WOOD)));
        bL = register("wall_torch", new WallTorchBlock(Block.Settings.of(Material.PART).noCollision().breakInstantly().lightLevel(14).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.bK)));
        bM = register("fire", new FireBlock(Block.Settings.of(Material.FIRE, MaterialColor.LAVA).noCollision().ticksRandomly().breakInstantly().lightLevel(15).sounds(BlockSoundGroup.WOOL).dropsNothing()));
        bN = register("spawner", new SpawnerBlock(Block.Settings.of(Material.STONE).strength(5.0f).sounds(BlockSoundGroup.METAL)));
        bO = register("oak_stairs", new StairsBlock(Blocks.n.getDefaultState(), Block.Settings.copy(Blocks.n)));
        bP = register("chest", new ChestBlock(Block.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
        bQ = register("redstone_wire", new RedstoneWireBlock(Block.Settings.of(Material.PART).noCollision().breakInstantly()));
        bR = register("diamond_ore", new OreBlock(Block.Settings.of(Material.STONE).strength(3.0f, 3.0f)));
        bS = register("diamond_block", new Block(Block.Settings.of(Material.METAL, MaterialColor.DIAMOND).strength(5.0f, 6.0f).sounds(BlockSoundGroup.METAL)));
        bT = register("crafting_table", new CraftingTableBlock(Block.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
        bU = register("wheat", new CropBlock(Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.CROP)));
        bV = register("farmland", new FarmlandBlock(Block.Settings.of(Material.EARTH).ticksRandomly().strength(0.6f).sounds(BlockSoundGroup.GRAVEL)));
        bW = register("furnace", new FurnaceBlock(Block.Settings.of(Material.STONE).strength(3.5f).lightLevel(13)));
        bX = register("oak_sign", new SignBlock(Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        bY = register("spruce_sign", new SignBlock(Block.Settings.of(Material.WOOD, Blocks.J.materialColor).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        bZ = register("birch_sign", new SignBlock(Block.Settings.of(Material.WOOD, MaterialColor.SAND).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        ca = register("acacia_sign", new SignBlock(Block.Settings.of(Material.WOOD, MaterialColor.ORANGE).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        cb = register("jungle_sign", new SignBlock(Block.Settings.of(Material.WOOD, Blocks.L.materialColor).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        cc = register("dark_oak_sign", new SignBlock(Block.Settings.of(Material.WOOD, Blocks.N.materialColor).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        cd = register("oak_door", new DoorBlock(Block.Settings.of(Material.WOOD, Blocks.n.materialColor).strength(3.0f).sounds(BlockSoundGroup.WOOD)));
        ce = register("ladder", new LadderBlock(Block.Settings.of(Material.PART).strength(0.4f).sounds(BlockSoundGroup.LADDER)));
        cf = register("rail", new RailBlock(Block.Settings.of(Material.PART).noCollision().strength(0.7f).sounds(BlockSoundGroup.METAL)));
        cg = register("cobblestone_stairs", new StairsBlock(Blocks.m.getDefaultState(), Block.Settings.copy(Blocks.m)));
        ch = register("oak_wall_sign", new WallSignBlock(Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.bX)));
        ci = register("spruce_wall_sign", new WallSignBlock(Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.bY)));
        cj = register("birch_wall_sign", new WallSignBlock(Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.bZ)));
        ck = register("acacia_wall_sign", new WallSignBlock(Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.ca)));
        cl = register("jungle_wall_sign", new WallSignBlock(Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.cb)));
        cm = register("dark_oak_wall_sign", new WallSignBlock(Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.cc)));
        cn = register("lever", new LeverBlock(Block.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        co = register("stone_pressure_plate", new PressurePlateBlock(PressurePlateBlock.Type.STONE, Block.Settings.of(Material.STONE).noCollision().strength(0.5f)));
        cp = register("iron_door", new DoorBlock(Block.Settings.of(Material.METAL, MaterialColor.IRON).strength(5.0f).sounds(BlockSoundGroup.METAL)));
        cq = register("oak_pressure_plate", new PressurePlateBlock(PressurePlateBlock.Type.WOOD, Block.Settings.of(Material.WOOD, Blocks.n.materialColor).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        cr = register("spruce_pressure_plate", new PressurePlateBlock(PressurePlateBlock.Type.WOOD, Block.Settings.of(Material.WOOD, Blocks.o.materialColor).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        cs = register("birch_pressure_plate", new PressurePlateBlock(PressurePlateBlock.Type.WOOD, Block.Settings.of(Material.WOOD, Blocks.p.materialColor).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        ct = register("jungle_pressure_plate", new PressurePlateBlock(PressurePlateBlock.Type.WOOD, Block.Settings.of(Material.WOOD, Blocks.q.materialColor).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        cu = register("acacia_pressure_plate", new PressurePlateBlock(PressurePlateBlock.Type.WOOD, Block.Settings.of(Material.WOOD, Blocks.r.materialColor).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        cv = register("dark_oak_pressure_plate", new PressurePlateBlock(PressurePlateBlock.Type.WOOD, Block.Settings.of(Material.WOOD, Blocks.s.materialColor).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        cw = register("redstone_ore", new RedstoneOreBlock(Block.Settings.of(Material.STONE).ticksRandomly().lightLevel(9).strength(3.0f, 3.0f)));
        cx = register("redstone_torch", new RedstoneTorchBlock(Block.Settings.of(Material.PART).noCollision().breakInstantly().lightLevel(7).sounds(BlockSoundGroup.WOOD)));
        cy = register("redstone_wall_torch", new RedstoneTorchWallBlock(Block.Settings.of(Material.PART).noCollision().breakInstantly().lightLevel(7).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.cx)));
        cz = register("stone_button", new StoneButtonBlock(Block.Settings.of(Material.PART).noCollision().strength(0.5f)));
        cA = register("snow", new SnowBlock(Block.Settings.of(Material.SNOW).ticksRandomly().strength(0.1f).sounds(BlockSoundGroup.SNOW)));
        cB = register("ice", new IceBlock(Block.Settings.of(Material.ICE).friction(0.98f).ticksRandomly().strength(0.5f).sounds(BlockSoundGroup.GLASS)));
        cC = register("snow_block", new Block(Block.Settings.of(Material.SNOW_BLOCK).strength(0.2f).sounds(BlockSoundGroup.SNOW)));
        cD = register("cactus", new CactusBlock(Block.Settings.of(Material.CACTUS).ticksRandomly().strength(0.4f).sounds(BlockSoundGroup.WOOL)));
        cE = register("clay", new Block(Block.Settings.of(Material.CLAY).strength(0.6f).sounds(BlockSoundGroup.GRAVEL)));
        cF = register("sugar_cane", new SugarCaneBlock(Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        cG = register("jukebox", new JukeboxBlock(Block.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(2.0f, 6.0f)));
        cH = register("oak_fence", new FenceBlock(Block.Settings.of(Material.WOOD, Blocks.n.materialColor).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        cI = register("pumpkin", new PumpkinBlock(Block.Settings.of(Material.PUMPKIN, MaterialColor.ORANGE).strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        cJ = register("netherrack", new Block(Block.Settings.of(Material.STONE, MaterialColor.NETHER).strength(0.4f)));
        cK = register("soul_sand", new SoulSandBlock(Block.Settings.of(Material.SAND, MaterialColor.BROWN).ticksRandomly().strength(0.5f).sounds(BlockSoundGroup.SAND)));
        cL = register("glowstone", new Block(Block.Settings.of(Material.GLASS, MaterialColor.SAND).strength(0.3f).sounds(BlockSoundGroup.GLASS).lightLevel(15)));
        cM = register("nether_portal", new PortalBlock(Block.Settings.of(Material.PORTAL).noCollision().ticksRandomly().strength(-1.0f).sounds(BlockSoundGroup.GLASS).lightLevel(11).dropsNothing()));
        cN = register("carved_pumpkin", new CarvedPumpkinBlock(Block.Settings.of(Material.PUMPKIN, MaterialColor.ORANGE).strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        cO = register("jack_o_lantern", new CarvedPumpkinBlock(Block.Settings.of(Material.PUMPKIN, MaterialColor.ORANGE).strength(1.0f).sounds(BlockSoundGroup.WOOD).lightLevel(15)));
        cP = register("cake", new CakeBlock(Block.Settings.of(Material.CAKE).strength(0.5f).sounds(BlockSoundGroup.WOOL)));
        cQ = register("repeater", new RepeaterBlock(Block.Settings.of(Material.PART).breakInstantly().sounds(BlockSoundGroup.WOOD)));
        cR = register("white_stained_glass", new StainedGlassBlock(DyeColor.a, Block.Settings.of(Material.GLASS, DyeColor.a).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        cS = register("orange_stained_glass", new StainedGlassBlock(DyeColor.b, Block.Settings.of(Material.GLASS, DyeColor.b).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        cT = register("magenta_stained_glass", new StainedGlassBlock(DyeColor.c, Block.Settings.of(Material.GLASS, DyeColor.c).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        cU = register("light_blue_stained_glass", new StainedGlassBlock(DyeColor.d, Block.Settings.of(Material.GLASS, DyeColor.d).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        cV = register("yellow_stained_glass", new StainedGlassBlock(DyeColor.e, Block.Settings.of(Material.GLASS, DyeColor.e).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        cW = register("lime_stained_glass", new StainedGlassBlock(DyeColor.f, Block.Settings.of(Material.GLASS, DyeColor.f).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        cX = register("pink_stained_glass", new StainedGlassBlock(DyeColor.g, Block.Settings.of(Material.GLASS, DyeColor.g).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        cY = register("gray_stained_glass", new StainedGlassBlock(DyeColor.h, Block.Settings.of(Material.GLASS, DyeColor.h).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        cZ = register("light_gray_stained_glass", new StainedGlassBlock(DyeColor.i, Block.Settings.of(Material.GLASS, DyeColor.i).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        da = register("cyan_stained_glass", new StainedGlassBlock(DyeColor.j, Block.Settings.of(Material.GLASS, DyeColor.j).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        db = register("purple_stained_glass", new StainedGlassBlock(DyeColor.k, Block.Settings.of(Material.GLASS, DyeColor.k).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        dc = register("blue_stained_glass", new StainedGlassBlock(DyeColor.l, Block.Settings.of(Material.GLASS, DyeColor.l).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        dd = register("brown_stained_glass", new StainedGlassBlock(DyeColor.m, Block.Settings.of(Material.GLASS, DyeColor.m).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        de = register("green_stained_glass", new StainedGlassBlock(DyeColor.n, Block.Settings.of(Material.GLASS, DyeColor.n).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        df = register("red_stained_glass", new StainedGlassBlock(DyeColor.o, Block.Settings.of(Material.GLASS, DyeColor.o).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        dg = register("black_stained_glass", new StainedGlassBlock(DyeColor.BLACK, Block.Settings.of(Material.GLASS, DyeColor.BLACK).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        dh = register("oak_trapdoor", new TrapdoorBlock(Block.Settings.of(Material.WOOD, MaterialColor.WOOD).strength(3.0f).sounds(BlockSoundGroup.WOOD)));
        di = register("spruce_trapdoor", new TrapdoorBlock(Block.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(3.0f).sounds(BlockSoundGroup.WOOD)));
        dj = register("birch_trapdoor", new TrapdoorBlock(Block.Settings.of(Material.WOOD, MaterialColor.SAND).strength(3.0f).sounds(BlockSoundGroup.WOOD)));
        dk = register("jungle_trapdoor", new TrapdoorBlock(Block.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(3.0f).sounds(BlockSoundGroup.WOOD)));
        dl = register("acacia_trapdoor", new TrapdoorBlock(Block.Settings.of(Material.WOOD, MaterialColor.ORANGE).strength(3.0f).sounds(BlockSoundGroup.WOOD)));
        dm = register("dark_oak_trapdoor", new TrapdoorBlock(Block.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(3.0f).sounds(BlockSoundGroup.WOOD)));
        dn = register("stone_bricks", new Block(Block.Settings.of(Material.STONE).strength(1.5f, 6.0f)));
        do_ = register("mossy_stone_bricks", new Block(Block.Settings.of(Material.STONE).strength(1.5f, 6.0f)));
        dp = register("cracked_stone_bricks", new Block(Block.Settings.of(Material.STONE).strength(1.5f, 6.0f)));
        dq = register("chiseled_stone_bricks", new Block(Block.Settings.of(Material.STONE).strength(1.5f, 6.0f)));
        dr = register("infested_stone", new InfestedBlock(Blocks.b, Block.Settings.of(Material.CLAY).strength(0.0f, 0.75f)));
        ds = register("infested_cobblestone", new InfestedBlock(Blocks.m, Block.Settings.of(Material.CLAY).strength(0.0f, 0.75f)));
        dt = register("infested_stone_bricks", new InfestedBlock(Blocks.dn, Block.Settings.of(Material.CLAY).strength(0.0f, 0.75f)));
        du = register("infested_mossy_stone_bricks", new InfestedBlock(Blocks.do_, Block.Settings.of(Material.CLAY).strength(0.0f, 0.75f)));
        dv = register("infested_cracked_stone_bricks", new InfestedBlock(Blocks.dp, Block.Settings.of(Material.CLAY).strength(0.0f, 0.75f)));
        dw = register("infested_chiseled_stone_bricks", new InfestedBlock(Blocks.dq, Block.Settings.of(Material.CLAY).strength(0.0f, 0.75f)));
        dx = register("brown_mushroom_block", new MushroomBlock(Block.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(0.2f).sounds(BlockSoundGroup.WOOD)));
        dy = register("red_mushroom_block", new MushroomBlock(Block.Settings.of(Material.WOOD, MaterialColor.RED).strength(0.2f).sounds(BlockSoundGroup.WOOD)));
        dz = register("mushroom_stem", new MushroomBlock(Block.Settings.of(Material.WOOD, MaterialColor.WEB).strength(0.2f).sounds(BlockSoundGroup.WOOD)));
        dA = register("iron_bars", new PaneBlock(Block.Settings.of(Material.METAL, MaterialColor.AIR).strength(5.0f, 6.0f).sounds(BlockSoundGroup.METAL)));
        dB = register("glass_pane", new PaneBlock(Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        dC = register("melon", new MelonBlock(Block.Settings.of(Material.PUMPKIN, MaterialColor.LIME).strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        dD = register("attached_pumpkin_stem", new AttachedStemBlock((GourdBlock)Blocks.cI, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.WOOD)));
        dE = register("attached_melon_stem", new AttachedStemBlock((GourdBlock)Blocks.dC, Block.Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.WOOD)));
        dF = register("pumpkin_stem", new StemBlock((GourdBlock)Blocks.cI, Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.t)));
        dG = register("melon_stem", new StemBlock((GourdBlock)Blocks.dC, Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.t)));
        dH = register("vine", new VineBlock(Block.Settings.of(Material.REPLACEABLE_PLANT).noCollision().ticksRandomly().strength(0.2f).sounds(BlockSoundGroup.GRASS)));
        dI = register("oak_fence_gate", new FenceGateBlock(Block.Settings.of(Material.WOOD, Blocks.n.materialColor).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        dJ = register("brick_stairs", new StairsBlock(Blocks.bF.getDefaultState(), Block.Settings.copy(Blocks.bF)));
        dK = register("stone_brick_stairs", new StairsBlock(Blocks.dn.getDefaultState(), Block.Settings.copy(Blocks.dn)));
        dL = register("mycelium", new MyceliumBlock(Block.Settings.of(Material.ORGANIC, MaterialColor.PURPLE).ticksRandomly().strength(0.6f).sounds(BlockSoundGroup.GRASS)));
        dM = register("lily_pad", new LilyPadBlock(Block.Settings.of(Material.PLANT).breakInstantly().sounds(BlockSoundGroup.GRASS)));
        dN = register("nether_bricks", new Block(Block.Settings.of(Material.STONE, MaterialColor.NETHER).strength(2.0f, 6.0f)));
        dO = register("nether_brick_fence", new FenceBlock(Block.Settings.of(Material.STONE, MaterialColor.NETHER).strength(2.0f, 6.0f)));
        dP = register("nether_brick_stairs", new StairsBlock(Blocks.dN.getDefaultState(), Block.Settings.copy(Blocks.dN)));
        dQ = register("nether_wart", new NetherWartBlock(Block.Settings.of(Material.PLANT, MaterialColor.RED).noCollision().ticksRandomly().sounds(BlockSoundGroup.NETHER_WART)));
        dR = register("enchanting_table", new EnchantingTableBlock(Block.Settings.of(Material.STONE, MaterialColor.RED).strength(5.0f, 1200.0f)));
        dS = register("brewing_stand", new BrewingStandBlock(Block.Settings.of(Material.METAL).strength(0.5f).lightLevel(1)));
        dT = register("cauldron", new CauldronBlock(Block.Settings.of(Material.METAL, MaterialColor.STONE).strength(2.0f)));
        dU = register("end_portal", new EndPortalBlock(Block.Settings.of(Material.PORTAL, MaterialColor.BLACK).noCollision().lightLevel(15).strength(-1.0f, 3600000.0f).dropsNothing()));
        dV = register("end_portal_frame", new EndPortalFrameBlock(Block.Settings.of(Material.STONE, MaterialColor.GREEN).sounds(BlockSoundGroup.GLASS).lightLevel(1).strength(-1.0f, 3600000.0f).dropsNothing()));
        dW = register("end_stone", new Block(Block.Settings.of(Material.STONE, MaterialColor.SAND).strength(3.0f, 9.0f)));
        dX = register("dragon_egg", new DragonEggBlock(Block.Settings.of(Material.DRAGON_EGG, MaterialColor.BLACK).strength(3.0f, 9.0f).lightLevel(1)));
        dY = register("redstone_lamp", new RedstoneLampBlock(Block.Settings.of(Material.REDSTONE_LAMP).lightLevel(15).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        dZ = register("cocoa", new CocoaBlock(Block.Settings.of(Material.PLANT).ticksRandomly().strength(0.2f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        ea = register("sandstone_stairs", new StairsBlock(Blocks.as.getDefaultState(), Block.Settings.copy(Blocks.as)));
        eb = register("emerald_ore", new OreBlock(Block.Settings.of(Material.STONE).strength(3.0f, 3.0f)));
        ec = register("ender_chest", new EnderChestBlock(Block.Settings.of(Material.STONE).strength(22.5f, 600.0f).lightLevel(7)));
        ed = register("tripwire_hook", new TripwireHookBlock(Block.Settings.of(Material.PART).noCollision()));
        ee = register("tripwire", new TripwireBlock((TripwireHookBlock)Blocks.ed, Block.Settings.of(Material.PART).noCollision()));
        ef = register("emerald_block", new Block(Block.Settings.of(Material.METAL, MaterialColor.EMERALD).strength(5.0f, 6.0f).sounds(BlockSoundGroup.METAL)));
        eg = register("spruce_stairs", new StairsBlock(Blocks.o.getDefaultState(), Block.Settings.copy(Blocks.o)));
        eh = register("birch_stairs", new StairsBlock(Blocks.p.getDefaultState(), Block.Settings.copy(Blocks.p)));
        ei = register("jungle_stairs", new StairsBlock(Blocks.q.getDefaultState(), Block.Settings.copy(Blocks.q)));
        ej = register("command_block", new CommandBlock(Block.Settings.of(Material.METAL, MaterialColor.BROWN).strength(-1.0f, 3600000.0f).dropsNothing()));
        ek = register("beacon", new BeaconBlock(Block.Settings.of(Material.GLASS, MaterialColor.DIAMOND).strength(3.0f).lightLevel(15)));
        el = register("cobblestone_wall", new WallBlock(Block.Settings.copy(Blocks.m)));
        em = register("mossy_cobblestone_wall", new WallBlock(Block.Settings.copy(Blocks.m)));
        en = register("flower_pot", new FlowerPotBlock(Blocks.AIR, Block.Settings.of(Material.PART).breakInstantly()));
        eo = register("potted_oak_sapling", new FlowerPotBlock(Blocks.t, Block.Settings.of(Material.PART).breakInstantly()));
        ep = register("potted_spruce_sapling", new FlowerPotBlock(Blocks.u, Block.Settings.of(Material.PART).breakInstantly()));
        eq = register("potted_birch_sapling", new FlowerPotBlock(Blocks.v, Block.Settings.of(Material.PART).breakInstantly()));
        er = register("potted_jungle_sapling", new FlowerPotBlock(Blocks.w, Block.Settings.of(Material.PART).breakInstantly()));
        es = register("potted_acacia_sapling", new FlowerPotBlock(Blocks.x, Block.Settings.of(Material.PART).breakInstantly()));
        et = register("potted_dark_oak_sapling", new FlowerPotBlock(Blocks.y, Block.Settings.of(Material.PART).breakInstantly()));
        eu = register("potted_fern", new FlowerPotBlock(Blocks.aR, Block.Settings.of(Material.PART).breakInstantly()));
        ev = register("potted_dandelion", new FlowerPotBlock(Blocks.bo, Block.Settings.of(Material.PART).breakInstantly()));
        ew = register("potted_poppy", new FlowerPotBlock(Blocks.bp, Block.Settings.of(Material.PART).breakInstantly()));
        ex = register("potted_blue_orchid", new FlowerPotBlock(Blocks.bq, Block.Settings.of(Material.PART).breakInstantly()));
        ey = register("potted_allium", new FlowerPotBlock(Blocks.br, Block.Settings.of(Material.PART).breakInstantly()));
        ez = register("potted_azure_bluet", new FlowerPotBlock(Blocks.bs, Block.Settings.of(Material.PART).breakInstantly()));
        eA = register("potted_red_tulip", new FlowerPotBlock(Blocks.bt, Block.Settings.of(Material.PART).breakInstantly()));
        eB = register("potted_orange_tulip", new FlowerPotBlock(Blocks.bu, Block.Settings.of(Material.PART).breakInstantly()));
        eC = register("potted_white_tulip", new FlowerPotBlock(Blocks.bv, Block.Settings.of(Material.PART).breakInstantly()));
        eD = register("potted_pink_tulip", new FlowerPotBlock(Blocks.bw, Block.Settings.of(Material.PART).breakInstantly()));
        eE = register("potted_oxeye_daisy", new FlowerPotBlock(Blocks.bx, Block.Settings.of(Material.PART).breakInstantly()));
        eF = register("potted_cornflower", new FlowerPotBlock(Blocks.by, Block.Settings.of(Material.PART).breakInstantly()));
        eG = register("potted_lily_of_the_valley", new FlowerPotBlock(Blocks.bA, Block.Settings.of(Material.PART).breakInstantly()));
        eH = register("potted_wither_rose", new FlowerPotBlock(Blocks.bz, Block.Settings.of(Material.PART).breakInstantly()));
        eI = register("potted_red_mushroom", new FlowerPotBlock(Blocks.bC, Block.Settings.of(Material.PART).breakInstantly()));
        eJ = register("potted_brown_mushroom", new FlowerPotBlock(Blocks.bB, Block.Settings.of(Material.PART).breakInstantly()));
        eK = register("potted_dead_bush", new FlowerPotBlock(Blocks.aS, Block.Settings.of(Material.PART).breakInstantly()));
        eL = register("potted_cactus", new FlowerPotBlock(Blocks.cD, Block.Settings.of(Material.PART).breakInstantly()));
        eM = register("carrots", new CarrotsBlock(Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.CROP)));
        eN = register("potatoes", new PotatoesBlock(Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.CROP)));
        eO = register("oak_button", new WoodButtonBlock(Block.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        eP = register("spruce_button", new WoodButtonBlock(Block.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        eQ = register("birch_button", new WoodButtonBlock(Block.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        eR = register("jungle_button", new WoodButtonBlock(Block.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        eS = register("acacia_button", new WoodButtonBlock(Block.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        eT = register("dark_oak_button", new WoodButtonBlock(Block.Settings.of(Material.PART).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        eU = register("skeleton_skull", new SkullBlock(SkullBlock.Type.SKELETON, Block.Settings.of(Material.PART).strength(1.0f)));
        eV = register("skeleton_wall_skull", new WallSkullBlock(SkullBlock.Type.SKELETON, Block.Settings.of(Material.PART).strength(1.0f).dropsLike(Blocks.eU)));
        eW = register("wither_skeleton_skull", new WitherSkullBlock(Block.Settings.of(Material.PART).strength(1.0f)));
        eX = register("wither_skeleton_wall_skull", new WallWitherSkullBlock(Block.Settings.of(Material.PART).strength(1.0f).dropsLike(Blocks.eW)));
        eY = register("zombie_head", new SkullBlock(SkullBlock.Type.ZOMBIE, Block.Settings.of(Material.PART).strength(1.0f)));
        eZ = register("zombie_wall_head", new WallSkullBlock(SkullBlock.Type.ZOMBIE, Block.Settings.of(Material.PART).strength(1.0f).dropsLike(Blocks.eY)));
        fa = register("player_head", new PlayerSkullBlock(Block.Settings.of(Material.PART).strength(1.0f)));
        fb = register("player_wall_head", new WallPlayerSkullBlock(Block.Settings.of(Material.PART).strength(1.0f).dropsLike(Blocks.fa)));
        fc = register("creeper_head", new SkullBlock(SkullBlock.Type.CREEPER, Block.Settings.of(Material.PART).strength(1.0f)));
        fd = register("creeper_wall_head", new WallSkullBlock(SkullBlock.Type.CREEPER, Block.Settings.of(Material.PART).strength(1.0f).dropsLike(Blocks.fc)));
        fe = register("dragon_head", new SkullBlock(SkullBlock.Type.DRAGON, Block.Settings.of(Material.PART).strength(1.0f)));
        ff = register("dragon_wall_head", new WallSkullBlock(SkullBlock.Type.DRAGON, Block.Settings.of(Material.PART).strength(1.0f).dropsLike(Blocks.fe)));
        fg = register("anvil", new AnvilBlock(Block.Settings.of(Material.ANVIL, MaterialColor.IRON).strength(5.0f, 1200.0f).sounds(BlockSoundGroup.ANVIL)));
        fh = register("chipped_anvil", new AnvilBlock(Block.Settings.of(Material.ANVIL, MaterialColor.IRON).strength(5.0f, 1200.0f).sounds(BlockSoundGroup.ANVIL)));
        fi = register("damaged_anvil", new AnvilBlock(Block.Settings.of(Material.ANVIL, MaterialColor.IRON).strength(5.0f, 1200.0f).sounds(BlockSoundGroup.ANVIL)));
        fj = register("trapped_chest", new TrappedChestBlock(Block.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
        fk = register("light_weighted_pressure_plate", new WeightedPressurePlateBlock(15, Block.Settings.of(Material.METAL, MaterialColor.GOLD).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        fl = register("heavy_weighted_pressure_plate", new WeightedPressurePlateBlock(150, Block.Settings.of(Material.METAL).noCollision().strength(0.5f).sounds(BlockSoundGroup.WOOD)));
        fm = register("comparator", new ComparatorBlock(Block.Settings.of(Material.PART).breakInstantly().sounds(BlockSoundGroup.WOOD)));
        fn = register("daylight_detector", new DaylightDetectorBlock(Block.Settings.of(Material.WOOD).strength(0.2f).sounds(BlockSoundGroup.WOOD)));
        fo = register("redstone_block", new RedstoneBlock(Block.Settings.of(Material.METAL, MaterialColor.LAVA).strength(5.0f, 6.0f).sounds(BlockSoundGroup.METAL)));
        fp = register("nether_quartz_ore", new OreBlock(Block.Settings.of(Material.STONE, MaterialColor.NETHER).strength(3.0f, 3.0f)));
        fq = register("hopper", new HopperBlock(Block.Settings.of(Material.METAL, MaterialColor.STONE).strength(3.0f, 4.8f).sounds(BlockSoundGroup.METAL)));
        fr = register("quartz_block", new Block(Block.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(0.8f)));
        fs = register("chiseled_quartz_block", new Block(Block.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(0.8f)));
        ft = register("quartz_pillar", new PillarBlock(Block.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(0.8f)));
        fu = register("quartz_stairs", new StairsBlock(Blocks.fr.getDefaultState(), Block.Settings.copy(Blocks.fr)));
        fv = register("activator_rail", new PoweredRailBlock(Block.Settings.of(Material.PART).noCollision().strength(0.7f).sounds(BlockSoundGroup.METAL)));
        fw = register("dropper", new DropperBlock(Block.Settings.of(Material.STONE).strength(3.5f)));
        fx = register("white_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.WHITE_TERRACOTTA).strength(1.25f, 4.2f)));
        fy = register("orange_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.ORANGE_TERRACOTTA).strength(1.25f, 4.2f)));
        fz = register("magenta_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.MAGENTA_TERRACOTTA).strength(1.25f, 4.2f)));
        fA = register("light_blue_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.LIGHT_BLUE_TERRACOTTA).strength(1.25f, 4.2f)));
        fB = register("yellow_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.YELLOW_TERRACOTTA).strength(1.25f, 4.2f)));
        fC = register("lime_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.LIME_TERRACOTTA).strength(1.25f, 4.2f)));
        fD = register("pink_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.PINK_TERRACOTTA).strength(1.25f, 4.2f)));
        fE = register("gray_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.GRAY_TERRACOTTA).strength(1.25f, 4.2f)));
        fF = register("light_gray_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.LIGHT_GRAY_TERRACOTTA).strength(1.25f, 4.2f)));
        fG = register("cyan_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.CYAN_TERRACOTTA).strength(1.25f, 4.2f)));
        fH = register("purple_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.PURPLE_TERRACOTTA).strength(1.25f, 4.2f)));
        fI = register("blue_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.BLUE_TERRACOTTA).strength(1.25f, 4.2f)));
        fJ = register("brown_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.BROWN_TERRACOTTA).strength(1.25f, 4.2f)));
        fK = register("green_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.GREEN_TERRACOTTA).strength(1.25f, 4.2f)));
        fL = register("red_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.RED_TERRACOTTA).strength(1.25f, 4.2f)));
        fM = register("black_terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.BLACK_TERRACOTTA).strength(1.25f, 4.2f)));
        fN = register("white_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.a, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        fO = register("orange_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.b, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        fP = register("magenta_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.c, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        fQ = register("light_blue_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.d, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        fR = register("yellow_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.e, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        fS = register("lime_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.f, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        fT = register("pink_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.g, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        fU = register("gray_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.h, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        fV = register("light_gray_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.i, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        fW = register("cyan_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.j, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        fX = register("purple_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.k, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        fY = register("blue_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.l, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        fZ = register("brown_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.m, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        ga = register("green_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.n, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        gb = register("red_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.o, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        gc = register("black_stained_glass_pane", new StainedGlassPaneBlock(DyeColor.BLACK, Block.Settings.of(Material.GLASS).strength(0.3f).sounds(BlockSoundGroup.GLASS)));
        gd = register("acacia_stairs", new StairsBlock(Blocks.r.getDefaultState(), Block.Settings.copy(Blocks.r)));
        ge = register("dark_oak_stairs", new StairsBlock(Blocks.s.getDefaultState(), Block.Settings.copy(Blocks.s)));
        gf = register("slime_block", new SlimeBlock(Block.Settings.of(Material.CLAY, MaterialColor.GRASS).friction(0.8f).sounds(BlockSoundGroup.SLIME)));
        gg = register("barrier", new BarrierBlock(Block.Settings.of(Material.BARRIER).strength(-1.0f, 3600000.8f).dropsNothing()));
        gh = register("iron_trapdoor", new TrapdoorBlock(Block.Settings.of(Material.METAL).strength(5.0f).sounds(BlockSoundGroup.METAL)));
        gi = register("prismarine", new Block(Block.Settings.of(Material.STONE, MaterialColor.CYAN).strength(1.5f, 6.0f)));
        gj = register("prismarine_bricks", new Block(Block.Settings.of(Material.STONE, MaterialColor.DIAMOND).strength(1.5f, 6.0f)));
        gk = register("dark_prismarine", new Block(Block.Settings.of(Material.STONE, MaterialColor.DIAMOND).strength(1.5f, 6.0f)));
        gl = register("prismarine_stairs", new StairsBlock(Blocks.gi.getDefaultState(), Block.Settings.copy(Blocks.gi)));
        gm = register("prismarine_brick_stairs", new StairsBlock(Blocks.gj.getDefaultState(), Block.Settings.copy(Blocks.gj)));
        gn = register("dark_prismarine_stairs", new StairsBlock(Blocks.gk.getDefaultState(), Block.Settings.copy(Blocks.gk)));
        go = register("prismarine_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.CYAN).strength(1.5f, 6.0f)));
        gp = register("prismarine_brick_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.DIAMOND).strength(1.5f, 6.0f)));
        gq = register("dark_prismarine_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.DIAMOND).strength(1.5f, 6.0f)));
        gr = register("sea_lantern", new Block(Block.Settings.of(Material.GLASS, MaterialColor.QUARTZ).strength(0.3f).sounds(BlockSoundGroup.GLASS).lightLevel(15)));
        gs = register("hay_block", new HayBlock(Block.Settings.of(Material.ORGANIC, MaterialColor.YELLOW).strength(0.5f).sounds(BlockSoundGroup.GRASS)));
        gt = register("white_carpet", new CarpetBlock(DyeColor.a, Block.Settings.of(Material.CARPET, MaterialColor.WHITE).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gu = register("orange_carpet", new CarpetBlock(DyeColor.b, Block.Settings.of(Material.CARPET, MaterialColor.ORANGE).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gv = register("magenta_carpet", new CarpetBlock(DyeColor.c, Block.Settings.of(Material.CARPET, MaterialColor.MAGENTA).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gw = register("light_blue_carpet", new CarpetBlock(DyeColor.d, Block.Settings.of(Material.CARPET, MaterialColor.LIGHT_BLUE).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gx = register("yellow_carpet", new CarpetBlock(DyeColor.e, Block.Settings.of(Material.CARPET, MaterialColor.YELLOW).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gy = register("lime_carpet", new CarpetBlock(DyeColor.f, Block.Settings.of(Material.CARPET, MaterialColor.LIME).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gz = register("pink_carpet", new CarpetBlock(DyeColor.g, Block.Settings.of(Material.CARPET, MaterialColor.PINK).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gA = register("gray_carpet", new CarpetBlock(DyeColor.h, Block.Settings.of(Material.CARPET, MaterialColor.GRAY).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gB = register("light_gray_carpet", new CarpetBlock(DyeColor.i, Block.Settings.of(Material.CARPET, MaterialColor.LIGHT_GRAY).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gC = register("cyan_carpet", new CarpetBlock(DyeColor.j, Block.Settings.of(Material.CARPET, MaterialColor.CYAN).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gD = register("purple_carpet", new CarpetBlock(DyeColor.k, Block.Settings.of(Material.CARPET, MaterialColor.PURPLE).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gE = register("blue_carpet", new CarpetBlock(DyeColor.l, Block.Settings.of(Material.CARPET, MaterialColor.BLUE).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gF = register("brown_carpet", new CarpetBlock(DyeColor.m, Block.Settings.of(Material.CARPET, MaterialColor.BROWN).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gG = register("green_carpet", new CarpetBlock(DyeColor.n, Block.Settings.of(Material.CARPET, MaterialColor.GREEN).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gH = register("red_carpet", new CarpetBlock(DyeColor.o, Block.Settings.of(Material.CARPET, MaterialColor.RED).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gI = register("black_carpet", new CarpetBlock(DyeColor.BLACK, Block.Settings.of(Material.CARPET, MaterialColor.BLACK).strength(0.1f).sounds(BlockSoundGroup.WOOL)));
        gJ = register("terracotta", new Block(Block.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(1.25f, 4.2f)));
        gK = register("coal_block", new Block(Block.Settings.of(Material.STONE, MaterialColor.BLACK).strength(5.0f, 6.0f)));
        gL = register("packed_ice", new Block(Block.Settings.of(Material.PACKED_ICE).friction(0.98f).strength(0.5f).sounds(BlockSoundGroup.GLASS)));
        gM = register("sunflower", new TallFlowerBlock(Block.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        gN = register("lilac", new TallFlowerBlock(Block.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        gO = register("rose_bush", new TallFlowerBlock(Block.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        gP = register("peony", new TallFlowerBlock(Block.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        gQ = register("tall_grass", new TallPlantBlock(Block.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        gR = register("large_fern", new TallPlantBlock(Block.Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS)));
        gS = register("white_banner", new BannerBlock(DyeColor.a, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        gT = register("orange_banner", new BannerBlock(DyeColor.b, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        gU = register("magenta_banner", new BannerBlock(DyeColor.c, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        gV = register("light_blue_banner", new BannerBlock(DyeColor.d, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        gW = register("yellow_banner", new BannerBlock(DyeColor.e, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        gX = register("lime_banner", new BannerBlock(DyeColor.f, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        gY = register("pink_banner", new BannerBlock(DyeColor.g, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        gZ = register("gray_banner", new BannerBlock(DyeColor.h, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        ha = register("light_gray_banner", new BannerBlock(DyeColor.i, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        hb = register("cyan_banner", new BannerBlock(DyeColor.j, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        hc = register("purple_banner", new BannerBlock(DyeColor.k, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        hd = register("blue_banner", new BannerBlock(DyeColor.l, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        he = register("brown_banner", new BannerBlock(DyeColor.m, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        hf = register("green_banner", new BannerBlock(DyeColor.n, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        hg = register("red_banner", new BannerBlock(DyeColor.o, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        hh = register("black_banner", new BannerBlock(DyeColor.BLACK, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        hi = register("white_wall_banner", new WallBannerBlock(DyeColor.a, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.gS)));
        hj = register("orange_wall_banner", new WallBannerBlock(DyeColor.b, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.gT)));
        hk = register("magenta_wall_banner", new WallBannerBlock(DyeColor.c, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.gU)));
        hl = register("light_blue_wall_banner", new WallBannerBlock(DyeColor.d, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.gV)));
        hm = register("yellow_wall_banner", new WallBannerBlock(DyeColor.e, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.gW)));
        hn = register("lime_wall_banner", new WallBannerBlock(DyeColor.f, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.gX)));
        ho = register("pink_wall_banner", new WallBannerBlock(DyeColor.g, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.gY)));
        hp = register("gray_wall_banner", new WallBannerBlock(DyeColor.h, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.gZ)));
        hq = register("light_gray_wall_banner", new WallBannerBlock(DyeColor.i, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.ha)));
        hr = register("cyan_wall_banner", new WallBannerBlock(DyeColor.j, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.hb)));
        hs = register("purple_wall_banner", new WallBannerBlock(DyeColor.k, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.hc)));
        ht = register("blue_wall_banner", new WallBannerBlock(DyeColor.l, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.hd)));
        hu = register("brown_wall_banner", new WallBannerBlock(DyeColor.m, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.he)));
        hv = register("green_wall_banner", new WallBannerBlock(DyeColor.n, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.hf)));
        hw = register("red_wall_banner", new WallBannerBlock(DyeColor.o, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.hg)));
        hx = register("black_wall_banner", new WallBannerBlock(DyeColor.BLACK, Block.Settings.of(Material.WOOD).noCollision().strength(1.0f).sounds(BlockSoundGroup.WOOD).dropsLike(Blocks.hh)));
        hy = register("red_sandstone", new Block(Block.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(0.8f)));
        hz = register("chiseled_red_sandstone", new Block(Block.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(0.8f)));
        hA = register("cut_red_sandstone", new Block(Block.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(0.8f)));
        hB = register("red_sandstone_stairs", new StairsBlock(Blocks.hy.getDefaultState(), Block.Settings.copy(Blocks.hy)));
        hC = register("oak_slab", new SlabBlock(Block.Settings.of(Material.WOOD, MaterialColor.WOOD).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        hD = register("spruce_slab", new SlabBlock(Block.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        hE = register("birch_slab", new SlabBlock(Block.Settings.of(Material.WOOD, MaterialColor.SAND).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        hF = register("jungle_slab", new SlabBlock(Block.Settings.of(Material.WOOD, MaterialColor.DIRT).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        hG = register("acacia_slab", new SlabBlock(Block.Settings.of(Material.WOOD, MaterialColor.ORANGE).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        hH = register("dark_oak_slab", new SlabBlock(Block.Settings.of(Material.WOOD, MaterialColor.BROWN).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        hI = register("stone_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.STONE).strength(2.0f, 6.0f)));
        hJ = register("smooth_stone_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.STONE).strength(2.0f, 6.0f)));
        hK = register("sandstone_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.SAND).strength(2.0f, 6.0f)));
        hL = register("cut_sandstone_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.SAND).strength(2.0f, 6.0f)));
        hM = register("petrified_oak_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.WOOD).strength(2.0f, 6.0f)));
        hN = register("cobblestone_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.STONE).strength(2.0f, 6.0f)));
        hO = register("brick_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.RED).strength(2.0f, 6.0f)));
        hP = register("stone_brick_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.STONE).strength(2.0f, 6.0f)));
        hQ = register("nether_brick_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.NETHER).strength(2.0f, 6.0f)));
        hR = register("quartz_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(2.0f, 6.0f)));
        hS = register("red_sandstone_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(2.0f, 6.0f)));
        hT = register("cut_red_sandstone_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(2.0f, 6.0f)));
        hU = register("purpur_slab", new SlabBlock(Block.Settings.of(Material.STONE, MaterialColor.MAGENTA).strength(2.0f, 6.0f)));
        hV = register("smooth_stone", new Block(Block.Settings.of(Material.STONE, MaterialColor.STONE).strength(2.0f, 6.0f)));
        hW = register("smooth_sandstone", new Block(Block.Settings.of(Material.STONE, MaterialColor.SAND).strength(2.0f, 6.0f)));
        hX = register("smooth_quartz", new Block(Block.Settings.of(Material.STONE, MaterialColor.QUARTZ).strength(2.0f, 6.0f)));
        hY = register("smooth_red_sandstone", new Block(Block.Settings.of(Material.STONE, MaterialColor.ORANGE).strength(2.0f, 6.0f)));
        hZ = register("spruce_fence_gate", new FenceGateBlock(Block.Settings.of(Material.WOOD, Blocks.o.materialColor).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        ia = register("birch_fence_gate", new FenceGateBlock(Block.Settings.of(Material.WOOD, Blocks.p.materialColor).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        ib = register("jungle_fence_gate", new FenceGateBlock(Block.Settings.of(Material.WOOD, Blocks.q.materialColor).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        ic = register("acacia_fence_gate", new FenceGateBlock(Block.Settings.of(Material.WOOD, Blocks.r.materialColor).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        id = register("dark_oak_fence_gate", new FenceGateBlock(Block.Settings.of(Material.WOOD, Blocks.s.materialColor).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        ie = register("spruce_fence", new FenceBlock(Block.Settings.of(Material.WOOD, Blocks.o.materialColor).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        if_ = register("birch_fence", new FenceBlock(Block.Settings.of(Material.WOOD, Blocks.p.materialColor).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        ig = register("jungle_fence", new FenceBlock(Block.Settings.of(Material.WOOD, Blocks.q.materialColor).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        ih = register("acacia_fence", new FenceBlock(Block.Settings.of(Material.WOOD, Blocks.r.materialColor).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        ii = register("dark_oak_fence", new FenceBlock(Block.Settings.of(Material.WOOD, Blocks.s.materialColor).strength(2.0f, 3.0f).sounds(BlockSoundGroup.WOOD)));
        ij = register("spruce_door", new DoorBlock(Block.Settings.of(Material.WOOD, Blocks.o.materialColor).strength(3.0f).sounds(BlockSoundGroup.WOOD)));
        ik = register("birch_door", new DoorBlock(Block.Settings.of(Material.WOOD, Blocks.p.materialColor).strength(3.0f).sounds(BlockSoundGroup.WOOD)));
        il = register("jungle_door", new DoorBlock(Block.Settings.of(Material.WOOD, Blocks.q.materialColor).strength(3.0f).sounds(BlockSoundGroup.WOOD)));
        im = register("acacia_door", new DoorBlock(Block.Settings.of(Material.WOOD, Blocks.r.materialColor).strength(3.0f).sounds(BlockSoundGroup.WOOD)));
        in = register("dark_oak_door", new DoorBlock(Block.Settings.of(Material.WOOD, Blocks.s.materialColor).strength(3.0f).sounds(BlockSoundGroup.WOOD)));
        io = register("end_rod", new EndRodBlock(Block.Settings.of(Material.PART).breakInstantly().lightLevel(14).sounds(BlockSoundGroup.WOOD)));
        ip = register("chorus_plant", new ChorusPlantBlock(Block.Settings.of(Material.PLANT, MaterialColor.PURPLE).strength(0.4f).sounds(BlockSoundGroup.WOOD)));
        iq = register("chorus_flower", new ChorusFlowerBlock((ChorusPlantBlock)Blocks.ip, Block.Settings.of(Material.PLANT, MaterialColor.PURPLE).ticksRandomly().strength(0.4f).sounds(BlockSoundGroup.WOOD)));
        ir = register("purpur_block", new Block(Block.Settings.of(Material.STONE, MaterialColor.MAGENTA).strength(1.5f, 6.0f)));
        is = register("purpur_pillar", new PillarBlock(Block.Settings.of(Material.STONE, MaterialColor.MAGENTA).strength(1.5f, 6.0f)));
        it = register("purpur_stairs", new StairsBlock(Blocks.ir.getDefaultState(), Block.Settings.copy(Blocks.ir)));
        iu = register("end_stone_bricks", new Block(Block.Settings.of(Material.STONE, MaterialColor.SAND).strength(0.8f)));
        iv = register("beetroots", new BeetrootsBlock(Block.Settings.of(Material.PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.CROP)));
        iw = register("grass_path", new GrassPathBlock(Block.Settings.of(Material.EARTH).strength(0.65f).sounds(BlockSoundGroup.GRASS)));
        ix = register("end_gateway", new EndGatewayBlock(Block.Settings.of(Material.PORTAL, MaterialColor.BLACK).noCollision().lightLevel(15).strength(-1.0f, 3600000.0f).dropsNothing()));
        iy = register("repeating_command_block", new CommandBlock(Block.Settings.of(Material.METAL, MaterialColor.PURPLE).strength(-1.0f, 3600000.0f).dropsNothing()));
        iz = register("chain_command_block", new CommandBlock(Block.Settings.of(Material.METAL, MaterialColor.GREEN).strength(-1.0f, 3600000.0f).dropsNothing()));
        iA = register("frosted_ice", new FrostedIceBlock(Block.Settings.of(Material.ICE).friction(0.98f).ticksRandomly().strength(0.5f).sounds(BlockSoundGroup.GLASS)));
        iB = register("magma_block", new MagmaBlock(Block.Settings.of(Material.STONE, MaterialColor.NETHER).lightLevel(3).ticksRandomly().strength(0.5f)));
        iC = register("nether_wart_block", new Block(Block.Settings.of(Material.ORGANIC, MaterialColor.RED).strength(1.0f).sounds(BlockSoundGroup.WOOD)));
        iD = register("red_nether_bricks", new Block(Block.Settings.of(Material.STONE, MaterialColor.NETHER).strength(2.0f, 6.0f)));
        iE = register("bone_block", new PillarBlock(Block.Settings.of(Material.STONE, MaterialColor.SAND).strength(2.0f)));
        iF = register("structure_void", new StructureVoidBlock(Block.Settings.of(Material.STRUCTURE_VOID).noCollision().dropsNothing()));
        iG = register("observer", new ObserverBlock(Block.Settings.of(Material.STONE).strength(3.0f)));
        iH = register("shulker_box", new ShulkerBoxBlock(null, Block.Settings.of(Material.SHULKER_BOX).strength(2.0f).hasDynamicBounds()));
        iI = register("white_shulker_box", new ShulkerBoxBlock(DyeColor.a, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.WHITE).strength(2.0f).hasDynamicBounds()));
        iJ = register("orange_shulker_box", new ShulkerBoxBlock(DyeColor.b, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.ORANGE).strength(2.0f).hasDynamicBounds()));
        iK = register("magenta_shulker_box", new ShulkerBoxBlock(DyeColor.c, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.MAGENTA).strength(2.0f).hasDynamicBounds()));
        iL = register("light_blue_shulker_box", new ShulkerBoxBlock(DyeColor.d, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.LIGHT_BLUE).strength(2.0f).hasDynamicBounds()));
        iM = register("yellow_shulker_box", new ShulkerBoxBlock(DyeColor.e, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.YELLOW).strength(2.0f).hasDynamicBounds()));
        iN = register("lime_shulker_box", new ShulkerBoxBlock(DyeColor.f, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.LIME).strength(2.0f).hasDynamicBounds()));
        iO = register("pink_shulker_box", new ShulkerBoxBlock(DyeColor.g, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.PINK).strength(2.0f).hasDynamicBounds()));
        iP = register("gray_shulker_box", new ShulkerBoxBlock(DyeColor.h, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.GRAY).strength(2.0f).hasDynamicBounds()));
        iQ = register("light_gray_shulker_box", new ShulkerBoxBlock(DyeColor.i, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.LIGHT_GRAY).strength(2.0f).hasDynamicBounds()));
        iR = register("cyan_shulker_box", new ShulkerBoxBlock(DyeColor.j, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.CYAN).strength(2.0f).hasDynamicBounds()));
        iS = register("purple_shulker_box", new ShulkerBoxBlock(DyeColor.k, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.PURPLE_TERRACOTTA).strength(2.0f).hasDynamicBounds()));
        iT = register("blue_shulker_box", new ShulkerBoxBlock(DyeColor.l, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.BLUE).strength(2.0f).hasDynamicBounds()));
        iU = register("brown_shulker_box", new ShulkerBoxBlock(DyeColor.m, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.BROWN).strength(2.0f).hasDynamicBounds()));
        iV = register("green_shulker_box", new ShulkerBoxBlock(DyeColor.n, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.GREEN).strength(2.0f).hasDynamicBounds()));
        iW = register("red_shulker_box", new ShulkerBoxBlock(DyeColor.o, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.RED).strength(2.0f).hasDynamicBounds()));
        iX = register("black_shulker_box", new ShulkerBoxBlock(DyeColor.BLACK, Block.Settings.of(Material.SHULKER_BOX, MaterialColor.BLACK).strength(2.0f).hasDynamicBounds()));
        iY = register("white_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.a).strength(1.4f)));
        iZ = register("orange_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.b).strength(1.4f)));
        ja = register("magenta_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.c).strength(1.4f)));
        jb = register("light_blue_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.d).strength(1.4f)));
        jc = register("yellow_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.e).strength(1.4f)));
        jd = register("lime_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.f).strength(1.4f)));
        je = register("pink_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.g).strength(1.4f)));
        jf = register("gray_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.h).strength(1.4f)));
        jg = register("light_gray_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.i).strength(1.4f)));
        jh = register("cyan_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.j).strength(1.4f)));
        ji = register("purple_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.k).strength(1.4f)));
        jj = register("blue_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.l).strength(1.4f)));
        jk = register("brown_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.m).strength(1.4f)));
        jl = register("green_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.n).strength(1.4f)));
        jm = register("red_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.o).strength(1.4f)));
        jn = register("black_glazed_terracotta", new GlazedTerracottaBlock(Block.Settings.of(Material.STONE, DyeColor.BLACK).strength(1.4f)));
        jo = register("white_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.a).strength(1.8f)));
        jp = register("orange_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.b).strength(1.8f)));
        jq = register("magenta_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.c).strength(1.8f)));
        jr = register("light_blue_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.d).strength(1.8f)));
        js = register("yellow_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.e).strength(1.8f)));
        jt = register("lime_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.f).strength(1.8f)));
        ju = register("pink_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.g).strength(1.8f)));
        jv = register("gray_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.h).strength(1.8f)));
        jw = register("light_gray_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.i).strength(1.8f)));
        jx = register("cyan_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.j).strength(1.8f)));
        jy = register("purple_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.k).strength(1.8f)));
        jz = register("blue_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.l).strength(1.8f)));
        jA = register("brown_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.m).strength(1.8f)));
        jB = register("green_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.n).strength(1.8f)));
        jC = register("red_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.o).strength(1.8f)));
        jD = register("black_concrete", new Block(Block.Settings.of(Material.STONE, DyeColor.BLACK).strength(1.8f)));
        jE = register("white_concrete_powder", new ConcretePowderBlock(Blocks.jo, Block.Settings.of(Material.SAND, DyeColor.a).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jF = register("orange_concrete_powder", new ConcretePowderBlock(Blocks.jp, Block.Settings.of(Material.SAND, DyeColor.b).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jG = register("magenta_concrete_powder", new ConcretePowderBlock(Blocks.jq, Block.Settings.of(Material.SAND, DyeColor.c).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jH = register("light_blue_concrete_powder", new ConcretePowderBlock(Blocks.jr, Block.Settings.of(Material.SAND, DyeColor.d).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jI = register("yellow_concrete_powder", new ConcretePowderBlock(Blocks.js, Block.Settings.of(Material.SAND, DyeColor.e).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jJ = register("lime_concrete_powder", new ConcretePowderBlock(Blocks.jt, Block.Settings.of(Material.SAND, DyeColor.f).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jK = register("pink_concrete_powder", new ConcretePowderBlock(Blocks.ju, Block.Settings.of(Material.SAND, DyeColor.g).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jL = register("gray_concrete_powder", new ConcretePowderBlock(Blocks.jv, Block.Settings.of(Material.SAND, DyeColor.h).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jM = register("light_gray_concrete_powder", new ConcretePowderBlock(Blocks.jw, Block.Settings.of(Material.SAND, DyeColor.i).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jN = register("cyan_concrete_powder", new ConcretePowderBlock(Blocks.jx, Block.Settings.of(Material.SAND, DyeColor.j).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jO = register("purple_concrete_powder", new ConcretePowderBlock(Blocks.jy, Block.Settings.of(Material.SAND, DyeColor.k).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jP = register("blue_concrete_powder", new ConcretePowderBlock(Blocks.jz, Block.Settings.of(Material.SAND, DyeColor.l).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jQ = register("brown_concrete_powder", new ConcretePowderBlock(Blocks.jA, Block.Settings.of(Material.SAND, DyeColor.m).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jR = register("green_concrete_powder", new ConcretePowderBlock(Blocks.jB, Block.Settings.of(Material.SAND, DyeColor.n).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jS = register("red_concrete_powder", new ConcretePowderBlock(Blocks.jC, Block.Settings.of(Material.SAND, DyeColor.o).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jT = register("black_concrete_powder", new ConcretePowderBlock(Blocks.jD, Block.Settings.of(Material.SAND, DyeColor.BLACK).strength(0.5f).sounds(BlockSoundGroup.SAND)));
        jU = register("kelp", new KelpBlock(Block.Settings.of(Material.UNDERWATER_PLANT).noCollision().ticksRandomly().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        jV = register("kelp_plant", new KelpPlantBlock((KelpBlock)Blocks.jU, Block.Settings.of(Material.UNDERWATER_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        jW = register("dried_kelp_block", new Block(Block.Settings.of(Material.ORGANIC, MaterialColor.GREEN).strength(0.5f, 2.5f).sounds(BlockSoundGroup.GRASS)));
        jX = register("turtle_egg", new TurtleEggBlock(Block.Settings.of(Material.DRAGON_EGG, MaterialColor.SAND).strength(0.5f).sounds(BlockSoundGroup.METAL).ticksRandomly()));
        jY = register("dead_tube_coral_block", new Block(Block.Settings.of(Material.STONE, MaterialColor.GRAY).strength(1.5f, 6.0f)));
        jZ = register("dead_brain_coral_block", new Block(Block.Settings.of(Material.STONE, MaterialColor.GRAY).strength(1.5f, 6.0f)));
        ka = register("dead_bubble_coral_block", new Block(Block.Settings.of(Material.STONE, MaterialColor.GRAY).strength(1.5f, 6.0f)));
        kb = register("dead_fire_coral_block", new Block(Block.Settings.of(Material.STONE, MaterialColor.GRAY).strength(1.5f, 6.0f)));
        kc = register("dead_horn_coral_block", new Block(Block.Settings.of(Material.STONE, MaterialColor.GRAY).strength(1.5f, 6.0f)));
        kd = register("tube_coral_block", new CoralBlockBlock(Blocks.jY, Block.Settings.of(Material.STONE, MaterialColor.BLUE).strength(1.5f, 6.0f).sounds(BlockSoundGroup.CORAL)));
        ke = register("brain_coral_block", new CoralBlockBlock(Blocks.jZ, Block.Settings.of(Material.STONE, MaterialColor.PINK).strength(1.5f, 6.0f).sounds(BlockSoundGroup.CORAL)));
        kf = register("bubble_coral_block", new CoralBlockBlock(Blocks.ka, Block.Settings.of(Material.STONE, MaterialColor.PURPLE).strength(1.5f, 6.0f).sounds(BlockSoundGroup.CORAL)));
        kg = register("fire_coral_block", new CoralBlockBlock(Blocks.kb, Block.Settings.of(Material.STONE, MaterialColor.RED).strength(1.5f, 6.0f).sounds(BlockSoundGroup.CORAL)));
        kh = register("horn_coral_block", new CoralBlockBlock(Blocks.kc, Block.Settings.of(Material.STONE, MaterialColor.YELLOW).strength(1.5f, 6.0f).sounds(BlockSoundGroup.CORAL)));
        ki = register("dead_tube_coral", new DeadCoralBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
        kj = register("dead_brain_coral", new DeadCoralBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
        kk = register("dead_bubble_coral", new DeadCoralBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
        kl = register("dead_fire_coral", new DeadCoralBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
        km = register("dead_horn_coral", new DeadCoralBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
        kn = register("tube_coral", new CoralBlock(Blocks.ki, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.BLUE).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        ko = register("brain_coral", new CoralBlock(Blocks.kj, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.PINK).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        kp = register("bubble_coral", new CoralBlock(Blocks.kk, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.PURPLE).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        kq = register("fire_coral", new CoralBlock(Blocks.kl, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.RED).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        kr = register("horn_coral", new CoralBlock(Blocks.km, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.YELLOW).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        ks = register("dead_tube_coral_fan", new DeadCoralFanBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
        kt = register("dead_brain_coral_fan", new DeadCoralFanBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
        ku = register("dead_bubble_coral_fan", new DeadCoralFanBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
        kv = register("dead_fire_coral_fan", new DeadCoralFanBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
        kw = register("dead_horn_coral_fan", new DeadCoralFanBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly()));
        kx = register("tube_coral_fan", new CoralTubeFanBlock(Blocks.ks, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.BLUE).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        ky = register("brain_coral_fan", new CoralTubeFanBlock(Blocks.kt, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.PINK).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        kz = register("bubble_coral_fan", new CoralTubeFanBlock(Blocks.ku, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.PURPLE).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        kA = register("fire_coral_fan", new CoralTubeFanBlock(Blocks.kv, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.RED).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        kB = register("horn_coral_fan", new CoralTubeFanBlock(Blocks.kw, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.YELLOW).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS)));
        kC = register("dead_tube_coral_wall_fan", new DeadCoralWallFanBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly().dropsLike(Blocks.ks)));
        kD = register("dead_brain_coral_wall_fan", new DeadCoralWallFanBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly().dropsLike(Blocks.kt)));
        kE = register("dead_bubble_coral_wall_fan", new DeadCoralWallFanBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly().dropsLike(Blocks.ku)));
        kF = register("dead_fire_coral_wall_fan", new DeadCoralWallFanBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly().dropsLike(Blocks.kv)));
        kG = register("dead_horn_coral_wall_fan", new DeadCoralWallFanBlock(Block.Settings.of(Material.STONE, MaterialColor.GRAY).noCollision().breakInstantly().dropsLike(Blocks.kw)));
        kH = register("tube_coral_wall_fan", new CoralWallFanBlock(Blocks.kC, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.BLUE).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS).dropsLike(Blocks.kx)));
        kI = register("brain_coral_wall_fan", new CoralWallFanBlock(Blocks.kD, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.PINK).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS).dropsLike(Blocks.ky)));
        kJ = register("bubble_coral_wall_fan", new CoralWallFanBlock(Blocks.kE, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.PURPLE).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS).dropsLike(Blocks.kz)));
        kK = register("fire_coral_wall_fan", new CoralWallFanBlock(Blocks.kF, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.RED).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS).dropsLike(Blocks.kA)));
        kL = register("horn_coral_wall_fan", new CoralWallFanBlock(Blocks.kG, Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.YELLOW).noCollision().breakInstantly().sounds(BlockSoundGroup.WET_GRASS).dropsLike(Blocks.kB)));
        kM = register("sea_pickle", new SeaPickleBlock(Block.Settings.of(Material.UNDERWATER_PLANT, MaterialColor.GREEN).lightLevel(3).sounds(BlockSoundGroup.SLIME)));
        kN = register("blue_ice", new TransparentBlock(Block.Settings.of(Material.PACKED_ICE).strength(2.8f).friction(0.989f).sounds(BlockSoundGroup.GLASS)));
        kO = register("conduit", new ConduitBlock(Block.Settings.of(Material.GLASS, MaterialColor.DIAMOND).strength(3.0f).lightLevel(15)));
        kP = register("bamboo_sapling", new BambooSaplingBlock(Block.Settings.of(Material.BAMBOO_SAPLING).ticksRandomly().breakInstantly().noCollision().strength(1.0f).sounds(BlockSoundGroup.BAMBOO_SAPLING)));
        kQ = register("bamboo", new BambooBlock(Block.Settings.of(Material.BAMBOO, MaterialColor.FOLIAGE).ticksRandomly().breakInstantly().strength(1.0f).sounds(BlockSoundGroup.BAMBOO)));
        kR = register("potted_bamboo", new FlowerPotBlock(Blocks.kQ, Block.Settings.of(Material.PART).breakInstantly()));
        kS = register("void_air", new AirBlock(Block.Settings.of(Material.AIR).noCollision().dropsNothing()));
        kT = register("cave_air", new AirBlock(Block.Settings.of(Material.AIR).noCollision().dropsNothing()));
        kU = register("bubble_column", new BubbleColumnBlock(Block.Settings.of(Material.BUBBLE_COLUMN).noCollision().dropsNothing()));
        kV = register("polished_granite_stairs", new StairsBlock(Blocks.d.getDefaultState(), Block.Settings.copy(Blocks.d)));
        kW = register("smooth_red_sandstone_stairs", new StairsBlock(Blocks.hY.getDefaultState(), Block.Settings.copy(Blocks.hY)));
        kX = register("mossy_stone_brick_stairs", new StairsBlock(Blocks.do_.getDefaultState(), Block.Settings.copy(Blocks.do_)));
        kY = register("polished_diorite_stairs", new StairsBlock(Blocks.f.getDefaultState(), Block.Settings.copy(Blocks.f)));
        kZ = register("mossy_cobblestone_stairs", new StairsBlock(Blocks.bI.getDefaultState(), Block.Settings.copy(Blocks.bI)));
        la = register("end_stone_brick_stairs", new StairsBlock(Blocks.iu.getDefaultState(), Block.Settings.copy(Blocks.iu)));
        lb = register("stone_stairs", new StairsBlock(Blocks.b.getDefaultState(), Block.Settings.copy(Blocks.b)));
        lc = register("smooth_sandstone_stairs", new StairsBlock(Blocks.hW.getDefaultState(), Block.Settings.copy(Blocks.hW)));
        ld = register("smooth_quartz_stairs", new StairsBlock(Blocks.hX.getDefaultState(), Block.Settings.copy(Blocks.hX)));
        le = register("granite_stairs", new StairsBlock(Blocks.c.getDefaultState(), Block.Settings.copy(Blocks.c)));
        lf = register("andesite_stairs", new StairsBlock(Blocks.g.getDefaultState(), Block.Settings.copy(Blocks.g)));
        lg = register("red_nether_brick_stairs", new StairsBlock(Blocks.iD.getDefaultState(), Block.Settings.copy(Blocks.iD)));
        lh = register("polished_andesite_stairs", new StairsBlock(Blocks.h.getDefaultState(), Block.Settings.copy(Blocks.h)));
        li = register("diorite_stairs", new StairsBlock(Blocks.e.getDefaultState(), Block.Settings.copy(Blocks.e)));
        lj = register("polished_granite_slab", new SlabBlock(Block.Settings.copy(Blocks.d)));
        lk = register("smooth_red_sandstone_slab", new SlabBlock(Block.Settings.copy(Blocks.hY)));
        ll = register("mossy_stone_brick_slab", new SlabBlock(Block.Settings.copy(Blocks.do_)));
        lm = register("polished_diorite_slab", new SlabBlock(Block.Settings.copy(Blocks.f)));
        ln = register("mossy_cobblestone_slab", new SlabBlock(Block.Settings.copy(Blocks.bI)));
        lo = register("end_stone_brick_slab", new SlabBlock(Block.Settings.copy(Blocks.iu)));
        lp = register("smooth_sandstone_slab", new SlabBlock(Block.Settings.copy(Blocks.hW)));
        lq = register("smooth_quartz_slab", new SlabBlock(Block.Settings.copy(Blocks.hX)));
        lr = register("granite_slab", new SlabBlock(Block.Settings.copy(Blocks.c)));
        ls = register("andesite_slab", new SlabBlock(Block.Settings.copy(Blocks.g)));
        lt = register("red_nether_brick_slab", new SlabBlock(Block.Settings.copy(Blocks.iD)));
        lu = register("polished_andesite_slab", new SlabBlock(Block.Settings.copy(Blocks.h)));
        lv = register("diorite_slab", new SlabBlock(Block.Settings.copy(Blocks.e)));
        lw = register("brick_wall", new WallBlock(Block.Settings.copy(Blocks.bF)));
        lx = register("prismarine_wall", new WallBlock(Block.Settings.copy(Blocks.gi)));
        ly = register("red_sandstone_wall", new WallBlock(Block.Settings.copy(Blocks.hy)));
        lz = register("mossy_stone_brick_wall", new WallBlock(Block.Settings.copy(Blocks.do_)));
        lA = register("granite_wall", new WallBlock(Block.Settings.copy(Blocks.c)));
        lB = register("stone_brick_wall", new WallBlock(Block.Settings.copy(Blocks.dn)));
        lC = register("nether_brick_wall", new WallBlock(Block.Settings.copy(Blocks.dN)));
        lD = register("andesite_wall", new WallBlock(Block.Settings.copy(Blocks.g)));
        lE = register("red_nether_brick_wall", new WallBlock(Block.Settings.copy(Blocks.iD)));
        lF = register("sandstone_wall", new WallBlock(Block.Settings.copy(Blocks.as)));
        lG = register("end_stone_brick_wall", new WallBlock(Block.Settings.copy(Blocks.iu)));
        lH = register("diorite_wall", new WallBlock(Block.Settings.copy(Blocks.e)));
        lI = register("scaffolding", new ScaffoldingBlock(Block.Settings.of(Material.PART, MaterialColor.SAND).noCollision().sounds(BlockSoundGroup.SCAFFOLDING).hasDynamicBounds()));
        lJ = register("loom", new LoomBlock(Block.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
        lK = register("barrel", new BarrelBlock(Block.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
        lL = register("smoker", new SmokerBlock(Block.Settings.of(Material.STONE).strength(3.5f).lightLevel(13)));
        lM = register("blast_furnace", new BlastFurnaceBlock(Block.Settings.of(Material.STONE).strength(3.5f).lightLevel(13)));
        lN = register("cartography_table", new CartographyTableBlock(Block.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
        lO = register("fletching_table", new FletchingTableBlock(Block.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
        lP = register("grindstone", new GrindstoneBlock(Block.Settings.of(Material.ANVIL, MaterialColor.IRON).strength(2.0f, 6.0f).sounds(BlockSoundGroup.STONE)));
        lQ = register("lectern", new LecternBlock(Block.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
        lR = register("smithing_table", new SmithingTableBlock(Block.Settings.of(Material.WOOD).strength(2.5f).sounds(BlockSoundGroup.WOOD)));
        lS = register("stonecutter", new StonecutterBlock(Block.Settings.of(Material.STONE).strength(3.5f)));
        lT = register("bell", new BellBlock(Block.Settings.of(Material.METAL, MaterialColor.GOLD).strength(5.0f).sounds(BlockSoundGroup.ANVIL)));
        lU = register("lantern", new LanternBlock(Block.Settings.of(Material.METAL).strength(3.5f).sounds(BlockSoundGroup.LANTERN).lightLevel(15)));
        lV = register("campfire", new CampfireBlock(Block.Settings.of(Material.WOOD, MaterialColor.SPRUCE).strength(2.0f).sounds(BlockSoundGroup.WOOD).lightLevel(15).ticksRandomly()));
        lW = register("sweet_berry_bush", new SweetBerryBushBlock(Block.Settings.of(Material.PLANT).ticksRandomly().noCollision().sounds(BlockSoundGroup.SWEET_BERRY_BUSH)));
        lX = register("structure_block", new StructureBlock(Block.Settings.of(Material.METAL, MaterialColor.LIGHT_GRAY).strength(-1.0f, 3600000.0f).dropsNothing()));
        lY = register("jigsaw", new JigsawBlock(Block.Settings.of(Material.METAL, MaterialColor.LIGHT_GRAY).strength(-1.0f, 3600000.0f).dropsNothing()));
        lZ = register("composter", new ComposterBlock(Block.Settings.of(Material.WOOD).strength(0.6f).sounds(BlockSoundGroup.WOOD)));
        for (final Block block2 : Registry.BLOCK) {
            for (final BlockState blockState4 : block2.getStateFactory().getStates()) {
                blockState4.initShapeCache();
                Block.STATE_IDS.add(blockState4);
            }
            block2.getDropTableId();
        }
    }
}
